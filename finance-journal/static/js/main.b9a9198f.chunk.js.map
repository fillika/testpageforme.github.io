{"version":3,"sources":["components/Common/SidebarNavigation/SidebarNavigation.module.scss","components/Common/LinksInsideSidebar/LinksInsideSidebar.module.scss","container/Deposit/Deposit.module.scss","hoc/Layout/Layout.js","components/Common/Title/Title.js","components/UI/Button/Button.js","hoc/Modal/Modal.js","components/Main/CompaniesList/CompaniesList.js","components/UI/Input/Input.js","hoc/Modal/FadeBg.js","components/Common/Preloader/Preloader.js","redux/actions/actionsType.js","Modules/formValidation.js","redux/reducers/mainReducer/actions.js","container/Main/Main.js","components/Deposit/DepoDateAndAmount/DepoDateAndAmount.js","container/Deposit/DepoInnerWrapper/DepoInnerWrapper.js","redux/reducers/depositReducer/actions.js","components/Deposit/depoStats/DepoStats.js","container/Deposit/Deposit.js","components/Common/LinksInsideSidebar/LinksInsideSidebar.js","components/Common/SidebarNavigation/SidebarNavigation.js","redux/reducers/authReducer/actions.js","components/Common/Header/Header.js","container/Auth/Auth.js","App.js","serviceWorker.js","redux/reducers/mainReducer/mainReducer.js","redux/reducers/depositReducer/depositReducer.js","redux/reducers/authReducer/authReducer.js","redux/reducers/rootReducers.js","index.js","container/Main/Main.module.scss","components/Main/CompaniesList/CompaniesList.module.scss","components/Deposit/depoStats/DepoStats.module.scss","components/UI/Input/Input.module.scss","container/Auth/Auth.module.scss","hoc/Modal/Modal.module.scss","container/Deposit/DepoInnerWrapper/DepoInnerWrapper.module.scss","components/Common/Title/Title.module.scss","components/UI/Button/Button.module.scss","components/Common/Header/Header.module.scss","hoc/Layout/Layout.module.scss","components/Common/Preloader/Preloader.module.scss","components/Deposit/DepoDateAndAmount/DepoDateAndAmount.module.scss"],"names":["module","exports","Layout","className","classes","this","props","children","React","Component","Title","titleH","title","Button","cls","classses","forEach","item","push","disabled","onClick","join","name","Modal","CompaniesList","header","Object","keys","companies","map","index","company","row","key","datatype","CompanyName","showModalHandlerDelete","count","dividendPerShare","Math","ceil","toLocaleString","companyArr","beforeTax","afterTax","currency","bt","arrItem","footer","Total","renderFooter","Input","valid","Error","InputWrapper","label","htmlFor","type","id","onChange","placeholder","autoComplete","autocomplete","value","redText","touched","errorMessage","FadeBg","Preloader","RENDER","validateControl","validation","isValid","required","trim","is","number","email","minLength","length","minMax","max","min","renderCompanies","dispatch","getState","a","async","state","mainReducer","db","firebase","database","ref","authReducer","token","update","once","then","snapshot","val","undefined","showPreloader","companyName","crc","includes","catch","err","console","error","openModal","e","modalName","modals","openCreateModal","nameForDelete","openUpdateModal","target","parentNode","querySelector","textContent","closeModal","formAddInputs","control","isFormValid","reRenderCompanies","response","Main","inputName","inputObj","getCompanyData","infoTitle","noCompany","tableWrapper","clickOnCompany","addSection","isOpenModalAddCompany","Fragment","MainModalTitle","onSubmit","createCompany","renderInputs","selectHandler","isOpenModalUpdateCompany","deleteModal","modalDeleteBtnBox","deleteCompany","updateCompany","connect","JSON","parse","stringify","preventDefault","create","set","remove","assign","formUpdInputs","parent","inputsObj","Inputs","getCompanyDataChangeHandler","DepoDateAndAmount","newDep","depo","sort","b","Date","date","obj","data-currency","data-year","getFullYear","data-id","li","day","getDate","month","toLocaleDateString","slice","amount","DepoInnerWrapper","isOpen","showMoreHandler","setState","year","currName","currencyArr","DepoCurrency","renderDeposit","deposit","depositReducer","rub","usd","mainTitle","totalContainer","currencyObj","currencyBox","Deposit","onChangeHandler","createDeposit","inputsBox","renderInpus","selected","depositData","handleChangeDate","datePicker","maxDate","select","depoAndStatistic","noDeposit","DepoYear","showModal","delModalTitle","modalButtons","deleteDeposit","formAddDepoInputs","amountInput","url","data","random","result","filter","log","currentTarget","dataset","inputs","controlName","LinksInsideSidebar","to","SidebarNavigation","showError","message","setTimeout","logout","auth","signOut","localStorage","removeItem","Header","logoutLink","Auth","input","authChangeHandler","greetings","authForm","renderInput","btnContainer","loginHandler","bind","authInputs","isLogin","inputEmail","inputPassword","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","user","currentUser","emailVerified","login","uid","entryTime","metadata","setItem","sendEmailVerification","App","autoLogin","exact","path","component","getItem","Boolean","window","location","hostname","match","createOptionForAddInputs","errMessage","config","createOptionForUpdInputs","initState","combineReducers","action","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9a9198f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidebarNavigation\":\"SidebarNavigation_SidebarNavigation__1S-ox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinksInsideSidebar\":\"LinksInsideSidebar_LinksInsideSidebar__E0jTb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Deposit\":\"Deposit_Deposit__RlOFi\",\"infoTitle\":\"Deposit_infoTitle__1o1Ty\",\"depoAndStatistic\":\"Deposit_depoAndStatistic__3URpZ\",\"addInputWrapper\":\"Deposit_addInputWrapper__10Vxq\",\"inputsBox\":\"Deposit_inputsBox__2QTBw\",\"datePicker\":\"Deposit_datePicker__2Af0v\",\"select\":\"Deposit_select__TmJnj\",\"DepoYear\":\"Deposit_DepoYear__2IYYy\",\"noDeposit\":\"Deposit_noDeposit__1RJZw\",\"modalButtons\":\"Deposit_modalButtons__vGO6T\",\"delModalTitle\":\"Deposit_delModalTitle__-lxPU\"};","import React from \"react\";\r\nimport classes from \"./Layout.module.scss\";\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n\treturn (\r\n\t\t<div className={classes.Layout}>\r\n\t\t\t{this.props.children}\r\n\t\t</div>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport classes from './Title.module.scss'\r\n\r\nexport const Title = props => {\r\n\treturn (\r\n\t\t<div className={classes.Title}>\r\n\t\t\t<h4 className={classes.titleH}>\r\n\t\t\t\t{props.title}\r\n\t\t\t</h4>\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Button.module.scss'\r\n\r\nexport const Button = props => {\r\n\tconst cls = [classes.Button];\r\n\tprops.classses.forEach(item => cls.push(classes[item]));\r\n\r\n\treturn (\r\n\t\t<button disabled={!props.disabled} onClick={props.onClick} className={cls.join(' ')}>\r\n\t\t\t{props.name}\r\n\t\t</button>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Modal.module.scss'\r\n\r\nexport const Modal = props => {\r\n\tconst cls = [classes.Modal];\r\n\r\n\tif (!props.classes) {\r\n\r\n\t} else {\r\n\t\tprops.classes.forEach(item => cls.push(classes[item]));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={cls.join(' ')}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from \"./CompaniesList.module.scss\";\r\n\r\nconst CompaniesList = props => {\r\n\t// Рендер футера с налогами\r\n\tfunction renderFooter(companies) {\r\n\t\tconst companyArr = [];\r\n\r\n\t\tlet beforeTax = 0;\r\n\t\tlet afterTax = 0;\r\n\r\n\t\tfor (let name in companies) {\r\n\t\t\tconst company = companies[name];\r\n\r\n\t\t\tif (props.currency !== company.currency) continue;\r\n\r\n\t\t\tconst bt = company.count * company.dividendPerShare;\r\n\t\t\tconst at = bt - (bt * 0.13);\r\n\r\n\t\t\tbeforeTax += bt;\r\n\t\t\tafterTax += at;\r\n\t\t}\r\n\r\n\t\tconst arrItem = (\r\n\t\t\t<div key={afterTax} className={classes.footer}>\r\n\t\t\t\t<div className={classes.Total}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\tПрибыль до вычета налогов\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{(Math.ceil((beforeTax) * 100) / 100).toLocaleString('ru')}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={classes.Total}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\tПрибыль после вычета налогов\r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t<span className={classes.afterTax}>\r\n\t\t\t\t\t\t\t{(Math.ceil((afterTax) * 100) / 100).toLocaleString('ru')}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tcompanyArr.push(arrItem);\r\n\t\treturn companyArr\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.CompaniesList}>\r\n\t\t\t<div className={classes.header}>\r\n\t\t\t\t<span>Имя компании</span>\r\n\t\t\t\t<span>Акции </span>\r\n\t\t\t\t<span>Дивиденд</span>\r\n\t\t\t\t<span>Прибыль (год)</span>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tObject.keys(props.companies).map((name, index) => {\r\n\t\t\t\t\tconst company = props.companies[name];\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className={classes.row} key={index}>\r\n\t\t\t\t\t\t\t<span datatype=\"name\" className={classes.CompanyName}\r\n\t\t\t\t\t\t\t\t  onClick={props.showModalHandlerDelete}>{name}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span datatype=\"count\">\r\n\t\t\t\t\t\t\t\t{(1 * company.count)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tdatatype=\"dividendPerShare\">{(+company.dividendPerShare)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{Math.ceil((company.count * company.dividendPerShare * 100) / 100).toLocaleString('ru')}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\trenderFooter(props.companies)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default CompaniesList;\r\n","import React from \"react\";\r\nimport classes from './Input.module.scss'\r\n\r\nexport const Input = props => {\r\n\tconst cls = [classes.Input];\r\n\r\n\tif (!props.classes) {\r\n\t} else {\r\n\t\tprops.classes.forEach(item => cls.push(classes[item]))\r\n\t}\r\n\r\n\tif (!props.valid) {\r\n\t\tcls.push(classes.Error)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.InputWrapper}>\r\n\t\t\t{\r\n\t\t\t\tprops.label\r\n\t\t\t\t\t? <label\r\n\t\t\t\t\t\thtmlFor={props.htmlFor}\r\n\t\t\t\t\t>{props.label}</label>\r\n\t\t\t\t\t: null\r\n\t\t\t}\r\n\t\t\t<input\r\n\t\t\t\tclassName={cls.join(' ')}\r\n\t\t\t\ttype={props.type || 'text'}\r\n\t\t\t\tid={props.htmlFor}\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\tautoComplete={props.autocomplete}\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t/>\r\n\r\n\t\t\t<span className={classes.redText}>\r\n\t\t\t\t{\r\n\t\t\t\t\t!props.valid && props.touched\r\n\t\t\t\t\t\t? props.errorMessage || \"Введите корректное значение\"\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Modal.module.scss'\r\n\r\nexport const FadeBg = props => {\r\n\treturn (\r\n\t\t<div onClick={props.onClick} className={classes.FadeBg}/>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Preloader.module.scss'\r\n\r\nexport const Preloader = props => {\r\n\treturn (\r\n\t\t<div className={classes.Preloader}>\r\n\t\t\t<div>\r\n\t\t\t\t<div/>\r\n\t\t\t\t<div/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};","export const RENDER = \"RENDER\",\r\n\tMAIN_RENDER = \"MAIN_RENDER\",\r\n\tCURRENCY = \"CURRENCY\",\r\n\tCREATE_COMPANY = \"CREATE_COMPANY\",\r\n\tSHOW_PRELOADER = \"SHOW_PRELOADER\",\r\n\tCLOSE_PRELOADER = \"CLOSE_PRELOADER\",\r\n\tOPEN_MODAL = \"OPEN_MODAL\",\r\n\tOPEN_MODAL_UPDATE = \"OPEN_MODAL_UPDATE\",\r\n\tGET_COMPANY_DATA = \"GET_COMPANY_DATA\",\r\n\tCLOSE_MODAL = \"CLOSE_MODAL\",\r\n\tCHANGE_SELECT = \"CHANGE_SELECT\",\r\n\tON_CHANGE = \"ON_CHANGE\";\r\n\r\nexport const DEPOSIT_CLOSE_MODAL = \"DEPOSIT_CLOSE_MODAL\",\r\n\tDEPOSIT_RENDER = \"DEPOSIT_RENDER\";\r\n\r\nexport const AUTH_INPUT = \"AUTH_INPUT\",\r\n\tAUTH_LOGIN = \"AUTH_LOGIN\",\r\n\tAUTH_SHOW_ERROR = \"AUTH_SHOW_ERROR\",\r\n\tAUTH_CLOSE_ERROR = \"AUTH_CLOSE_ERROR\",\r\n\tAUTH_LOGOUT = \"AUTH_LOGOUT\",\r\n\tAUTH_AUTO_LOGIN = \"AUTH_AUTO_LOGIN\";\r\n\r\n// Тут создаю типы для actions","import is from \"is_js\";\r\n\r\n// 2 функции для инпутов на главной\r\nexport function createAddFormInputs(config, validation) {\r\n\treturn {\r\n\t\t...config,\r\n\t\tvalidation,\r\n\t\tvalid: !validation,\r\n\t\ttouched: false,\r\n\t\tvalue: \"\"\r\n\t}\r\n}\r\n\r\nexport function createUpdFormInputs(config, validation) {\r\n\treturn {\r\n\t\t...config,\r\n\t\tvalidation,\r\n\t\tvalid: true,\r\n\t\ttouched: true,\r\n\t\tvalue: \"\"\r\n\t}\r\n}\r\n\r\n// Валидация параметров из validation\r\nexport function validateControl(value, validation) {\r\n\tif (!validation) return true;\r\n\r\n\tlet isValid = true;\r\n\r\n\tif (validation.required) {\r\n\t\tisValid = value.trim() !== '' && isValid\r\n\t}\r\n\tif (validation.type === 'number') {\r\n\t\tisValid = is.number(+value) && isValid\r\n\t}\r\n\tif (validation.type === 'email') {\r\n\t\tisValid = is.email(value) && isValid\r\n\t}\r\n\tif (validation.minLength) {\r\n\t\tisValid = validation.minLength <= value.length && isValid\r\n\t}\r\n\tif (validation.minMax) {\r\n\t\tisValid = value <= validation.minMax.max && isValid;\r\n\t\tisValid = value >= validation.minMax.min && isValid\r\n\t}\r\n\r\n\treturn isValid\r\n}","import {\r\n\tCHANGE_SELECT,\r\n\tCLOSE_MODAL,\r\n\tCREATE_COMPANY,\r\n\tCURRENCY,\r\n\tGET_COMPANY_DATA,\r\n\tOPEN_MODAL_UPDATE,\r\n\tRENDER, SHOW_PRELOADER\r\n} from \"../../actions/actionsType\";\r\nimport {validateControl} from \"../../../Modules/formValidation\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\n\r\n// Асинхронная операция на сервер, рендерит список компаний\r\nexport function renderCompanies() {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst db = firebase.database();\r\n\r\n\t\t//NOTE: Перед рендерингом посылаю запрос, чтобы в пустом массиве компаний создать объект без null\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').update({});\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').once('value')\r\n\t\t\t.then(snapshot => {\r\n\t\t\t\tconst companies = snapshot.val();\r\n\r\n\t\t\t\tif (companies === null || companies === undefined) {\r\n\t\t\t\t\tdispatch({type: RENDER, showPreloader: false, companies: {}});\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst currency = [...state.currency];\r\n\r\n\t\t\t\tdispatch({type: RENDER, companies, showPreloader: false});\r\n\t\t\t\t// Ищу сколько всего валют, пушу в массив новые валюты, получаю массив без дубликатов\r\n\t\t\t\tObject.keys(companies).forEach(companyName => {\r\n\t\t\t\t\tconst crc = companies[companyName].currency;\r\n\t\t\t\t\tif (!currency.includes(crc)) currency.push(crc)\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdispatch({type: CURRENCY, currency})\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err));\r\n\t}\r\n}\r\n\r\n// Создание компании\r\nexport function createCompany(e) {\r\n\te.preventDefault();\r\n\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst db = firebase.database();\r\n\t\tconst {name, count, dividendPerShare, currency} = state.company;\r\n\t\tconst company = create(name, count, dividendPerShare, currency);\r\n\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').update(company);\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\tconst modals = {...state.modals};\r\n\t\t\t\tconst formAddInputs = {...state.formAddInputs};\r\n\t\t\t\tmodals.isOpenModalAddCompany = false;\r\n\t\t\t\tconst companies = response.val();\r\n\r\n\t\t\t\t// очищаю инпут value, чтобы после добавления компании поля были пустыми\r\n\t\t\t\tObject.keys(formAddInputs).forEach(name => {\r\n\t\t\t\t\tconst control = {...formAddInputs[name]};\r\n\t\t\t\t\tcontrol.value = \"\";\r\n\t\t\t\t\tformAddInputs[name] = control;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdispatch({type: CREATE_COMPANY, company, companies, modals, formAddInputs});\r\n\t\t\t\tdispatch(renderCompanies())\r\n\t\t\t}).catch(err => console.error(err));\r\n\r\n\t\t// Создание и пуш компании\r\n\t\tfunction create(name, count, dividendPerShare, currency) {\r\n\t\t\treturn {\r\n\t\t\t\t[name]: {\r\n\t\t\t\t\tcount,\r\n\t\t\t\t\tdividendPerShare,\r\n\t\t\t\t\tcurrency\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n//Собираю данные для редактирования/удаления компании (клик на имя компании)\r\nexport function clickOnCompany(e) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst company = Object.assign({}, state.company);\r\n\t\tconst formUpdInputs = {...state.formUpdInputs};\r\n\t\tconst count = {...formUpdInputs.count};\r\n\t\tconst dividendPerShare = {...formUpdInputs.dividendPerShare};\r\n\t\tconst parent = e.target.parentNode;\r\n\r\n\t\tcompany.name = e.target.textContent;\r\n\t\tcompany.count = count.value = parent.querySelector(\"span[datatype='count']\").textContent;\r\n\t\tcompany.dividendPerShare = dividendPerShare.value = parent.querySelector(\"span[datatype='dividendPerShare']\").textContent;\r\n\r\n\t\tformUpdInputs.count = count;\r\n\t\tformUpdInputs.dividendPerShare = dividendPerShare;\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_COMPANY_DATA,\r\n\t\t\tcompany,\r\n\t\t\tformUpdInputs,\r\n\t\t\tisFormValid: true\r\n\t\t});\r\n\r\n\t\tdispatch(openModal(e, \"isOpenModalUpdateCompany\"));\r\n\t}\r\n}\r\n\r\n// Обновление данных по компаниям\r\nexport function updateCompany() {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst db = firebase.database();\r\n\t\tconst {name, count, dividendPerShare} = state.company;\r\n\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies/' + name + '/dividendPerShare').set(dividendPerShare);\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies/' + name + '/count').set(count);\r\n\r\n\t\tdispatch({type: SHOW_PRELOADER});\r\n\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\tdispatch(reRenderCompanies(response))\r\n\t\t\t}).catch(err => console.error(err));\r\n\t}\r\n}\r\n\r\n// Удаление компаний\r\nexport function deleteCompany(name) {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst db = firebase.database();\r\n\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies/' + name).remove();\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\tdispatch({type: SHOW_PRELOADER});\r\n\r\n\t\t\t\tif (response.val() === null) {\r\n\t\t\t\t\tdb.ref('/users/' + getState().authReducer.token + '/portfolio/companies').update({});\r\n\t\t\t\t\t// currency отвечает за рендер таблицы. А чтобы её запустить, нужно,чтобы в companies было изменение тоже\r\n\t\t\t\t\tconst currency = [];\r\n\t\t\t\t\tconst companies = {};\r\n\r\n\t\t\t\t\tdispatch({type: RENDER, currency, companies, showPreloader: false});\r\n\t\t\t\t\tdispatch(closeModal(null, \"isOpenModalUpdateCompany\"));\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn response;\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tdispatch(reRenderCompanies(response))\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\n/*----------START События для инпутов-------------*/\r\n\r\n// Событие onChange для инпута. Данные идут в state.company для будущей отправки на сервер\r\nexport function getCompanyDataChangeHandler(e, inputName, inputsObj) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst company = {...state.company};\r\n\t\tconst Inputs = {...state[inputsObj]};\r\n\t\t// control - это name, count, dividensPerShare\r\n\t\tconst control = {...Inputs[inputName]};\r\n\r\n\t\t// Валидация\r\n\t\tcontrol.touched = true;\r\n\t\tcontrol.value = e.target.value;\r\n\t\tcontrol.valid = validateControl(control.value, control.validation);\r\n\r\n\t\tInputs[inputName] = control;\r\n\t\tcompany[inputName] = e.target.value;\r\n\t\tcompany.currency = \"USD\"; // Валюта по умолчанию\r\n\r\n\t\tlet isFormValid = true;\r\n\r\n\t\t// Валидация формы (активные кнопки или нет)\r\n\t\tObject.keys(Inputs).forEach(name => {\r\n\t\t\tisFormValid = Inputs[name].valid && isFormValid;\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_COMPANY_DATA,\r\n\t\t\tcompany,\r\n\t\t\t[inputsObj]: Inputs,\r\n\t\t\tisFormValid\r\n\t\t})\r\n\t}\r\n}\r\n\r\n//Событие onChange для select\r\nexport function selectHandler(e) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\r\n\t\tconst company = {...state.company};\r\n\t\tcompany.currency = e.target.value;\r\n\r\n\t\tdispatch({type: CHANGE_SELECT, company});\r\n\t}\r\n}\r\n\r\n/*----------END События для инпутов-------------*/\r\n\r\n/*----------START Функции закрытия и открытия модального окна-------------*/\r\n\r\n// Функция возвращает новую функцию, которая принимает dispatch или getState( и так далее\r\nexport function openModal(e, modalName) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst modals = {...state.modals};\r\n\r\n\t\tmodals[modalName] = true;\r\n\r\n\t\t// Либо Я открываю окно для редактирования/удаления\r\n\t\tif (modalName === \"isOpenModalUpdateCompany\") {\r\n\t\t\tconst nameForDelete = e.target.parentNode.querySelector('span').textContent;\r\n\t\t\tdispatch(openUpdateModal(modals, nameForDelete));\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// Либо для новой компании\r\n\t\tdispatch(openCreateModal(modals));\r\n\r\n\t\tfunction openUpdateModal(modals, nameForDelete) {\r\n\t\t\treturn {\r\n\t\t\t\ttype: OPEN_MODAL_UPDATE,\r\n\t\t\t\tmodals,\r\n\t\t\t\tnameForDelete\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction openCreateModal(modals) {\r\n\t\t\treturn {\r\n\t\t\t\ttype: OPEN_MODAL_UPDATE,\r\n\t\t\t\tmodals\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function closeModal(e, modalName) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\r\n\t\tconst modals = {...state.modals};\r\n\t\tconst formAddInputs = {...state.formAddInputs};\r\n\r\n\t\tmodals[modalName] = false;\r\n\r\n\t\tlet isFormValid = false;\r\n\r\n\t\tObject.keys(formAddInputs).forEach(name => {\r\n\t\t\tconst control = {...formAddInputs[name]};\r\n\t\t\tcontrol.valid = false;\r\n\t\t\tcontrol.touched = false;\r\n\t\t\tcontrol.value = \"\";\r\n\t\t\tformAddInputs[name] = control;\r\n\t\t});\r\n\r\n\t\tdispatch(closeModal(modals, formAddInputs, isFormValid));\r\n\r\n\t\tfunction closeModal() {\r\n\t\t\treturn {\r\n\t\t\t\ttype: CLOSE_MODAL,\r\n\t\t\t\tmodals, formAddInputs, isFormValid\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n/*----------END Функции закрытия и открытия модального окна-------------*/\r\n\r\n/* --- Мои функции для сокращения количества кода ---*/\r\n\r\nexport function reRenderCompanies(response) {\r\n\treturn dispatch => {\r\n\t\tconst companies = response.val();\r\n\t\tconst currency = [];\r\n\r\n\t\tObject.keys(companies).map(key => {\r\n\t\t\tif (!currency.includes(companies[key].currency)) {\r\n\t\t\t\tcurrency.push(companies[key].currency)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdispatch({type: RENDER, currency, companies, showPreloader: false});\r\n\t\tdispatch(closeModal(null, \"isOpenModalUpdateCompany\"));\r\n\t}\r\n}","import React from \"react\";\r\nimport classes from './Main.module.scss'\r\nimport {Title} from \"../../components/Common/Title/Title\";\r\nimport {Button} from \"../../components/UI/Button/Button\";\r\nimport {Modal} from \"../../hoc/Modal/Modal\";\r\nimport CompaniesList from \"../../components/Main/CompaniesList/CompaniesList\";\r\nimport {Input} from \"../../components/UI/Input/Input\";\r\nimport {FadeBg} from \"../../hoc/Modal/FadeBg\";\r\nimport {Preloader} from \"../../components/Common/Preloader/Preloader\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n\tclickOnCompany,\r\n\tcloseModal,\r\n\tcreateCompany,\r\n\tdeleteCompany,\r\n\tgetCompanyDataChangeHandler,\r\n\topenModal,\r\n\trenderCompanies,\r\n\tselectHandler, updateCompany\r\n} from \"../../redux/reducers/mainReducer/actions\";\r\n\r\nclass Main extends React.Component {\r\n\trenderInputs(name) {\r\n\t\treturn Object.keys(this.props[name]).map((inputName, index) => {\r\n\t\t\tconst inputObj = this.props[name][inputName];\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={inputName + index}\r\n\t\t\t\t\ttype={inputObj.type}\r\n\t\t\t\t\tvalue={inputObj.value}\r\n\t\t\t\t\tclasses={inputObj.className}\r\n\t\t\t\t\thtmlFor={inputName + index}\r\n\t\t\t\t\tvalid={inputObj.valid}\r\n\t\t\t\t\ttouched={inputObj.touched}\r\n\t\t\t\t\tlabel={inputObj.label}\r\n\t\t\t\t\terrorMessage={inputObj.errorMessage}\r\n\t\t\t\t\tautocomplete={inputObj.autocomplete}\r\n\t\t\t\t\tonChange={e => this.props.getCompanyData(e, inputName, name)}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.renderCompanies();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Main}>\r\n\t\t\t\t<Title title=\"Список компаний\"/>\r\n\t\t\t\t<h2 className={classes.infoTitle}>Дивиденды в портфеле</h2>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.showPreloader\r\n\t\t\t\t\t\t? <Preloader/>\r\n\t\t\t\t\t\t: Object.keys(this.props.companies).length === 0\r\n\t\t\t\t\t\t? <div className={classes.noCompany}>Вы еще не создали ни одной компании</div>\r\n\t\t\t\t\t\t: this.props.currency.map((currency, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className={classes.tableWrapper} key={index}>\r\n\t\t\t\t\t\t\t\t\t<h3>{currency}</h3>\r\n\t\t\t\t\t\t\t\t\t<CompaniesList\r\n\t\t\t\t\t\t\t\t\t\tcurrency={currency}\r\n\t\t\t\t\t\t\t\t\t\tcompanies={this.props.companies}\r\n\t\t\t\t\t\t\t\t\t\tshowModalHandlerDelete={e => this.props.clickOnCompany(e)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t<div className={classes.addSection}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassses={[\"green\"]}\r\n\t\t\t\t\t\tname=\"Добавить компанию\"\r\n\t\t\t\t\t\tonClick={e => this.props.openModal(e, \"isOpenModalAddCompany\")}\r\n\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* Модальное окно для добавления компании */}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.modals.isOpenModalAddCompany\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t\t\t<h3 className={classes.MainModalTitle}>Добавить компанию</h3>\r\n\r\n\t\t\t\t\t\t\t\t<form onSubmit={this.props.createCompany}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis.renderInputs(\"formAddInputs\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<select onChange={this.props.selectHandler}>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"USD\">USD</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"RUB\">RUB</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"blue\"]}\r\n\t\t\t\t\t\t\t\t\t\tname=\"Создать компанию\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t<FadeBg onClick={e => this.props.closeModal(e, \"isOpenModalAddCompany\")}/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t{/* Модальное окно для удаления/редактирования компании */}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.modals.isOpenModalUpdateCompany\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t\t\t<h3 className={classes.deleteModal}>\r\n\t\t\t\t\t\t\t\t\tКарточка компании \"{this.props.nameForDelete}\"\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.renderInputs(\"formUpdInputs\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<div className={classes.modalDeleteBtnBox}>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tname=\"Удалить\"\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"red\"]}\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => this.props.deleteCompany(this.props.nameForDelete)}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tname=\"Изменить\"\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"green\"]}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.props.updateCompany}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t<FadeBg onClick={e => this.props.closeModal(e, \"isOpenModalUpdateCompany\")}/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\t// Глубокое копирование\r\n\treturn JSON.parse(JSON.stringify(state.mainReducer))\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\trenderCompanies: () => dispatch(renderCompanies()),\r\n\t\tcreateCompany: e => dispatch(createCompany(e)),\r\n\t\tupdateCompany: () => dispatch(updateCompany()),\r\n\t\tdeleteCompany: name => dispatch(deleteCompany(name)),\r\n\t\tclickOnCompany: e => dispatch(clickOnCompany(e)),\r\n\t\tgetCompanyData: (e, inputName, inputsObj) => dispatch(getCompanyDataChangeHandler(e, inputName, inputsObj)),\r\n\t\topenModal: (e, modalName) => dispatch(openModal(e, modalName)),\r\n\t\tcloseModal: (e, modalName) => dispatch(closeModal(e, modalName)),\r\n\t\tselectHandler: e => dispatch(selectHandler(e)),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import React from \"react\";\r\nimport classes from './DepoDateAndAmount.module.scss'\r\n\r\nconst DepoDateAndAmount = props => {\r\n\tconst dep = props.depo;\r\n\t// Сознание нового массива дата-сумма\r\n\tconst newDep = dep.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\t// Получение правильного формата даты и времени\r\n\tconst getDate = date => {\r\n\t\tconst day = new Date(date).getDate();\r\n\t\tlet month = new Date(date).toLocaleDateString(\"ru\", {month: 'long',});\r\n\r\n\t\tmonth === 'март' ? month += \"a\" : month = month.slice(0, month.length - 1) + \"я\";\r\n\r\n\t\treturn [day, month].join(' ');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tnewDep.map((obj, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li onClick={props.onClick} data-currency={props.currency} data-year={new Date(obj.date).getFullYear()} data-id={obj.id} className={classes.li} key={index}>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{getDate(obj.date)}\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{obj.amount.toLocaleString(\"ru\")} {props.currency === 'rub' ? \"руб\" : props.currency === 'usd' ? \"$\" : null}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n};\r\n\r\nexport default DepoDateAndAmount;","import React from \"react\";\r\nimport classes from \"./DepoInnerWrapper.module.scss\";\r\nimport DepoDateAndAmount from \"../../../components/Deposit/DepoDateAndAmount/DepoDateAndAmount\";\r\n\r\n// NOTE: Оставил тут локальный стейт, так как у кажого компонента он должен быть свой. При клике это позволяет открывать каждый компонент отдельно\r\nclass DepoInnerWrapper extends React.Component {\r\n\tstate = {\r\n\t\tisOpen: false\r\n\t};\r\n\r\n\tshowMoreHandler = () => this.setState({isOpen: !this.state.isOpen});\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p onClick={this.showMoreHandler} className={classes.year}>\r\n\t\t\t\t\t{this.props.year} год\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<div className={classes.currency}>\r\n\t\t\t\t\t{this.state.isOpen\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tObject.keys(this.props.currency).map((currName, index) => {\r\n\t\t\t\t\t\t\t\t// Массив конкретной валюты (Usd или rub)\r\n\t\t\t\t\t\t\t\tconst currencyArr = this.props.currency[currName];\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={index} className={classes.DepoCurrency}>\r\n\t\t\t\t\t\t\t\t\t\t<h4 className={classes.name}>{currName === 'rub' ? \"Рубли\" : currName === \"usd\" ? \"Доллары\" : null}</h4>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t<DepoDateAndAmount\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrency={currName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdepo={currencyArr}/>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default DepoInnerWrapper;","import {CHANGE_SELECT, DEPOSIT_CLOSE_MODAL, ON_CHANGE, OPEN_MODAL, RENDER} from \"../../actions/actionsType\";\r\nimport {validateControl} from \"../../../Modules/formValidation\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\n// Рендер всех депозитов на страницу\r\nexport function renderDeposit() {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst db = firebase.database();\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/deposit').once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\tconst deposit = response.val();\r\n\r\n\t\t\t\tif (deposit === null) {\r\n\t\t\t\t\tdb.ref('/users/' + getState().authReducer.token + '/portfolio').update({});\r\n\t\t\t\t\tconst deposit = {};\r\n\t\t\t\t\tdispatch({type: RENDER, deposit, showPreloader: false});\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdispatch({type: RENDER, deposit, showPreloader: false})\r\n\t\t\t}).catch(err => console.error(err));\r\n\t}\r\n}\r\n\r\n// сабмит формы по созданию депозита\r\nexport function createDeposit(e) {\r\n\te.preventDefault();\r\n\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst db = firebase.database();\r\n\t\tconst state = getState().depositReducer;\r\n\t\tconst {date, amount, currency} = state.depositData;\r\n\t\tconst year = new Date(date).getFullYear();\r\n\t\tconst showPreloader = true;\r\n\t\tconst formAddDepoInputs = {...state.formAddDepoInputs};\r\n\t\tconst amountInput = {...formAddDepoInputs.amount};\r\n\t\tconst url = '/users/' + getState().authReducer.token + '/portfolio/deposit/' + year + '/' + currency;\r\n\r\n\t\tamountInput.value = \"\";\r\n\t\tformAddDepoInputs.amount = amountInput;\r\n\r\n\t\tawait db.ref(url).once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\t// Если год создаем впервые\r\n\t\t\t\tif (response.val() === null) {\r\n\t\t\t\t\tconst data = [];\r\n\r\n\t\t\t\t\tdata.push({\r\n\t\t\t\t\t\tamount: +amount,\r\n\t\t\t\t\t\tdate: date,\r\n\t\t\t\t\t\tid: data.length + Math.random()\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tdb.ref(url).set(data);\r\n\t\t\t\t\tconst isFormValid = false;\r\n\r\n\t\t\t\t\tdispatch({type: RENDER, showPreloader, isFormValid, formAddDepoInputs});\r\n\t\t\t\t\tdispatch(renderDeposit());\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Если уже имеем массив\r\n\t\t\t\tresponse.val().push({\r\n\t\t\t\t\tamount: +amount,\r\n\t\t\t\t\tdate: date,\r\n\t\t\t\t\tid: response.val().length + Math.random()\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdb.ref(url).set(response.val());\r\n\t\t\t\tconst isFormValid = false;\r\n\r\n\t\t\t\tdispatch({type: RENDER, showPreloader, isFormValid, formAddDepoInputs});\r\n\t\t\t\tdispatch(renderDeposit());\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err));\r\n\t}\r\n}\r\n\r\n// Удаление депозита\r\nexport function deleteDeposit(e) {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState().depositReducer;\r\n\t\tconst db = firebase.database();\r\n\t\tconst showPreloader = false;\r\n\t\tconst showModal = false;\r\n\t\tconst data = {...state.data};\r\n\t\tconst url = '/users/' + getState().authReducer.token + '/portfolio/deposit/' + data.year + '/' + data.currency;\r\n\t\tawait db.ref(url).once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.val().length === 1) {\r\n\t\t\t\t\tdb.ref(url).remove();\r\n\t\t\t\t\tdb.ref('/users/' + getState().authReducer.token + '/portfolio/deposit').update({});\r\n\t\t\t\t\tdb.ref('/users/' + getState().authReducer.token + '/portfolio/deposit').once('value')\r\n\t\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\t\tlet deposit = response.val();\r\n\r\n\t\t\t\t\t\t\tif (deposit === null) {\r\n\t\t\t\t\t\t\t\tdeposit = {};\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdispatch({type: RENDER, deposit, showPreloader, showModal});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(err => console.error(err));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst result = response.val().filter(item => item.id !== +data.id);\r\n\t\t\t\t\tdb.ref(url).set(result);\r\n\r\n\t\t\t\t\tdb.ref('/users/' + getState().authReducer.token + '/portfolio/deposit').once('value')\r\n\t\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\t\tlet deposit = response.val();\r\n\t\t\t\t\t\t\tdispatch({type: RENDER, deposit, showPreloader, showModal});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(err => console.error(err));\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err));\r\n\t}\r\n}\r\n\r\n\r\n/* ----- START Открытие и закрытие модального окна -----*/\r\n\r\nexport function openModal(e) {\r\n\treturn dispatch => {\r\n\t\tconst data = e.currentTarget.dataset;\r\n\t\tconst showModal = true;\r\n\r\n\t\tdispatch({type: OPEN_MODAL, showModal, data});\r\n\t}\r\n}\r\n\r\nexport function closeModal() {\r\n\treturn dispatch => {\r\n\t\tdispatch({type: DEPOSIT_CLOSE_MODAL, showModal: false});\r\n\t}\r\n}\r\n\r\n/* ----- END Открытие и закрытие модального окна -----*/\r\n\r\n/* ----- START Все, что связано с событием onChange для инпутов, селектов и прочего -----*/\r\n\r\nexport function onChangeHandler(e, inputName, inputObj) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().depositReducer;\r\n\r\n\t\tconst depositData = {...state.depositData};\r\n\t\t// Клонирую объект с инпутами\r\n\t\tconst inputs = {...state[inputObj]};\r\n\t\t// controlName - amount, date\r\n\t\tconst controlName = {...inputs[inputName]};\r\n\r\n\t\t// Валидация\r\n\t\tcontrolName.touched = true;\r\n\t\tcontrolName.value = e.target.value;\r\n\t\tcontrolName.valid = validateControl(controlName.value, controlName.validation);\r\n\r\n\t\tdepositData[inputName] = e.target.value;\r\n\t\tinputs[inputName] = controlName;\r\n\r\n\t\tlet isFormValid = true;\r\n\r\n\t\t// Валидация формы (активные кнопки или нет)\r\n\t\tObject.keys(inputs).forEach(name => {\r\n\t\t\tisFormValid = inputs[name].valid && isFormValid;\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ON_CHANGE,\r\n\t\t\tdepositData,\r\n\t\t\t[inputObj]: inputs,\r\n\t\t\tisFormValid\r\n\t\t})\r\n\t}\r\n}\r\n\r\n//TODO: Пока не понял, как работает Date, починить!\r\nexport function handleChangeDate(date) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().depositReducer;\r\n\t\tconst depositData = {...state.depositData};\r\n\r\n\t\t// NOTE: Datepicker как то криво работает, пришлось использовать Date.parse\r\n\t\tdepositData.date = Date.parse(date);\r\n\t\tdispatch({type: CHANGE_SELECT, depositData});\r\n\t}\r\n}\r\n\r\nexport function selectHandler(e) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().depositReducer;\r\n\t\tconst depositData = {...state.depositData};\r\n\t\tdepositData.currency = e.target.value;\r\n\r\n\t\tdispatch({type: CHANGE_SELECT, depositData});\r\n\t}\r\n}\r\n\r\n/* ----- END Все, что связано с событием onChange для инпутов, селектов и прочего -----*/\r\n","import React from \"react\";\r\nimport classes from './DepoStats.module.scss'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst DepoStats = props => {\r\n\tconst depo = props.deposit;\r\n\tlet rub = 0;\r\n\tlet usd = 0;\r\n\r\n\tfunction getTotalDepo() {\r\n\t\tObject.keys(depo).map(year => {\r\n\t\t\tconst currencyObj = depo[year];\r\n\r\n\t\t\tObject.keys(currencyObj).map(currency => {\r\n\t\t\t\tconst currencyArr = currencyObj[currency];\r\n\r\n\t\t\t\tcurrencyArr.forEach(obj => {\r\n\t\t\t\t\tcurrency === 'rub' ? rub += obj.amount : usd += obj.amount\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3 className={classes.mainTitle}>Статистика пополнений за все время</h3>\r\n\t\t\t<div className={classes.totalContainer}>\r\n\t\t\t\t{\r\n\t\t\t\t\tgetTotalDepo()\r\n\t\t\t\t}\r\n\t\t\t\t<p className={classes.currencyBox}>\r\n\t\t\t\t\t<span className={classes.rub}>RUB:</span> {rub.toLocaleString('ru')} руб.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className={classes.currencyBox}>\r\n\t\t\t\t\t<span className={classes.usd}>USD:</span> {usd.toLocaleString('ru')} $\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn JSON.parse(JSON.stringify(state.depositReducer))\r\n}\r\n\r\nexport default connect(mapStateToProps)(DepoStats);","import React from \"react\";\r\nimport classes from './Deposit.module.scss'\r\nimport {Input} from \"../../components/UI/Input/Input\";\r\nimport {Button} from \"../../components/UI/Button/Button\";\r\nimport {Preloader} from \"../../components/Common/Preloader/Preloader\";\r\nimport {Title} from \"../../components/Common/Title/Title\";\r\nimport {Modal} from \"../../hoc/Modal/Modal\";\r\nimport {FadeBg} from \"../../hoc/Modal/FadeBg\";\r\nimport DepoInnerWrapper from \"./DepoInnerWrapper/DepoInnerWrapper\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n\tcloseModal, createDeposit, deleteDeposit,\r\n\thandleChangeDate, onChangeHandler,\r\n\topenModal,\r\n\trenderDeposit,\r\n\tselectHandler\r\n} from \"../../redux/reducers/depositReducer/actions\";\r\nimport DepoStats from \"../../components/Deposit/depoStats/DepoStats\";\r\n\r\n// Функции для генерации полей для инпутов\r\n\r\nclass Deposit extends React.Component {\r\n\trenderInpus(inputName) {\r\n\t\treturn Object.keys(this.props[inputName]).map((name, index) => {\r\n\t\t\tconst inputObj = this.props[inputName][name];\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={name + index}\r\n\t\t\t\t\ttype={inputObj.type}\r\n\t\t\t\t\tvalue={inputObj.value}\r\n\t\t\t\t\tclasses={inputObj.className}\r\n\t\t\t\t\tvalid={inputObj.valid}\r\n\t\t\t\t\ttouched={inputObj.touched}\r\n\t\t\t\t\tplaceholder={inputObj.placeholder}\r\n\t\t\t\t\terrorMessage={inputObj.errorMessage}\r\n\t\t\t\t\tautocomplete={inputObj.autocomplete}\r\n\t\t\t\t\tonChange={e => this.props.onChangeHandler(e, name, inputName)}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.renderDeposit();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Title title=\"Список пополнений\"/>\r\n\t\t\t\t{/* Общая инфомация по всем пополнениям*/}\r\n\t\t\t\t<div className={classes.Deposit}>\r\n\t\t\t\t\t<DepoStats/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Форма ввода пополнения */}\r\n\t\t\t\t<div className={classes.Deposit}>\r\n\r\n\t\t\t\t\t<h3 className={classes.infoTitle}>\r\n\t\t\t\t\t\tДобавить пополнение\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<form onSubmit={this.props.createDeposit}>\r\n\t\t\t\t\t\t<div className={classes.inputsBox}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.renderInpus(\"formAddDepoInputs\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\tselected={this.props.depositData.date}\r\n\t\t\t\t\t\t\t\tonChange={this.props.handleChangeDate}\r\n\t\t\t\t\t\t\t\tclassName={classes.datePicker}\r\n\t\t\t\t\t\t\t\tmaxDate={new Date()}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<select className={classes.select} onChange={this.props.selectHandler}>\r\n\t\t\t\t\t\t\t\t<option value=\"usd\">USD</option>\r\n\t\t\t\t\t\t\t\t<option value=\"rub\">RUB</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassses={[\"green\", \"addDepo\"]}\r\n\t\t\t\t\t\t\tname=\"Добавить пополнение\"\r\n\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/*Контейнер с пополнениями по годам*/}\r\n\t\t\t\t<div className={[classes.depoAndStatistic, classes.Deposit].join(' ')}>\r\n\t\t\t\t\t{/*Пополнения по годам*/}\r\n\t\t\t\t\t<h3 className={classes.infoTitle}>Пополнения по годам</h3>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.showPreloader\r\n\t\t\t\t\t\t\t? <Preloader/>\r\n\t\t\t\t\t\t\t: Object.keys(this.props.deposit).length === 0\r\n\t\t\t\t\t\t\t? <div className={classes.noDeposit}> У вас пока не было пополнений </div>\r\n\t\t\t\t\t\t\t: <div className={classes.DepoYear}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tObject.keys(this.props.deposit).map((year, index) => {\r\n\t\t\t\t\t\t\t\t\t\tconst currency = this.props.deposit[year];\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn <DepoInnerWrapper\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.openModal}\r\n\t\t\t\t\t\t\t\t\t\t\tcurrency={currency}\r\n\t\t\t\t\t\t\t\t\t\t\tyear={year}\r\n\t\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/*\tМодальное окно для подтверждения удаления */}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.showModal\r\n\t\t\t\t\t\t? <React.Fragment>\r\n\t\t\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t\t\t<h2 className={classes.delModalTitle}>Вы точно хотите удалить пополнение?</h2>\r\n\t\t\t\t\t\t\t\t<div className={classes.modalButtons}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"red\"]}\r\n\t\t\t\t\t\t\t\t\t\tname=\"Удалить\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.props.deleteDeposit}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"green\"]}\r\n\t\t\t\t\t\t\t\t\t\tname=\"Отмена\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.props.closeModal}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t<FadeBg onClick={this.props.closeModal}/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\t// Глубокое копирование\r\n\treturn JSON.parse(JSON.stringify(state.depositReducer))\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\trenderDeposit: () => dispatch(renderDeposit()),\r\n\t\tcreateDeposit: (e) => dispatch(createDeposit(e)),\r\n\t\tdeleteDeposit: (e) => dispatch(deleteDeposit(e)),\r\n\t\topenModal: e => dispatch(openModal(e)),\r\n\t\tcloseModal: e => dispatch(closeModal(e)),\r\n\t\tonChangeHandler: (e, inputName, inputObj) => dispatch(onChangeHandler(e, inputName, inputObj)),\r\n\t\thandleChangeDate: date => dispatch(handleChangeDate(date)),\r\n\t\tselectHandler: e => dispatch(selectHandler(e)),\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Deposit)","import React from \"react\";\r\nimport classes from \"./LinksInsideSidebar.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst LinksInsideSidebar = props => {\r\n\treturn (\r\n\t\t<nav className={classes.LinksInsideSidebar}>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to={\"/\"}> Главная </NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to={\"/depo\"}> Пополнения </NavLink>\r\n\t\t\t</li>\r\n\t\t</nav>\r\n\t)\r\n};\r\n\r\nexport default LinksInsideSidebar;","import React from \"react\";\r\nimport classes from './SidebarNavigation.module.scss'\r\nimport LinksInsideSidebar from \"../LinksInsideSidebar/LinksInsideSidebar\";\r\n\r\nfunction SidebarNavigation() {\r\n\treturn (\r\n\t\t<div className={classes.SidebarNavigation}>\r\n\t\t\t<LinksInsideSidebar/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SidebarNavigation","import {validateControl} from \"../../../Modules/formValidation\";\r\nimport {\r\n\tAUTH_AUTO_LOGIN, AUTH_CLOSE_ERROR,\r\n\tAUTH_INPUT,\r\n\tAUTH_LOGIN,\r\n\tAUTH_LOGOUT, AUTH_SHOW_ERROR,\r\n\tDEPOSIT_RENDER,\r\n\tMAIN_RENDER,\r\n} from \"../../actions/actionsType\";\r\nimport {renderCompanies} from \"../mainReducer/actions\";\r\nimport firebase from \"firebase\";\r\n\r\nexport function loginHandler(isLogin) {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState().authReducer;\r\n\t\tconst authInputs = {...state.authInputs};\r\n\t\tconst inputEmail = {...state.authInputs.inputEmail};\r\n\t\tconst inputPassword = {...state.authInputs.inputPassword};\r\n\t\tconst email = inputEmail.value;\r\n\t\tconst password = inputPassword.value;\r\n\r\n\t\ttry {\r\n\t\t\tif (isLogin) {\r\n\t\t\t\tawait firebase.auth().signInWithEmailAndPassword(email, password);\r\n\t\t\t} else {\r\n\t\t\t\tawait firebase.auth().createUserWithEmailAndPassword(email, password);\r\n\t\t\t}\r\n\r\n\t\t\t// Слушатель firebase\r\n\t\t\tawait firebase.auth().onAuthStateChanged(user => {\r\n\t\t\t\tconst currentUser = firebase.auth().currentUser;\r\n\r\n\t\t\t\t//Блок с верификацией email\r\n\t\t\t\tif (!currentUser.emailVerified) {\r\n\t\t\t\t\tcurrentUser.sendEmailVerification()\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\tconst message = \"Вам на почту было отправлено письмо с подтверждением. Пожалуйста, проверьте свою почту\";\r\n\t\t\t\t\t\t\tdispatch({type: AUTH_SHOW_ERROR, error: message});\r\n\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tdispatch({type: AUTH_CLOSE_ERROR})\r\n\t\t\t\t\t\t\t}, 8500)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\tdispatch({type: AUTH_SHOW_ERROR, error: error.message});\r\n\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tdispatch({type: AUTH_CLOSE_ERROR})\r\n\t\t\t\t\t\t\t}, 8500)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst login = {\r\n\t\t\t\t\tuid: user.uid,\r\n\t\t\t\t\tentryTime: +user.metadata.b\r\n\t\t\t\t};\r\n\r\n\t\t\t\tinputEmail.value = inputPassword.value = '';\r\n\t\t\t\tauthInputs.inputEmail = inputEmail;\r\n\t\t\t\tauthInputs.inputPassword = inputPassword;\r\n\r\n\t\t\t\tdispatch({type: AUTH_LOGIN, authInputs, token: login.uid});\r\n\t\t\t\t// Использую диспатч, чтобы заново отрендерить компании, функция тянется из mainReducers\r\n\t\t\t\tdispatch(renderCompanies());\r\n\t\t\t\tlocalStorage.setItem(\"login\", JSON.stringify(login))\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tdispatch(showError(e))\r\n\t\t}\r\n\r\n\r\n\t}\r\n}\r\n\r\nexport function authForm(e) {\r\n\te.preventDefault();\r\n\treturn dispatch => {\r\n\r\n\t}\r\n}\r\n\r\nexport function authChangeHandler(e, inputObj, inputName) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().authReducer;\r\n\t\tconst authInputs = {...state[inputObj]};\r\n\t\tconst input = {...authInputs[inputName]};\r\n\r\n\t\tinput.touched = true;\r\n\t\tinput.value = e.target.value;\r\n\t\tinput.valid = validateControl(input.value, input.validation);\r\n\r\n\t\tauthInputs[inputName] = input;\r\n\r\n\t\tlet isFormValid = true;\r\n\t\t// Валидация формы (активные кнопки или нет)\r\n\r\n\t\tObject.keys(authInputs).forEach(name => {\r\n\t\t\tisFormValid = authInputs[name].valid && isFormValid;\r\n\t\t});\r\n\r\n\t\tdispatch({type: AUTH_INPUT, [inputObj]: authInputs, isFormValid});\r\n\t}\r\n}\r\n\r\nexport function autoLogin() {\r\n\treturn dispatch => {\r\n\t\tconst login = JSON.parse(localStorage.getItem(\"login\"));\r\n\r\n\t\tif (login === null) {\r\n\t\t\tdispatch({type: AUTH_AUTO_LOGIN, token: null})\r\n\t\t} else {\r\n\t\t\tdispatch({type: AUTH_AUTO_LOGIN, token: login.uid})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function logout(e) {\r\n\te.preventDefault();\r\n\treturn dispatch => {\r\n\t\tfirebase.auth().signOut().then(() => {\r\n\t\t\tconst currency = [];\r\n\t\t\tconst deposit = {};\r\n\t\t\t// Тут Я очищаю localStorage, так же для депозитов и валют Я задаю пустые значения, чтобы при перелогине, мы заново их заполняли согласно ключу. Не знаю, насколько это правильно\r\n\t\t\tlocalStorage.removeItem(\"login\");\r\n\t\t\tdispatch({type: AUTH_LOGOUT});\r\n\t\t\tdispatch({type: MAIN_RENDER, currency});\r\n\t\t\tdispatch({type: DEPOSIT_RENDER, deposit});\r\n\t\t}).catch(err => {\r\n\t\t\tdispatch({type: AUTH_SHOW_ERROR, error: err.message});\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch({type: AUTH_CLOSE_ERROR})\r\n\t\t\t}, 8500)\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport function showError(e) {\r\n\treturn dispatch => {\r\n\t\tdispatch({type: AUTH_SHOW_ERROR, error: e.message});\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch({type: AUTH_CLOSE_ERROR})\r\n\t\t}, 8500)\r\n\t}\r\n}","import React from \"react\";\r\nimport classes from './Header.module.scss'\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../../redux/reducers/authReducer/actions\";\r\n\r\nconst Header = props => {\r\n\treturn (\r\n\t\t<div className={classes.Header}>\r\n\t\t\t<div>\r\n\t\t\t\tFinance Journal\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tprops.token !== null\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span onClick={props.logout} className={classes.logoutLink}>Выйти</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\t// Глубокое копирование\r\n\treturn JSON.parse(JSON.stringify(state.authReducer))\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tlogout: (e) => dispatch(logout(e)),\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from \"react\";\r\nimport classes from \"./Auth.module.scss\"\r\nimport {connect} from \"react-redux\";\r\nimport {Input} from \"../../components/UI/Input/Input\";\r\nimport {\r\n\tauthChangeHandler,\r\n\tauthForm,\r\n\tloginHandler\r\n} from \"../../redux/reducers/authReducer/actions\";\r\nimport {Title} from \"../../components/Common/Title/Title\";\r\nimport {Button} from \"../../components/UI/Button/Button\";\r\n\r\nclass Auth extends React.Component {\r\n\trenderInput(inputObj) {\r\n\r\n\t\treturn Object.keys(this.props[inputObj]).map((inputName, index) => {\r\n\t\t\tconst input = this.props[inputObj][inputName];\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\ttype={input.type}\r\n\t\t\t\t\tlabel={input.label}\r\n\t\t\t\t\terrorMessage={input.errorMessage}\r\n\t\t\t\t\tclassName={input.className}\r\n\t\t\t\t\tplaceholder={input.placeholder}\r\n\t\t\t\t\tvalid={input.valid}\r\n\t\t\t\t\ttouched={input.touched}\r\n\t\t\t\t\tvalue={input.value}\r\n\t\t\t\t\tvalidation={input.validation}\r\n\t\t\t\t\tonChange={e => this.props.authChangeHandler(e, inputObj, inputName)}\r\n\t\t\t\t/>)\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Auth}>\r\n\t\t\t\t<Title title={\"Добро пожаловать!\"}/>\r\n\t\t\t\t<p className={classes.greetings}>Пожалуйста, войдите в систему или зарегистрируйтесь</p>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.error === null\r\n\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t: <p className={classes.error}>{this.props.error}</p>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div className={classes.authForm}>\r\n\t\t\t\t\t<form onSubmit={this.props.authForm}>\r\n\t\t\t\t\t\t{this.renderInput(\"authInputs\")}\r\n\r\n\t\t\t\t\t\t<div className={classes.btnContainer}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassses={[\"green\", \"authEntry\"]}\r\n\t\t\t\t\t\t\t\tname=\"Войти\"\r\n\t\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t\t\tonClick={this.props.loginHandler.bind(this, true)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassses={[\"yellow\", \"authReg\"]}\r\n\t\t\t\t\t\t\t\tname=\"Регистрация\"\r\n\t\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t\t\tonClick={this.props.loginHandler.bind(this, false)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\t// Глубокое копирование\r\n\treturn JSON.parse(JSON.stringify(state.authReducer))\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tauthChangeHandler: (e, inputObj, inputName) => dispatch(authChangeHandler(e, inputObj, inputName)),\r\n\t\tauthForm: (e) => dispatch(authForm(e)),\r\n\t\tloginHandler: (isLogin) => dispatch(loginHandler(isLogin)),\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)","import React, {Component} from \"react\";\r\nimport \"./App.scss\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport Main from \"./container/Main/Main\";\r\nimport Deposit from \"./container/Deposit/Deposit\";\r\nimport SidebarNavigation from \"./components/Common/SidebarNavigation/SidebarNavigation\";\r\nimport Header from \"./components/Common/Header/Header\";\r\nimport {Route, Switch, Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\";\r\nimport Auth from \"./container/Auth/Auth\";\r\nimport {autoLogin} from \"./redux/reducers/authReducer/actions\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.autoLogin();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<Header/>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.token\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<div className=\"main-page-wrapper\">\r\n\t\t\t\t\t\t\t<SidebarNavigation/>\r\n\r\n\t\t\t\t\t\t\t<div className={'main-page-content'}>\r\n\t\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t\t<Route exact={true} path={\"/\"} component={Main}/>\r\n\t\t\t\t\t\t\t\t\t<Route path={\"/depo\"} component={Deposit}/>\r\n\t\t\t\t\t\t\t\t\t<Redirect to={\"/\"} component={Main}/>\r\n\t\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"main-page-wrapper\">\r\n\t\t\t\t\t\t\t<Route>\r\n\t\t\t\t\t\t\t\t<Route exact path={\"/auth\"} component={Auth}/>\r\n\t\t\t\t\t\t\t\t<Redirect to={\"/auth\"} component={Auth}/>\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\t// Глубокое копирование\r\n\treturn JSON.parse(JSON.stringify(state.authReducer))\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tautoLogin: () => dispatch(autoLogin()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {createAddFormInputs, createUpdFormInputs} from \"../../../Modules/formValidation\";\r\nimport {\r\n\tCHANGE_SELECT,\r\n\tCLOSE_MODAL, CLOSE_PRELOADER,\r\n\tCREATE_COMPANY,\r\n\tCURRENCY,\r\n\tGET_COMPANY_DATA, MAIN_RENDER,\r\n\tOPEN_MODAL_UPDATE,\r\n\tRENDER, SHOW_PRELOADER\r\n} from \"../../actions/actionsType\";\r\n\r\n// Функции создания инпутов\r\nfunction createOptionForAddInputs(name, errMessage, obj) {\r\n\treturn createAddFormInputs({\r\n\t\t\tlabel: name,\r\n\t\t\ttype: \"text\",\r\n\t\t\terrorMessage: errMessage,\r\n\t\t\tclassName: [\"\"],\r\n\t\t\tautocomplete: \"off\"\r\n\t\t}, obj\r\n\t)\r\n}\r\n\r\nfunction createOptionForUpdInputs(name, errMessage, obj) {\r\n\treturn createUpdFormInputs({\r\n\t\t\tlabel: name,\r\n\t\t\ttype: \"text\",\r\n\t\t\terrorMessage: errMessage,\r\n\t\t\tclassName: [\"\"],\r\n\t\t\tautocomplete: \"off\"\r\n\t\t}, obj\r\n\t)\r\n}\r\n\r\nconst initState = {\r\n\tuser: null,\r\n\tnameForDelete: \"\",\r\n\tshowPreloader: true,\r\n\tisFormValid: false,\r\n\tmodals: {\r\n\t\tisOpenModalAddCompany: false,\r\n\t\tisOpenModalUpdateCompany: false\r\n\t},\r\n\tformAddInputs: {\r\n\t\tname: createOptionForAddInputs(\"Имя компании\", \"Поле не может быть пустым\", {required: true}),\r\n\t\tcount: createOptionForAddInputs(\"Количество акций\", \"Введите корректное число\", {\r\n\t\t\trequired: true,\r\n\t\t\ttype: \"number\",\r\n\t\t\tminMax: {min: 0, max: 10000000}\r\n\t\t}),\r\n\t\tdividendPerShare: createOptionForAddInputs(\"Размер дивидендов (в год)\", \"Введите корректное число\", {\r\n\t\t\trequired: true,\r\n\t\t\ttype: \"number\",\r\n\t\t\tminMax: {min: 0, max: 500}\r\n\t\t})\r\n\t},\r\n\tformUpdInputs: {\r\n\t\tcount: createOptionForUpdInputs(\"Количество акций\", \"Введите корректное число\", {\r\n\t\t\trequired: true,\r\n\t\t\ttype: \"number\",\r\n\t\t\tminMax: {min: 0, max: 10000000}\r\n\t\t}),\r\n\t\tdividendPerShare: createOptionForUpdInputs(\"Размер дивидендов (в год)\", \"Введите корректное число\", {\r\n\t\t\trequired: true,\r\n\t\t\ttype: \"number\",\r\n\t\t\tminMax: {min: 0, max: 500}\r\n\t\t})\r\n\t},\r\n\tcompany: {\r\n\t\tname: \"\",\r\n\t\tcount: \"\",\r\n\t\tdividendPerShare: \"\",\r\n\t\tcurrency: \"USD\"\r\n\t},\r\n\tcompanies: {},\r\n\tcurrency: [],\r\n};\r\n\r\n//Всегда возвращаем новый объект, сохраняем иммутабельность\r\n// В редюсерах по сути мы обновляем стейт. В action передаем то, что нужно обновить\r\n\r\nexport default function mainReducer(state = initState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase RENDER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase MAIN_RENDER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase CURRENCY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrency: action.currency\r\n\t\t\t};\r\n\r\n\t\tcase CREATE_COMPANY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\r\n\t\tcase SHOW_PRELOADER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowPreloader: true\r\n\r\n\t\t\t};\r\n\t\tcase CLOSE_PRELOADER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowPreloader: false\r\n\t\t\t};\r\n\r\n\t\tcase GET_COMPANY_DATA:\r\n\t\t\treturn {...state, ...action};\r\n\r\n\t\tcase OPEN_MODAL_UPDATE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodals: action.modals,\r\n\t\t\t\tnameForDelete: action.nameForDelete\r\n\t\t\t};\r\n\r\n\t\tcase CLOSE_MODAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodals: action.modals,\r\n\t\t\t\tformAddInputs: action.formAddInputs,\r\n\t\t\t\tisFormValid: action.isFormValid\r\n\t\t\t};\r\n\r\n\t\tcase CHANGE_SELECT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcompany: action.company\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// Функция открытия модального окна\r\n","import {\r\n\tCHANGE_SELECT,\r\n\tDEPOSIT_CLOSE_MODAL, DEPOSIT_RENDER,\r\n\tON_CHANGE,\r\n\tOPEN_MODAL,\r\n\tRENDER\r\n} from \"../../actions/actionsType\";\r\n\r\nconst initState = {\r\n\tuser: null,\r\n\tisFormValid: false,\r\n\tshowModal: false,\r\n\tshowPreloader: true,\r\n\tdeposit: {},\r\n\tformAddDepoInputs: {\r\n\t\tamount: {\r\n\t\t\ttype: \"text\",\r\n\t\t\terrorMessage: \"Введите число\",\r\n\t\t\tclassName: [\"depositInput\"],\r\n\t\t\tplaceholder: \"Введите сумму\",\r\n\t\t\tautocomplete: \"off\",\r\n\t\t\tvalid: false,\r\n\t\t\ttouched: false,\r\n\t\t\tvalue: \"\",\r\n\t\t\tvalidation: {\r\n\t\t\t\trequired: true,\r\n\t\t\t\ttype: \"number\"\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdepositData: {\r\n\t\tcurrency: \"usd\",\r\n\t\tamount: \"\",\r\n\t\tdate: Date.parse(new Date)\r\n\t},\r\n\tdata: {},\r\n\tisOpen: false\r\n};\r\n\r\nexport default function depositReducer(state = initState, action) {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase RENDER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\t\tcase DEPOSIT_RENDER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\t\tcase OPEN_MODAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\t\tcase DEPOSIT_CLOSE_MODAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowModal: false\r\n\t\t\t};\r\n\t\tcase ON_CHANGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\t\tcase CHANGE_SELECT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import {\r\n\tAUTH_AUTO_LOGIN,\r\n\tAUTH_CLOSE_ERROR,\r\n\tAUTH_INPUT,\r\n\tAUTH_LOGIN,\r\n\tAUTH_LOGOUT,\r\n\tAUTH_SHOW_ERROR\r\n} from \"../../actions/actionsType\";\r\n\r\n\r\n\r\nconst initState = {\r\n\ttoken: null,\r\n\terror: null,\r\n\tisFormValid: false,\r\n\tauthInputs: {\r\n\t\tinputEmail: {\r\n\t\t\ttype: \"email\",\r\n\t\t\tlabel: \"Введите e-mail\",\r\n\t\t\terrorMessage: \"Введите e-mail\",\r\n\t\t\tclassName: [\"authLogin\"],\r\n\t\t\tplaceholder: \"Введите e-mail\",\r\n\t\t\tautocomplete: \"off\",\r\n\t\t\tvalid: false,\r\n\t\t\ttouched: false,\r\n\t\t\tvalue: \"\",\r\n\t\t\tvalidation: {\r\n\t\t\t\trequired: true,\r\n\t\t\t\ttype: \"email\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputPassword: {\r\n\t\t\ttype: \"password\",\r\n\t\t\tlabel: \"Введите пароль\",\r\n\t\t\terrorMessage: \"Пароль не может быть менее 6 символов\",\r\n\t\t\tclassName: [\"authLogin\"],\r\n\t\t\tplaceholder: \"Введите пароль\",\r\n\t\t\tautocomplete: \"off\",\r\n\t\t\tvalid: false,\r\n\t\t\ttouched: false,\r\n\t\t\tvalue: \"\",\r\n\t\t\tvalidation: {\r\n\t\t\t\trequired: true,\r\n\t\t\t\tminLength: 6\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n};\r\n\r\nexport default function authReducer(state = initState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase AUTH_INPUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\t\tcase AUTH_LOGIN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: action.token,\r\n\t\t\t\tauthInputs: action.authInputs\r\n\t\t\t};\r\n\t\tcase AUTH_SHOW_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.error\r\n\t\t\t};\r\n\t\tcase AUTH_CLOSE_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: null\r\n\t\t\t};\r\n\t\tcase AUTH_AUTO_LOGIN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t};\r\n\t\tcase AUTH_LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import mainReducer from \"./mainReducer/mainReducer\";\r\nimport depositReducer from \"./depositReducer/depositReducer\";\r\nimport {combineReducers} from \"redux\"\r\nimport authReducer from \"./authReducer/authReducer\";\r\n\r\nexport default combineReducers({\r\n\tmainReducer, depositReducer, authReducer\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n// redux\r\nimport {createStore, compose, applyMiddleware} from \"redux\"\r\nimport {Provider} from \"react-redux\"\r\nimport rootReducer from \"./redux/reducers/rootReducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport firebase from \"firebase/app\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyB73IC7XvE6QjjTcMWXZNePBcn_uiLgqWA\",\r\n\tauthDomain: \"my-finance-journal.firebaseapp.com\",\r\n\tdatabaseURL: \"https://my-finance-journal.firebaseio.com\",\r\n\tprojectId: \"my-finance-journal\",\r\n\tstorageBucket: \"my-finance-journal.appspot.com\",\r\n\tmessagingSenderId: \"152785363240\",\r\n\tappId: \"1:152785363240:web:e998b6a6a0fcacfb02701d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\n// Настройка redux devtools\r\nconst composeEnhancers =\r\n\ttypeof window === 'object' &&\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n\r\n// Создаем общий store, в него мы передаем reducer\r\n//reducer - это просто функция, которая меняет state через dispatch\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n// Обернул все приложение в Provider, чтобы связать redux и react. Передал общий store, теперь он доступен через props\r\n\r\nconst app = (\r\n\t<Provider store={store}>\r\n\t\t<BrowserRouter>\r\n\t\t\t<App/>\r\n\t\t</BrowserRouter>\r\n\t</Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__nqTMN\",\"MainModalTitle\":\"Main_MainModalTitle__qnLIa\",\"MaindeleteModal\":\"Main_MaindeleteModal__1qg2h\",\"addSection\":\"Main_addSection__1HoBv\",\"modalDeleteBtnBox\":\"Main_modalDeleteBtnBox__vtkJH\",\"deleteModal\":\"Main_deleteModal__1xfYO\",\"tableWrapper\":\"Main_tableWrapper__390c2\",\"infoTitle\":\"Main_infoTitle__nMyIU\",\"noCompany\":\"Main_noCompany__VuEXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"CompaniesList_row__1lBcr\",\"header\":\"CompaniesList_header__oNTx8\",\"CompanyName\":\"CompaniesList_CompanyName__39v1d\",\"Total\":\"CompaniesList_Total__UITMo\",\"afterTax\":\"CompaniesList_afterTax__OSmJK\",\"Actions\":\"CompaniesList_Actions__28fh-\",\"LinksInsideSidebar\":\"CompaniesList_LinksInsideSidebar__1seWx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"DepoStats_mainTitle__1eTeB\",\"totalContainer\":\"DepoStats_totalContainer__10yY-\",\"currencyBox\":\"DepoStats_currencyBox__3ocnS\",\"rub\":\"DepoStats_rub__aiAZL\",\"usd\":\"DepoStats_usd__VJZaa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2quG7\",\"InputWrapper\":\"Input_InputWrapper__3uapM\",\"Error\":\"Input_Error__29Muj\",\"redText\":\"Input_redText__1IoDx\",\"depositInput\":\"Input_depositInput__3CU92\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__IpAGL\",\"mainTitle\":\"Auth_mainTitle__aH4nf\",\"greetings\":\"Auth_greetings__2uHv6\",\"authForm\":\"Auth_authForm__Yy_6p\",\"btnContainer\":\"Auth_btnContainer__1zDFt\",\"error\":\"Auth_error__1b7fM\",\"showError\":\"Auth_showError__3H2TJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__7fSAt\",\"FadeBg\":\"Modal_FadeBg__2Imzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"year\":\"DepoInnerWrapper_year__2KZ8M\",\"currency\":\"DepoInnerWrapper_currency__1A39Z\",\"DepoCurrency\":\"DepoInnerWrapper_DepoCurrency__2aLag\",\"name\":\"DepoInnerWrapper_name__3hsAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__3o96u\",\"titleH\":\"Title_titleH__1xB_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3bOL9\",\"green\":\"Button_green__3e1jU\",\"blue\":\"Button_blue__sg7FF\",\"yellow\":\"Button_yellow__t73An\",\"red\":\"Button_red__17dDb\",\"addDepo\":\"Button_addDepo__bhl6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__gwbED\",\"logoutLink\":\"Header_logoutLink__2zkMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__Jfo2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__WmDp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"DepoDateAndAmount_li__39fv8\"};"],"sourceRoot":""}