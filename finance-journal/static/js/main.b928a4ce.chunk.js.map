{"version":3,"sources":["components/CompaniesList/CompaniesList.module.scss","container/Main/Main.module.scss","hoc/Modal/Modal.module.scss","components/UI/Input/Input.module.scss","container/Deposit/Deposit.module.scss","components/Title/Title.module.scss","components/UI/Button/Button.module.scss","container/DepoWrapper/DepoInnerWrapper.module.scss","components/DepoCurrency/DepoCurrency.module.scss","hoc/Layout/Layout.module.scss","components/Preloader/Preloader.module.scss","components/DepoYear/DepoYear.module.scss","components/DepoDateAndAmount/DepoDateAndAmount.module.scss","container/SidebarNavigation/SidebarNavigation.module.scss","components/LinksInsideSidebar/LinksInsideSidebar.module.scss","components/Header/Header.module.scss","hoc/Layout/Layout.js","components/CompaniesList/CompaniesList.js","components/Title/Title.js","components/UI/Button/Button.js","hoc/Modal/Modal.js","components/UI/Input/Input.js","hoc/Modal/FadeBg.js","axios/axios-settings.js","components/Preloader/Preloader.js","container/Main/Main.js","components/DepoDateAndAmount/DepoDateAndAmount.js","components/DepoCurrency/DepoCurrency.js","container/DepoWrapper/DepoInnerWrapper.js","components/DepoYear/DepoYear.js","container/Deposit/Deposit.js","components/LinksInsideSidebar/LinksInsideSidebar.js","container/SidebarNavigation/SidebarNavigation.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","className","classes","this","props","children","React","Component","CompaniesList","header","companies","companyArr","name","key","afterTax","Math","random","arrItem","row","datatype","CompanyName","onClick","showModalHandlerDelete","count","dividendPerShare","ceil","push","renderCompanies","footer","Total","beforeTax","Title","titleH","title","Button","cls","Buttton","classses","forEach","item","join","Modal","Input","InputWrapper","htmlFor","label","type","id","onChange","defaultValue","Error","showError","errorMessage","FadeBg","axios","create","baseURL","Preloader","Main","state","nameForDelete","showPreloader","modals","isOpenModalAddCompany","isOpenModalUpdateCompany","inputs","addCompany","value","company","showModalHandler","e","popup","setState","target","parentNode","querySelector","textContent","closeModalHandler","createCompany","updateCompany","a","async","put","response","status","deletePositionHandler","delete","preUpdateCompany","Object","assign","parent","mainModalFormAddCompany","preventDefault","patch","console","error","getCompanyHandler","countDividends","round","get","data","portfolio","addSection","Fragment","MainModalTitle","onSubmit","map","obj","index","deleteModal","modalDeleteBtnBox","DepoDateAndAmount","newDep","depo","sort","b","Date","date","li","day","getDate","month","toLocaleDateString","slice","length","amount","toLocaleString","currency","DepoCurrency","currencyArr","year","keys","arrYears","users","aHmcqjPPBwXvW397FPL31TtkwfJ3","deposit","DepoInnerWrapper","isOpen","showMoreHandler","DepoYear","Deposit","infoTitle","style","margin","padding","placeholder","min","depoAndStatistic","LinksInsideSidebar","to","SidebarNavigation","Header","App","path","component","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b928a4ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"CompaniesList_row__2lrJb\",\"header\":\"CompaniesList_header__MrGh9\",\"footer\":\"CompaniesList_footer__2Abbl\",\"CompanyName\":\"CompaniesList_CompanyName__2UmpC\",\"Total\":\"CompaniesList_Total__WAK6z\",\"afterTax\":\"CompaniesList_afterTax__NTcIC\",\"Actions\":\"CompaniesList_Actions__1d3N3\",\"LinksInsideSidebar\":\"CompaniesList_LinksInsideSidebar__3UPM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__tLe8l\",\"MainModalTitle\":\"Main_MainModalTitle__1f-1K\",\"MaindeleteModal\":\"Main_MaindeleteModal__2x1yU\",\"addSection\":\"Main_addSection__2794a\",\"modalDeleteBtnBox\":\"Main_modalDeleteBtnBox__30gau\",\"deleteModal\":\"Main_deleteModal__1xsa4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1BCvN\",\"FadeBg\":\"Modal_FadeBg__1qjO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2m_YL\",\"InputWrapper\":\"Input_InputWrapper__1W6c2\",\"Error\":\"Input_Error__3vb89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTitle\":\"Deposit_infoTitle__3jPvq\",\"depoAndStatistic\":\"Deposit_depoAndStatistic__BLdFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__3UNCg\",\"titleH\":\"Title_titleH__2rTQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Buttton\":\"Button_Buttton__3uSZf\",\"green\":\"Button_green__3BDkj\",\"blue\":\"Button_blue__1uYHC\",\"red\":\"Button_red__2OblT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"year\":\"DepoInnerWrapper_year__1LRHI\",\"currency\":\"DepoInnerWrapper_currency__oXRuk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DepoCurrency\":\"DepoCurrency_DepoCurrency__3Llog\",\"name\":\"DepoCurrency_name__31HJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1Ayt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__3uQx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DepoYear\":\"DepoYear_DepoYear__bc8tI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"DepoDateAndAmount_li__1orGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidebarNavigation\":\"SidebarNavigation_SidebarNavigation__2A7r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinksInsideSidebar\":\"LinksInsideSidebar_LinksInsideSidebar__1QGfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__-hM5V\"};","import React from \"react\";\r\nimport classes from \"./Layout.module.scss\";\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n\treturn (\r\n\t\t<div className={classes.Layout}>\r\n\t\t\t{this.props.children}\r\n\t\t</div>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport classes from \"./CompaniesList.module.scss\";\r\n\r\nconst CompaniesList = props => {\r\n\t// Метод для вывода компаний на страницу\r\n\tconst renderCompanies = (companies) => {\r\n\t\tconst companyArr = [];\r\n\r\n\r\n\t\tfor (let name in companies) {\r\n\t\t\tconst key = `${props.afterTax} + ${Math.random()}`;\r\n\r\n\t\t\tconst arrItem = (\r\n\t\t\t\t<div className={classes.row} key={key}>\r\n\t\t\t\t\t<span datatype=\"name\" className={classes.CompanyName}  onClick={props.showModalHandlerDelete}>{name}</span>\r\n\t\t\t\t\t<span datatype=\"count\">{companies[name].count}</span>\r\n\t\t\t\t\t<span datatype=\"dividendPerShare\">{companies[name].dividendPerShare}</span>\r\n\t\t\t\t\t<span>{Math.ceil(companies[name].count * companies[name].dividendPerShare * 100) / 100}</span>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\t\tcompanyArr.push(arrItem);\r\n\t\t}\r\n\r\n\t\treturn companyArr\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.CompaniesList}>\r\n\t\t\t<div className={classes.header}>\r\n\t\t\t\t<span>Имя компании</span>\r\n\t\t\t\t<span>Акции </span>\r\n\t\t\t\t<span>Дивиденд</span>\r\n\t\t\t\t<span>Прибыль (год)</span>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\trenderCompanies(props.companies)\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\t<div className={classes.footer}>\r\n\t\t\t\t\t<div className={classes.Total}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\tПрибыль до вычета налогов\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{props.beforeTax}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className={classes.Total}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\tПрибыль после вычета налогов\r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t<span className={classes.afterTax}>\r\n\t\t\t\t\t\t\t{props.afterTax}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default CompaniesList;\r\n","import React from \"react\";\r\nimport classes from './Title.module.scss'\r\n\r\nexport const Title = props => {\r\n\treturn (\r\n\t\t<div className={classes.Title}>\r\n\t\t\t<h4 className={classes.titleH}>\r\n\t\t\t\t{props.title}\r\n\t\t\t</h4>\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Button.module.scss'\r\n\r\nexport const Button = props => {\r\n\tconst cls = [classes.Buttton];\r\n\tprops.classses.forEach(item => cls.push(classes[item]));\r\n\r\n\treturn (\r\n\t\t<button onClick={props.onClick} className={cls.join(' ')}>\r\n\t\t\t{props.name}\r\n\t\t</button>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Modal.module.scss'\r\n\r\nexport const Modal = props => {\r\n\tconst cls = [classes.Modal];\r\n\r\n\tif (!props.classes) {\r\n\r\n\t} else {\r\n\t\tprops.classes.forEach(item => cls.push(classes[item]));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={cls.join(' ')}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Input.module.scss'\r\n\r\nexport const Input = props => {\r\n\tconst cls = [classes.Input];\r\n\r\n\tif (!props.classes) {\r\n\t} else {\r\n\t\tprops.classes.forEach(item => cls.push(classes[item]))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.InputWrapper}>\r\n\t\t\t<label\r\n\t\t\t\thtmlFor={props.htmlFor}\r\n\t\t\t>{props.label}</label>\r\n\r\n\t\t\t<input\r\n\t\t\t\tclassName={cls.join(' ')}\r\n\t\t\t\ttype={props.type || 'text'}\r\n\t\t\t\tid={props.htmlFor}\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t\tdefaultValue={props.defaultValue}\r\n\t\t\t/>\r\n\r\n\t\t\t<span className={classes.Error}>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.showError\r\n\t\t\t\t\t\t? props.errorMessage || \"Введите корректное значение\"\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Modal.module.scss'\r\n\r\nexport const FadeBg = props => {\r\n\treturn (\r\n\t\t<div onClick={props.onClick} className={classes.FadeBg}/>\r\n\t)\r\n};","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n\tbaseURL: \"https://my-finance-journal.firebaseio.com/users/\"\r\n})","import React from \"react\";\r\nimport classes from './Preloader.module.scss'\r\n\r\nexport const Preloader = props => {\r\n\treturn (\r\n\t\t<div className={classes.Preloader}>\r\n\t\t\t<div>\r\n\t\t\t\t<div/>\r\n\t\t\t\t<div/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Main.module.scss'\r\nimport CompaniesList from \"../../components/CompaniesList/CompaniesList\";\r\nimport {Title} from \"../../components/Title/Title\";\r\nimport {Button} from \"../../components/UI/Button/Button\";\r\nimport {Modal} from \"../../hoc/Modal/Modal\";\r\nimport {Input} from \"../../components/UI/Input/Input\";\r\nimport {FadeBg} from \"../../hoc/Modal/FadeBg\";\r\nimport axios from '../../axios/axios-settings'\r\nimport {Preloader} from \"../../components/Preloader/Preloader\";\r\n\r\n// TODO: создать общую переменную this.state.key, которая будет определять пользователя\r\n\r\nexport default class Main extends React.Component {\r\n\tstate = {\r\n\t\tkey: \"aHmcqjPPBwXvW397FPL31TtkwfJ3\",\r\n\t\tnameForDelete: \"\",\r\n\t\tshowPreloader: true,\r\n\t\tmodals: {\r\n\t\t\tisOpenModalAddCompany: false,\r\n\t\t\tisOpenModalUpdateCompany: false\r\n\t\t},\r\n\t\tinputs: {\r\n\t\t\taddCompany: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Имя компании\",\r\n\t\t\t\t\terrorMessage: \"Поле не может быть пустым\",\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tclassName: \"\",\r\n\t\t\t\t\tshowError: false,\r\n\t\t\t\t\tvalue: \"name\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Количество акций\",\r\n\t\t\t\t\terrorMessage: \"Поле может содержать только цифры\",\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tclassName: \"\",\r\n\t\t\t\t\tshowError: false,\r\n\t\t\t\t\tvalue: \"count\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Размер дивиденда (в год)\",\r\n\t\t\t\t\terrorMessage: \"Поле может содержать только цифры\",\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tclassName: \"\",\r\n\t\t\t\t\tshowError: false,\r\n\t\t\t\t\tvalue: \"dividendPerShare\"\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t},\r\n\t\tcompany: {\r\n\t\t\tname: \"\",\r\n\t\t\tcount: \"\",\r\n\t\t\tdividendPerShare: \"\"\r\n\t\t},\r\n\t\tcompanies: {},\r\n\t\tbeforeTax: \"\",\r\n\t\tafterTax: \"\"\r\n\t};\r\n\r\n\tshowModalHandler = (e, popup) => {\r\n\t\tconst modals = {...this.state.modals};\r\n\t\tmodals[popup] = true;\r\n\r\n\t\tif (popup === \"isOpenModalUpdateCompany\") {\r\n\t\t\tconst nameForDelete = e.target.parentNode.querySelector('span').textContent;\r\n\t\t\tthis.setState({modals, nameForDelete});\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.setState({modals});\r\n\t};\r\n\r\n\tcloseModalHandler = (e, popup) => {\r\n\t\tconst modals = {...this.state.modals};\r\n\t\tmodals[popup] = false;\r\n\r\n\t\tthis.setState({modals})\r\n\t};\r\n\r\n\r\n\t// Создание компании для того, чтобы отправить её в будущем в базу\r\n\tcreateCompany = (name, count, dividendPerShare) => {\r\n\t\treturn {\r\n\t\t\t[name]: {\r\n\t\t\t\tcount,\r\n\t\t\t\tdividendPerShare\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t// Обновление данных по компаниям\r\n\tupdateCompany = async () => {\r\n\t\tconst {name, count, dividendPerShare} = this.state.company;\r\n\r\n\t\tconst response = await axios.put(`/${this.state.key}/portfolio/companies/${name}/count.json`, count);\r\n\t\tawait axios.put(`/${this.state.key}/portfolio/companies/${name}/dividendPerShare.json`, dividendPerShare);\r\n\r\n\t\tif (response.status === 200) {\r\n\t\t\tthis.setState({showPreloader: true});\r\n\r\n\t\t\tthis.renderCompanies();\r\n\t\t\tthis.closeModalHandler(null, \"isOpenModalUpdateCompany\")\r\n\t\t}\r\n\t};\r\n\t// Удаление компаний\r\n\tdeletePositionHandler = async (name) => {\r\n\t\tconst response = await axios.delete(`/${this.state.key}/portfolio/companies/${name}.json`);\r\n\r\n\t\tif (response.status === 200) {\r\n\t\t\tthis.setState({showPreloader: true});\r\n\r\n\t\t\tthis.renderCompanies();\r\n\t\t\tthis.closeModalHandler(null, \"isOpenModalUpdateCompany\")\r\n\t\t}\r\n\t};\r\n\r\n\t// Собираю данные для редактирования/удаления компании\r\n\tpreUpdateCompany = (e) => {\r\n\t\tconst company = Object.assign({}, this.state.company);\r\n\t\tconst parent = e.target.parentNode;\r\n\r\n\t\tcompany.name = e.target.textContent;\r\n\t\tcompany.count = parent.querySelector(\"span[datatype='count']\").textContent;\r\n\t\tcompany.dividendPerShare = parent.querySelector(\"span[datatype='dividendPerShare']\").textContent;\r\n\r\n\t\tthis.setState({company});\r\n\r\n\t\tthis.showModalHandler(e, \"isOpenModalUpdateCompany\");\r\n\t};\r\n\r\n\t// Отправка запроса на сервер и добавление компании в общий список\r\n\t// TODO: в будущем сделать проверку, если компания уже существует, то нужно делать PUT, а не patch\r\n\tmainModalFormAddCompany = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tlet company = Object.assign({}, this.state.company);\r\n\r\n\t\t\tconst {name, count, dividendPerShare} = this.state.company;\r\n\r\n\t\t\tcompany = this.createCompany(name, count, dividendPerShare);\r\n\r\n\t\t\tconst response = await axios.patch(`/${this.state.key}/portfolio/companies.json`, company);\r\n\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tconst modals = {...this.state.modals};\r\n\t\t\t\tmodals.isOpenModalAddCompany = false;\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcompany,\r\n\t\t\t\t\tmodals\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.renderCompanies();\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e)\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t// Получаю значения из инпутов и записываю их в компанию, чтобы потом отправлять её на сервер\r\n\tgetCompanyHandler = (e, value) => {\r\n\t\tconst company = Object.assign({}, this.state.company);\r\n\r\n\t\tcompany[value] = e.target.value;\r\n\t\tthis.setState({company});\r\n\t};\r\n\r\n\t// Правильный подсчет дивидендов\r\n\tcountDividends = (companies) => {\r\n\t\tlet beforeTax = 0;\r\n\t\tlet afterTax = 0;\r\n\t\t// Суммирую\r\n\t\tfor (let name in companies) {\r\n\t\t\tbeforeTax += (companies[name].count * companies[name].dividendPerShare);\r\n\t\t}\r\n\t\t// Округляю\r\n\t\tbeforeTax = Math.round(beforeTax * 100) / 100;\r\n\t\t// Вычисляю читый доход без налогов и округляю\r\n\t\tafterTax = Math.round((beforeTax - (beforeTax * 0.13)) * 100) / 100;\r\n\t\t// озвращаю объект\r\n\t\treturn {\r\n\t\t\tbeforeTax, afterTax\r\n\t\t}\r\n\t};\r\n\r\n\t// Асинхронная операция на сервер, рендерит список компаний\r\n\trenderCompanies = async () => {\r\n\t\ttry {\r\n\t\t\t// Импорт портфеля пользователя\r\n\t\t\tconst response = await axios.get(`/${this.state.key}.json`);\r\n\t\t\t// Импорт компаний\r\n\t\t\tconst {companies} = response.data.portfolio;\r\n\t\t\tconst {beforeTax, afterTax} = this.countDividends(companies);\r\n\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tthis.setState({companies, beforeTax, afterTax, showPreloader: false});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e)\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.renderCompanies();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Main}>\r\n\t\t\t\t<Title title=\"Список компаний\"/>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.showPreloader\r\n\t\t\t\t\t\t? <Preloader/>\r\n\t\t\t\t\t\t: <CompaniesList\r\n\t\t\t\t\t\t\tcompanies={this.state.companies}\r\n\t\t\t\t\t\t\tbeforeTax={this.state.beforeTax}\r\n\t\t\t\t\t\t\tafterTax={this.state.afterTax}\r\n\t\t\t\t\t\t\tshowModalHandlerDelete={e => this.preUpdateCompany(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div className={classes.addSection}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassses={[\"green\"]}\r\n\t\t\t\t\t\tname=\"Добавить компанию\"\r\n\t\t\t\t\t\tonClick={e => this.showModalHandler(e, \"isOpenModalAddCompany\")}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Модальное окно для добавления компании */}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.modals.isOpenModalAddCompany\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t\t\t<h3 className={classes.MainModalTitle}>Добавить компанию</h3>\r\n\r\n\t\t\t\t\t\t\t\t<form onSubmit={this.mainModalFormAddCompany}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis.state.inputs.addCompany.map((obj, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={obj.label}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={obj.errorMessage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowError={obj.showError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => this.getCompanyHandler(e, obj.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"blue\"]}\r\n\t\t\t\t\t\t\t\t\t\tname=\"Добавить компанию\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => this.showModalHandler(e, \"isOpenModalAddCompany\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t<FadeBg onClick={e => this.closeModalHandler(e, \"isOpenModalAddCompany\")}/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{/* Модальное окно для удаления/редактирования компании */}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.modals.isOpenModalUpdateCompany\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t\t\t<h3 className={classes.deleteModal}>\r\n\t\t\t\t\t\t\t\t\tКарточка компании \"{this.state.nameForDelete}\"\r\n\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.state.inputs.addCompany.map((obj, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\tindex === 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t\t\t\t: <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={obj.label}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={obj.errorMessage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowError={obj.showError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state.company[obj.value]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => this.getCompanyHandler(e, obj.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t<div className={classes.modalDeleteBtnBox}>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tname=\"Удалить\"\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"red\"]}\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => this.deletePositionHandler(this.state.nameForDelete)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tname=\"Изменить\"\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"green\"]}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.updateCompany}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t<FadeBg onClick={e => this.closeModalHandler(e, \"isOpenModalUpdateCompany\")}/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React from \"react\";\r\nimport classes from './DepoDateAndAmount.module.scss'\r\n\r\nconst DepoDateAndAmount = props => {\r\n\tconst dep = props.depo;\r\n\r\n\t// Сознание нового массива дата-сумма\r\n\tconst newDep = dep.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n\t// Получение правильного формата даты и времени\r\n\tconst getDate = date => {\r\n\t\tconst day = new Date(date).getDate();\r\n\t\tlet month = new Date(date).toLocaleDateString(\"ru\", {month: 'long',});\r\n\r\n\t\tmonth === 'март' ? month += \"a\" : month = month.slice(0, month.length - 1) + \"я\";\r\n\r\n\t\treturn [day, month].join(' ');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tnewDep.map((obj, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li className={classes.li} key={index}>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{getDate(obj.date)}\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{obj.amount.toLocaleString(\"ru\")} {props.currency === 'rub' ? \"руб\" : props.currency === 'usd' ? \"$\" : null}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n};\r\n\r\nexport default DepoDateAndAmount;","import React from \"react\";\r\nimport classes from './DepoCurrency.module.scss'\r\nimport DepoDateAndAmount from \"../DepoDateAndAmount/DepoDateAndAmount\";\r\n\r\n\r\nconst DepoCurrency = props => {\r\n\tconst currencyArr = props.depo[props.year];\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tcurrencyArr.map((obj, index) => {\r\n\t\t\t\t\t// ключ - это имя объекта (валюта)\r\n\t\t\t\t\tconst key = Object.keys(obj);\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={index} className={classes.DepoCurrency}>\r\n\t\t\t\t\t\t\t<h4 className={classes.name}>{key[0] === 'rub' ? \"Рубли\" : key[0] === \"usd\" ? \"Доллары\" : null}</h4>\r\n\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<DepoDateAndAmount currency={key} depo={obj[key]}/>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n};\r\n\r\nexport default DepoCurrency;","import React from \"react\";\r\nimport classes from \"./DepoInnerWrapper.module.scss\";\r\nimport DepoCurrency from \"../../components/DepoCurrency/DepoCurrency\";\r\nimport {users} from \"../../base\";\r\n\r\nconst arrYears = users.aHmcqjPPBwXvW397FPL31TtkwfJ3.portfolio.deposit;\r\n\r\nexport default class DepoInnerWrapper extends React.Component {\r\n  state = {\r\n\tisOpen: false\r\n  };\r\n\r\n  showMoreHandler = () => {\r\n\tthis.setState({\r\n\t  isOpen: !this.state.isOpen\r\n\t});\r\n  };\r\n\r\n  render() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t  <p onClick={this.showMoreHandler} className={classes.year}>\r\n\t\t\t{this.props.year} год\r\n\t\t  </p>\r\n\r\n\t\t  <div className={classes.currency}>\r\n\t\t\t{this.state.isOpen\r\n\t\t\t\t? (\r\n\t\t\t\t\t<DepoCurrency\r\n\t\t\t\t\t\tdepo={arrYears[this.props.index]}\r\n\t\t\t\t\t\tyear={this.props.year}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null}\r\n\t\t  </div>\r\n\t\t</div>\r\n\t);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classes from './DepoYear.module.scss'\r\nimport DepoInnerWrapper from \"../../container/DepoWrapper/DepoInnerWrapper\";\r\nimport axios from \"../../axios/axios-settings\";\r\n\r\nclass DepoYear extends React.Component {\r\n\tstate = {\r\n\t\tdeposit: []\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\t// TODO: создать общую переменную UserKey, которая будет определять пользователя\r\n\t\t// сейчас это aHmcqjPPBwXvW397FPL31TtkwfJ3\r\n\t\ttry {\r\n\t\t\t// Ключ (ID пользователя)\r\n\t\t\tconst userKey = \"aHmcqjPPBwXvW397FPL31TtkwfJ3\";\r\n\t\t\t// Импорт портфеля пользователя\r\n\t\t\tconst response = await axios.get(`/${userKey}.json`);\r\n\t\t\t// Импорт компаний\r\n\t\t\tconst {deposit} = response.data.portfolio;\r\n\r\n\t\t\tthis.setState({deposit})\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.DepoYear}>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.deposit.map((obj, index) => {\r\n\t\t\t\t\t\tconst year = Object.keys(obj);\r\n\t\t\t\t\t\treturn <DepoInnerWrapper year={year} index={index} key={index}/>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default DepoYear;","import React from \"react\";\r\nimport classes from './Deposit.module.scss'\r\nimport DepoYear from \"../../components/DepoYear/DepoYear\";\r\n\r\n\r\nexport default class Deposit extends React.Component {\r\n  render() {\r\n\treturn (\r\n\t\t<div className={classes.Deposit}>\r\n\r\n\t\t  {/* Форма ввода пополнения */}\r\n\t\t  <div>\r\n\t\t\t<h3 className={classes.infoTitle}>\r\n\t\t\t  Добавить пополнение\r\n\t\t\t</h3>\r\n\r\n\t\t\t<div style={{margin: \"15px 0\", padding: \"0 15px\"}}>\r\n\t\t\t  <form>\r\n\t\t\t\t<input type=\"text\" placeholder={'Введите сумму'}/>\r\n\t\t\t\t<input type=\"date\" min=\"2000-01-01\"/>\r\n\t\t\t\t<button>\r\n\t\t\t\t  Добавить пополнение\r\n\t\t\t\t</button>\r\n\t\t\t  </form>\r\n\t\t\t</div>\r\n\r\n\t\t  </div>\r\n\r\n\t\t  {/*Общий контейнер для пополнения и статистики*/}\r\n\t\t  <div className={classes.depoAndStatistic}>\r\n\t\t\t{/*Пополнения по годам*/}\r\n\t\t\t<h3 className={classes.infoTitle}>Общая информация по пополнениям</h3>\r\n\r\n\t\t\t<DepoYear/>\r\n\r\n\t\t\t{/* Статистика */}\r\n\t\t\t<div>\r\n\t\t\t  <p>\r\n\t\t\t\tТут планируется блок статистики\r\n\t\t\t  </p>\r\n\r\n\t\t\t  <div>\r\n\t\t\t\t<h5>Всего пополнений:</h5>\r\n\t\t\t\t<ul>\r\n\t\t\t\t  <li>Рубли: 300 000 руб</li>\r\n\t\t\t\t  <li>Доллары: 41 $</li>\r\n\t\t\t\t</ul>\r\n\t\t\t  </div>\r\n\r\n\t\t\t</div>\r\n\t\t  </div>\r\n\r\n\t\t</div>\r\n\t)\r\n  }\r\n}","import React from \"react\";\r\nimport classes from \"./LinksInsideSidebar.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst LinksInsideSidebar = props => {\r\n\treturn (\r\n\t\t<nav className={classes.LinksInsideSidebar}>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to={\"/\"}> Главная </NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to={\"/depo\"}> Пополнения </NavLink>\r\n\t\t\t</li>\r\n\t\t</nav>\r\n\t)\r\n};\r\n\r\nexport default LinksInsideSidebar;","import React from \"react\";\r\nimport classes from './SidebarNavigation.module.scss'\r\nimport LinksInsideSidebar from \"../../components/LinksInsideSidebar/LinksInsideSidebar\";\r\n\r\nexport default class SidebarNavigation extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className={classes.SidebarNavigation}>\r\n\t\t\t\t<LinksInsideSidebar/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport classes from './Header.module.scss'\r\n\r\nconst Header = props => {\r\n\treturn (\r\n\t\t<div className={classes.Header}>\r\n\t\t\tFinance Journal\r\n\t\t</div>\r\n\t)\r\n\r\n};\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport \"./App.scss\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport Main from \"./container/Main/Main\";\r\nimport Deposit from \"./container/Deposit/Deposit\";\r\nimport SidebarNavigation from \"./container/SidebarNavigation/SidebarNavigation\";\r\nimport Header from \"./components/Header/Header\";\r\nimport {Route, Switch} from \"react-router-dom\"\r\n\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<Header/>\r\n\r\n\t\t\t\t<div className=\"main-page-wrapper\">\r\n\t\t\t\t\t<SidebarNavigation/>\r\n\r\n\t\t\t\t\t<div className={'main-page-content'}>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route path={\"/depo\"} component={Deposit}/>\r\n\t\t\t\t\t\t\t<Route path={\"/\"} component={Main}/>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nconst app = (\r\n\t<BrowserRouter>\r\n\t  <App/>\r\n\t</BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}