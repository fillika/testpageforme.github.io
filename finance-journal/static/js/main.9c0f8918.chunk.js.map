{"version":3,"sources":["components/SidebarNavigation/SidebarNavigation.module.scss","components/LinksInsideSidebar/LinksInsideSidebar.module.scss","hoc/Layout/Layout.js","components/Title/Title.js","components/UI/Button/Button.js","hoc/Modal/Modal.js","components/CompaniesList/CompaniesList.js","components/UI/Input/Input.js","hoc/Modal/FadeBg.js","components/Preloader/Preloader.js","redux/actions/actionsType.js","Modules/formValidation.js","redux/reducers/mainReducer/actions.js","container/Main/Main.js","components/DepoDateAndAmount/DepoDateAndAmount.js","container/Deposit/DepoInnerWrapper/DepoInnerWrapper.js","redux/reducers/depositReducer/actions.js","container/Deposit/Deposit.js","components/LinksInsideSidebar/LinksInsideSidebar.js","components/SidebarNavigation/SidebarNavigation.js","redux/reducers/authReducer/actions.js","components/Header/Header.js","container/Auth/Auth.js","App.js","serviceWorker.js","redux/reducers/mainReducer/mainReducer.js","redux/reducers/depositReducer/depositReducer.js","redux/reducers/authReducer/authReducer.js","redux/reducers/rootReducers.js","index.js","container/Deposit/Deposit.module.scss","container/Main/Main.module.scss","components/CompaniesList/CompaniesList.module.scss","components/UI/Input/Input.module.scss","container/Auth/Auth.module.scss","hoc/Modal/Modal.module.scss","container/Deposit/DepoInnerWrapper/DepoInnerWrapper.module.scss","components/Title/Title.module.scss","components/UI/Button/Button.module.scss","components/Header/Header.module.scss","hoc/Layout/Layout.module.scss","components/Preloader/Preloader.module.scss","components/DepoDateAndAmount/DepoDateAndAmount.module.scss"],"names":["module","exports","Layout","className","classes","this","props","children","React","Component","Title","titleH","title","Button","cls","classses","forEach","item","push","disabled","onClick","join","name","Modal","CompaniesList","header","companies","companyArr","currency","key","afterTax","Math","random","arrItem","row","datatype","CompanyName","showModalHandlerDelete","count","dividendPerShare","ceil","renderCompanies","beforeTax","bt","footer","Total","renderFooter","Input","valid","Error","InputWrapper","htmlFor","label","type","id","onChange","placeholder","autoComplete","autocomplete","value","redText","touched","errorMessage","FadeBg","Preloader","RENDER","validateControl","validation","isValid","required","trim","is","number","email","minLength","length","dispatch","getState","a","async","state","mainReducer","db","firebase","database","ref","authReducer","token","update","once","then","snapshot","val","undefined","showPreloader","Object","keys","companyName","crc","includes","catch","err","console","error","openModal","e","modalName","modals","openCreateModal","nameForDelete","openUpdateModal","target","parentNode","querySelector","textContent","closeModal","formAddInputs","control","isFormValid","reRenderCompanies","response","map","Main","inputName","index","inputObj","getCompanyData","infoTitle","noCompany","tableWrapper","clickOnCompany","addSection","isOpenModalAddCompany","Fragment","MainModalTitle","onSubmit","createCompany","renderInputs","selectHandler","isOpenModalUpdateCompany","deleteModal","modalDeleteBtnBox","deleteCompany","updateCompany","connect","JSON","parse","stringify","preventDefault","create","company","set","remove","assign","formUpdInputs","parent","inputsObj","Inputs","getCompanyDataChangeHandler","DepoDateAndAmount","newDep","depo","sort","b","Date","date","obj","data-currency","data-year","getFullYear","data-id","li","day","getDate","month","toLocaleDateString","slice","amount","toLocaleString","DepoInnerWrapper","isOpen","showMoreHandler","setState","year","currName","currencyArr","DepoCurrency","depositReducer","renderDeposit","deposit","Deposit","onChangeHandler","createDeposit","inputsBox","renderInpus","selected","depositData","handleChangeDate","datePicker","maxDate","select","depoAndStatistic","noDeposit","DepoYear","showModal","delModalTitle","modalButtons","deleteDeposit","formAddDepoInputs","amountInput","url","data","result","filter","log","currentTarget","dataset","inputs","controlName","LinksInsideSidebar","to","SidebarNavigation","showError","message","setTimeout","logout","auth","signOut","localStorage","removeItem","Header","logoutLink","href","Auth","input","authChangeHandler","greetings","authForm","renderInput","btnContainer","loginHandler","bind","authInputs","isLogin","inputEmail","inputPassword","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","user","currentUser","emailVerified","login","uid","entryTime","metadata","setItem","sendEmailVerification","App","autoLogin","exact","path","component","getItem","Boolean","window","location","hostname","match","createOptionForAddInputs","errMessage","config","createOptionForUpdInputs","initState","combineReducers","action","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c0f8918.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidebarNavigation\":\"SidebarNavigation_SidebarNavigation__2yFEG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinksInsideSidebar\":\"LinksInsideSidebar_LinksInsideSidebar__1QGfA\"};","import React from \"react\";\r\nimport classes from \"./Layout.module.scss\";\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n\treturn (\r\n\t\t<div className={classes.Layout}>\r\n\t\t\t{this.props.children}\r\n\t\t</div>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport classes from './Title.module.scss'\r\n\r\nexport const Title = props => {\r\n\treturn (\r\n\t\t<div className={classes.Title}>\r\n\t\t\t<h4 className={classes.titleH}>\r\n\t\t\t\t{props.title}\r\n\t\t\t</h4>\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Button.module.scss'\r\n\r\nexport const Button = props => {\r\n\tconst cls = [classes.Button];\r\n\tprops.classses.forEach(item => cls.push(classes[item]));\r\n\r\n\treturn (\r\n\t\t<button disabled={!props.disabled} onClick={props.onClick} className={cls.join(' ')}>\r\n\t\t\t{props.name}\r\n\t\t</button>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Modal.module.scss'\r\n\r\nexport const Modal = props => {\r\n\tconst cls = [classes.Modal];\r\n\r\n\tif (!props.classes) {\r\n\r\n\t} else {\r\n\t\tprops.classes.forEach(item => cls.push(classes[item]));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={cls.join(' ')}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from \"./CompaniesList.module.scss\";\r\n\r\nconst CompaniesList = props => {\r\n\t// Метод для вывода компаний на страницу\r\n\tconst renderCompanies = (companies) => {\r\n\t\tconst companyArr = [];\r\n\r\n\t\tfor (let name in companies) {\r\n\r\n\t\t\tif (props.currency !== companies[name].currency) continue;\r\n\r\n\t\t\tconst key = `${props.afterTax} + ${Math.random()}`;\r\n\r\n\t\t\tconst arrItem = (\r\n\t\t\t\t<div className={classes.row} key={key}>\r\n\t\t\t\t\t<span datatype=\"name\" className={classes.CompanyName}\r\n\t\t\t\t\t\t  onClick={props.showModalHandlerDelete}>{name}</span>\r\n\t\t\t\t\t<span datatype=\"count\">{companies[name].count}</span>\r\n\t\t\t\t\t<span datatype=\"dividendPerShare\">{companies[name].dividendPerShare}</span>\r\n\t\t\t\t\t<span>{Math.ceil(companies[name].count * companies[name].dividendPerShare * 100) / 100}</span>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\t\tcompanyArr.push(arrItem);\r\n\t\t}\r\n\r\n\t\treturn companyArr\r\n\t};\r\n\t// Рендер футера с налогами\r\n\tfunction renderFooter(companies) {\r\n\t\tconst companyArr = [];\r\n\r\n\t\tlet beforeTax = 0;\r\n\t\tlet afterTax = 0;\r\n\r\n\t\tfor (let name in companies) {\r\n\t\t\tif (props.currency !== companies[name].currency) continue;\r\n\r\n\t\t\tconst bt = companies[name].count * companies[name].dividendPerShare;\r\n\t\t\tconst at = bt - (bt * 0.13);\r\n\r\n\t\t\tbeforeTax +=bt;\r\n\t\t\tafterTax +=at;\r\n\t\t}\r\n\r\n\t\tconst arrItem = (\r\n\t\t\t<div key={afterTax} className={classes.footer}>\r\n\t\t\t\t<div className={classes.Total}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\tПрибыль до вычета налогов\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{Math.ceil((beforeTax) * 100) / 100}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={classes.Total}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\tПрибыль после вычета налогов\r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t<span className={classes.afterTax}>\r\n\t\t\t\t\t\t\t{Math.ceil((afterTax) * 100) / 100}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tcompanyArr.push(arrItem);\r\n\t\treturn companyArr\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.CompaniesList}>\r\n\t\t\t<div className={classes.header}>\r\n\t\t\t\t<span>Имя компании</span>\r\n\t\t\t\t<span>Акции </span>\r\n\t\t\t\t<span>Дивиденд</span>\r\n\t\t\t\t<span>Прибыль (год)</span>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\trenderCompanies(props.companies)\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\trenderFooter(props.companies)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default CompaniesList;\r\n","import React from \"react\";\r\nimport classes from './Input.module.scss'\r\n\r\nexport const Input = props => {\r\n\tconst cls = [classes.Input];\r\n\r\n\tif (!props.classes) {\r\n\t} else {\r\n\t\tprops.classes.forEach(item => cls.push(classes[item]))\r\n\t}\r\n\r\n\tif (!props.valid) {\r\n\t\tcls.push(classes.Error)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.InputWrapper}>\r\n\t\t\t<label\r\n\t\t\t\thtmlFor={props.htmlFor}\r\n\t\t\t>{props.label}</label>\r\n\r\n\t\t\t<input\r\n\t\t\t\tclassName={cls.join(' ')}\r\n\t\t\t\ttype={props.type || 'text'}\r\n\t\t\t\tid={props.htmlFor}\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\tautoComplete={props.autocomplete}\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t/>\r\n\r\n\t\t\t<span className={classes.redText}>\r\n\t\t\t\t{\r\n\t\t\t\t\t!props.valid && props.touched\r\n\t\t\t\t\t\t? props.errorMessage || \"Введите корректное значение\"\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Modal.module.scss'\r\n\r\nexport const FadeBg = props => {\r\n\treturn (\r\n\t\t<div onClick={props.onClick} className={classes.FadeBg}/>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Preloader.module.scss'\r\n\r\nexport const Preloader = props => {\r\n\treturn (\r\n\t\t<div className={classes.Preloader}>\r\n\t\t\t<div>\r\n\t\t\t\t<div/>\r\n\t\t\t\t<div/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};","export const RENDER = \"RENDER\",\r\n\tMAIN_RENDER = \"MAIN_RENDER\",\r\n\tCURRENCY = \"CURRENCY\",\r\n\tCREATE_COMPANY = \"CREATE_COMPANY\",\r\n\tSHOW_PRELOADER = \"SHOW_PRELOADER\",\r\n\tCLOSE_PRELOADER = \"CLOSE_PRELOADER\",\r\n\tOPEN_MODAL = \"OPEN_MODAL\",\r\n\tOPEN_MODAL_UPDATE = \"OPEN_MODAL_UPDATE\",\r\n\tGET_COMPANY_DATA = \"GET_COMPANY_DATA\",\r\n\tCLOSE_MODAL = \"CLOSE_MODAL\",\r\n\tCHANGE_SELECT = \"CHANGE_SELECT\",\r\n\tON_CHANGE = \"ON_CHANGE\";\r\n\r\nexport const DEPOSIT_CLOSE_MODAL = \"DEPOSIT_CLOSE_MODAL\",\r\n\tDEPOSIT_RENDER = \"DEPOSIT_RENDER\";\r\n\r\nexport const AUTH_INPUT = \"AUTH_INPUT\",\r\n\tAUTH_LOGIN = \"AUTH_LOGIN\",\r\n\tAUTH_SHOW_ERROR = \"AUTH_SHOW_ERROR\",\r\n\tAUTH_CLOSE_ERROR = \"AUTH_CLOSE_ERROR\",\r\n\tAUTH_LOGOUT = \"AUTH_LOGOUT\",\r\n\tAUTH_AUTO_LOGIN = \"AUTH_AUTO_LOGIN\";\r\n\r\n// Тут создаю типы для actions","import is from \"is_js\";\r\n\r\n// 2 функции для инпутов на главной\r\nexport function createAddFormInputs(config, validation) {\r\n\treturn {\r\n\t\t...config,\r\n\t\tvalidation,\r\n\t\tvalid: !validation,\r\n\t\ttouched: false,\r\n\t\tvalue: \"\"\r\n\t}\r\n}\r\n\r\nexport function createUpdFormInputs(config, validation) {\r\n\treturn {\r\n\t\t...config,\r\n\t\tvalidation,\r\n\t\tvalid: true,\r\n\t\ttouched: true,\r\n\t\tvalue: \"\"\r\n\t}\r\n}\r\n\r\n// Валидация параметров из validation\r\nexport function validateControl(value, validation) {\r\n\tif (!validation) return true;\r\n\r\n\tlet isValid = true;\r\n\r\n\tif (validation.required) {\r\n\t\tisValid = value.trim() !== '' && isValid\r\n\t}\r\n\tif (validation.type === 'number') {\r\n\t\tisValid = is.number(+value) && isValid\r\n\t}\r\n\tif (validation.type === 'email') {\r\n\t\tisValid = is.email(value) && isValid\r\n\t}\r\n\tif (validation.minLength) {\r\n\t\tisValid = validation.minLength <= value.length && isValid\r\n\t}\r\n\r\n\treturn isValid\r\n}","import {\r\n\tCHANGE_SELECT,\r\n\tCLOSE_MODAL,\r\n\tCREATE_COMPANY,\r\n\tCURRENCY,\r\n\tGET_COMPANY_DATA,\r\n\tOPEN_MODAL_UPDATE,\r\n\tRENDER, SHOW_PRELOADER\r\n} from \"../../actions/actionsType\";\r\nimport {validateControl} from \"../../../Modules/formValidation\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\n\r\n// Асинхронная операция на сервер, рендерит список компаний\r\nexport function renderCompanies() {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst db = firebase.database();\r\n\r\n\t\t//NOTE: Перед рендерингом посылаю запрос, чтобы в пустом массиве компаний создать объект без null\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').update({});\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').once('value')\r\n\t\t\t.then(snapshot => {\r\n\t\t\t\tconst companies = snapshot.val();\r\n\r\n\t\t\t\tif (companies === null || companies === undefined) {\r\n\t\t\t\t\tdispatch({type: RENDER, showPreloader: false, companies: {}});\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst currency = [...state.currency];\r\n\r\n\t\t\t\tdispatch({type: RENDER, companies, showPreloader: false});\r\n\t\t\t\t// Ищу сколько всего валют, пушу в массив новые валюты, получаю массив без дубликатов\r\n\t\t\t\tObject.keys(companies).forEach(companyName => {\r\n\t\t\t\t\tconst crc = companies[companyName].currency;\r\n\t\t\t\t\tif (!currency.includes(crc)) currency.push(crc)\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdispatch({type: CURRENCY, currency})\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err));\r\n\t}\r\n}\r\n\r\n// Создание компании\r\nexport function createCompany(e) {\r\n\te.preventDefault();\r\n\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst db = firebase.database();\r\n\t\tconst {name, count, dividendPerShare, currency} = state.company;\r\n\t\tconst company = create(name, count, dividendPerShare, currency);\r\n\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').update(company);\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\tconst modals = {...state.modals};\r\n\t\t\t\tconst formAddInputs = {...state.formAddInputs};\r\n\t\t\t\tmodals.isOpenModalAddCompany = false;\r\n\t\t\t\tconst companies = response.val();\r\n\r\n\t\t\t\t// очищаю инпут value, чтобы после добавления компании поля были пустыми\r\n\t\t\t\tObject.keys(formAddInputs).forEach(name => {\r\n\t\t\t\t\tconst control = {...formAddInputs[name]};\r\n\t\t\t\t\tcontrol.value = \"\";\r\n\t\t\t\t\tformAddInputs[name] = control;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdispatch({type: CREATE_COMPANY, company, companies, modals, formAddInputs});\r\n\t\t\t\tdispatch(renderCompanies())\r\n\t\t\t}).catch(err => console.error(err));\r\n\r\n\t\t// Создание и пуш компании\r\n\t\tfunction create(name, count, dividendPerShare, currency) {\r\n\t\t\treturn {\r\n\t\t\t\t[name]: {\r\n\t\t\t\t\tcount,\r\n\t\t\t\t\tdividendPerShare,\r\n\t\t\t\t\tcurrency\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n//Собираю данные для редактирования/удаления компании (клик на имя компании)\r\nexport function clickOnCompany(e) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst company = Object.assign({}, state.company);\r\n\t\tconst formUpdInputs = {...state.formUpdInputs};\r\n\t\tconst count = {...formUpdInputs.count};\r\n\t\tconst dividendPerShare = {...formUpdInputs.dividendPerShare};\r\n\t\tconst parent = e.target.parentNode;\r\n\r\n\t\tcompany.name = e.target.textContent;\r\n\t\tcompany.count = count.value = parent.querySelector(\"span[datatype='count']\").textContent;\r\n\t\tcompany.dividendPerShare = dividendPerShare.value = parent.querySelector(\"span[datatype='dividendPerShare']\").textContent;\r\n\r\n\t\tformUpdInputs.count = count;\r\n\t\tformUpdInputs.dividendPerShare = dividendPerShare;\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_COMPANY_DATA,\r\n\t\t\tcompany,\r\n\t\t\tformUpdInputs,\r\n\t\t\tisFormValid: true\r\n\t\t});\r\n\r\n\t\tdispatch(openModal(e, \"isOpenModalUpdateCompany\"));\r\n\t}\r\n}\r\n\r\n// Обновление данных по компаниям\r\nexport function updateCompany() {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst db = firebase.database();\r\n\t\tconst {name, count, dividendPerShare} = state.company;\r\n\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies/' + name + '/dividendPerShare').set(dividendPerShare);\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies/' + name + '/count').set(count);\r\n\r\n\t\tdispatch({type: SHOW_PRELOADER});\r\n\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\tdispatch(reRenderCompanies(response))\r\n\t\t\t}).catch(err => console.error(err));\r\n\t}\r\n}\r\n\r\n// Удаление компаний\r\nexport function deleteCompany(name) {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst db = firebase.database();\r\n\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies/' + name).remove();\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/companies').once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\tdispatch({type: SHOW_PRELOADER});\r\n\r\n\t\t\t\tif (response.val() === null) {\r\n\t\t\t\t\tdb.ref('/users/' + getState().authReducer.token + '/portfolio/companies').update({});\r\n\t\t\t\t\t// currency отвечает за рендер таблицы. А чтобы её запустить, нужно,чтобы в companies было изменение тоже\r\n\t\t\t\t\tconst currency = [];\r\n\t\t\t\t\tconst companies = {};\r\n\r\n\t\t\t\t\tdispatch({type: RENDER, currency, companies, showPreloader: false});\r\n\t\t\t\t\tdispatch(closeModal(null, \"isOpenModalUpdateCompany\"));\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn response;\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tdispatch(reRenderCompanies(response))\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\n/*----------START События для инпутов-------------*/\r\n\r\n// Событие onChange для инпута. Данные идут в state.company для будущей отправки на сервер\r\nexport function getCompanyDataChangeHandler(e, inputName, inputsObj) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst company = {...state.company};\r\n\t\tconst Inputs = {...state[inputsObj]};\r\n\t\t// control - это name, count, dividensPerShare\r\n\t\tconst control = {...Inputs[inputName]};\r\n\r\n\t\t// Валидация\r\n\t\tcontrol.touched = true;\r\n\t\tcontrol.value = e.target.value;\r\n\t\tcontrol.valid = validateControl(control.value, control.validation);\r\n\r\n\t\tInputs[inputName] = control;\r\n\t\tcompany[inputName] = e.target.value;\r\n\t\tcompany.currency = \"USD\"; // Валюта по умолчанию\r\n\r\n\t\tlet isFormValid = true;\r\n\r\n\t\t// Валидация формы (активные кнопки или нет)\r\n\t\tObject.keys(Inputs).forEach(name => {\r\n\t\t\tisFormValid = Inputs[name].valid && isFormValid;\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_COMPANY_DATA,\r\n\t\t\tcompany,\r\n\t\t\t[inputsObj]: Inputs,\r\n\t\t\tisFormValid\r\n\t\t})\r\n\t}\r\n}\r\n\r\n//Событие onChange для select\r\nexport function selectHandler(e) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\r\n\t\tconst company = {...state.company};\r\n\t\tcompany.currency = e.target.value;\r\n\r\n\t\tdispatch({type: CHANGE_SELECT, company});\r\n\t}\r\n}\r\n\r\n/*----------END События для инпутов-------------*/\r\n\r\n/*----------START Функции закрытия и открытия модального окна-------------*/\r\n\r\n// Функция возвращает новую функцию, которая принимает dispatch или getState( и так далее\r\nexport function openModal(e, modalName) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\t\tconst modals = {...state.modals};\r\n\r\n\t\tmodals[modalName] = true;\r\n\r\n\t\t// Либо Я открываю окно для редактирования/удаления\r\n\t\tif (modalName === \"isOpenModalUpdateCompany\") {\r\n\t\t\tconst nameForDelete = e.target.parentNode.querySelector('span').textContent;\r\n\t\t\tdispatch(openUpdateModal(modals, nameForDelete));\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// Либо для новой компании\r\n\t\tdispatch(openCreateModal(modals));\r\n\r\n\t\tfunction openUpdateModal(modals, nameForDelete) {\r\n\t\t\treturn {\r\n\t\t\t\ttype: OPEN_MODAL_UPDATE,\r\n\t\t\t\tmodals,\r\n\t\t\t\tnameForDelete\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction openCreateModal(modals) {\r\n\t\t\treturn {\r\n\t\t\t\ttype: OPEN_MODAL_UPDATE,\r\n\t\t\t\tmodals\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function closeModal(e, modalName) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().mainReducer;\r\n\r\n\t\tconst modals = {...state.modals};\r\n\t\tconst formAddInputs = {...state.formAddInputs};\r\n\r\n\t\tmodals[modalName] = false;\r\n\r\n\t\tlet isFormValid = false;\r\n\r\n\t\tObject.keys(formAddInputs).forEach(name => {\r\n\t\t\tconst control = {...formAddInputs[name]};\r\n\t\t\tcontrol.valid = false;\r\n\t\t\tcontrol.touched = false;\r\n\t\t\tcontrol.value = \"\";\r\n\t\t\tformAddInputs[name] = control;\r\n\t\t});\r\n\r\n\t\tdispatch(closeModal(modals, formAddInputs, isFormValid));\r\n\r\n\t\tfunction closeModal() {\r\n\t\t\treturn {\r\n\t\t\t\ttype: CLOSE_MODAL,\r\n\t\t\t\tmodals, formAddInputs, isFormValid\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n/*----------END Функции закрытия и открытия модального окна-------------*/\r\n\r\n/* --- Мои функции для сокращения количества кода ---*/\r\n\r\nexport function reRenderCompanies(response) {\r\n\treturn dispatch => {\r\n\t\tconst companies = response.val();\r\n\t\tconst currency = [];\r\n\r\n\t\tObject.keys(companies).map(key => {\r\n\t\t\tif (!currency.includes(companies[key].currency)) {\r\n\t\t\t\tcurrency.push(companies[key].currency)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdispatch({type: RENDER, currency, companies, showPreloader: false});\r\n\t\tdispatch(closeModal(null, \"isOpenModalUpdateCompany\"));\r\n\t}\r\n}","import React from \"react\";\r\nimport classes from './Main.module.scss'\r\nimport {Title} from \"../../components/Title/Title\";\r\nimport {Button} from \"../../components/UI/Button/Button\";\r\nimport {Modal} from \"../../hoc/Modal/Modal\";\r\nimport CompaniesList from \"../../components/CompaniesList/CompaniesList\";\r\nimport {Input} from \"../../components/UI/Input/Input\";\r\nimport {FadeBg} from \"../../hoc/Modal/FadeBg\";\r\nimport {Preloader} from \"../../components/Preloader/Preloader\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n\tclickOnCompany,\r\n\tcloseModal,\r\n\tcreateCompany,\r\n\tdeleteCompany,\r\n\tgetCompanyDataChangeHandler,\r\n\topenModal,\r\n\trenderCompanies,\r\n\tselectHandler, updateCompany\r\n} from \"../../redux/reducers/mainReducer/actions\";\r\n\r\nclass Main extends React.Component {\r\n\trenderInputs(name) {\r\n\t\treturn Object.keys(this.props[name]).map((inputName, index) => {\r\n\t\t\tconst inputObj = this.props[name][inputName];\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={inputName + index}\r\n\t\t\t\t\ttype={inputObj.type}\r\n\t\t\t\t\tvalue={inputObj.value}\r\n\t\t\t\t\tclasses={inputObj.className}\r\n\t\t\t\t\thtmlFor={inputName + index}\r\n\t\t\t\t\tvalid={inputObj.valid}\r\n\t\t\t\t\ttouched={inputObj.touched}\r\n\t\t\t\t\tlabel={inputObj.label}\r\n\t\t\t\t\terrorMessage={inputObj.errorMessage}\r\n\t\t\t\t\tautocomplete={inputObj.autocomplete}\r\n\t\t\t\t\tonChange={e => this.props.getCompanyData(e, inputName, name)}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.renderCompanies();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Main}>\r\n\t\t\t\t<Title title=\"Список компаний\"/>\r\n\t\t\t\t<h2 className={classes.infoTitle}>Дивиденды в портфеле</h2>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.showPreloader\r\n\t\t\t\t\t\t? <Preloader/>\r\n\t\t\t\t\t\t: Object.keys(this.props.companies).length === 0\r\n\t\t\t\t\t\t? <div className={classes.noCompany}>Вы еще не создали ни одной компании</div>\r\n\t\t\t\t\t\t: this.props.currency.map((currency, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className={classes.tableWrapper} key={index}>\r\n\t\t\t\t\t\t\t\t\t<h3>{currency}</h3>\r\n\t\t\t\t\t\t\t\t\t<CompaniesList\r\n\t\t\t\t\t\t\t\t\t\tcurrency={currency}\r\n\t\t\t\t\t\t\t\t\t\tcompanies={this.props.companies}\r\n\t\t\t\t\t\t\t\t\t\tshowModalHandlerDelete={e => this.props.clickOnCompany(e)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t<div className={classes.addSection}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassses={[\"green\"]}\r\n\t\t\t\t\t\tname=\"Добавить компанию\"\r\n\t\t\t\t\t\tonClick={e => this.props.openModal(e, \"isOpenModalAddCompany\")}\r\n\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* Модальное окно для добавления компании */}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.modals.isOpenModalAddCompany\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t\t\t<h3 className={classes.MainModalTitle}>Добавить компанию</h3>\r\n\r\n\t\t\t\t\t\t\t\t<form onSubmit={this.props.createCompany}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis.renderInputs(\"formAddInputs\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<select onChange={this.props.selectHandler}>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"USD\">USD</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"RUB\">RUB</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"blue\"]}\r\n\t\t\t\t\t\t\t\t\t\tname=\"Создать компанию\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t<FadeBg onClick={e => this.props.closeModal(e, \"isOpenModalAddCompany\")}/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t{/* Модальное окно для удаления/редактирования компании */}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.modals.isOpenModalUpdateCompany\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t\t\t<h3 className={classes.deleteModal}>\r\n\t\t\t\t\t\t\t\t\tКарточка компании \"{this.props.nameForDelete}\"\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.renderInputs(\"formUpdInputs\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<div className={classes.modalDeleteBtnBox}>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tname=\"Удалить\"\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"red\"]}\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => this.props.deleteCompany(this.props.nameForDelete)}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tname=\"Изменить\"\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"green\"]}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.props.updateCompany}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t<FadeBg onClick={e => this.props.closeModal(e, \"isOpenModalUpdateCompany\")}/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\t// Глубокое копирование\r\n\treturn JSON.parse(JSON.stringify(state.mainReducer))\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\trenderCompanies: () => dispatch(renderCompanies()),\r\n\t\tcreateCompany: e => dispatch(createCompany(e)),\r\n\t\tupdateCompany: () => dispatch(updateCompany()),\r\n\t\tdeleteCompany: name => dispatch(deleteCompany(name)),\r\n\t\tclickOnCompany: e => dispatch(clickOnCompany(e)),\r\n\t\tgetCompanyData: (e, inputName, inputsObj) => dispatch(getCompanyDataChangeHandler(e, inputName, inputsObj)),\r\n\t\topenModal: (e, modalName) => dispatch(openModal(e, modalName)),\r\n\t\tcloseModal: (e, modalName) => dispatch(closeModal(e, modalName)),\r\n\t\tselectHandler: e => dispatch(selectHandler(e)),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import React from \"react\";\r\nimport classes from './DepoDateAndAmount.module.scss'\r\n\r\nconst DepoDateAndAmount = props => {\r\n\tconst dep = props.depo;\r\n\t// Сознание нового массива дата-сумма\r\n\tconst newDep = dep.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\t// Получение правильного формата даты и времени\r\n\tconst getDate = date => {\r\n\t\tconst day = new Date(date).getDate();\r\n\t\tlet month = new Date(date).toLocaleDateString(\"ru\", {month: 'long',});\r\n\r\n\t\tmonth === 'март' ? month += \"a\" : month = month.slice(0, month.length - 1) + \"я\";\r\n\r\n\t\treturn [day, month].join(' ');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tnewDep.map((obj, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li onClick={props.onClick} data-currency={props.currency} data-year={new Date(obj.date).getFullYear()} data-id={obj.id} className={classes.li} key={index}>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{getDate(obj.date)}\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{obj.amount.toLocaleString(\"ru\")} {props.currency === 'rub' ? \"руб\" : props.currency === 'usd' ? \"$\" : null}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n};\r\n\r\nexport default DepoDateAndAmount;","import React from \"react\";\r\nimport classes from \"./DepoInnerWrapper.module.scss\";\r\nimport DepoDateAndAmount from \"../../../components/DepoDateAndAmount/DepoDateAndAmount\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// NOTE: Оставил тут локальный стейт, так как у кажого компонента он должен быть свой. При клике это позволяет открывать каждый компонент отдельно\r\nclass DepoInnerWrapper extends React.Component {\r\n\tstate = {\r\n\t\tisOpen: false\r\n\t};\r\n\r\n\tshowMoreHandler = () => this.setState({isOpen: !this.state.isOpen});\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p onClick={this.showMoreHandler} className={classes.year}>\r\n\t\t\t\t\t{this.props.year} год\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<div className={classes.currency}>\r\n\t\t\t\t\t{this.state.isOpen\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tObject.keys(this.props.currency).map((currName, index) => {\r\n\t\t\t\t\t\t\t\t// Массив конкретной валюты (Usd или rub)\r\n\t\t\t\t\t\t\t\tconst currencyArr = this.props.currency[currName];\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={index} className={classes.DepoCurrency}>\r\n\t\t\t\t\t\t\t\t\t\t<h4 className={classes.name}>{currName === 'rub' ? \"Рубли\" : currName === \"usd\" ? \"Доллары\" : null}</h4>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t<DepoDateAndAmount\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrency={currName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdepo={currencyArr}/>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\t// Глубокое копирование\r\n\treturn JSON.parse(JSON.stringify(state.depositReducer))\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\t// showMoreDepoForYear: () => dispatch(showMoreDepoForYear()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DepoInnerWrapper)","import {CHANGE_SELECT, DEPOSIT_CLOSE_MODAL, ON_CHANGE, OPEN_MODAL, RENDER} from \"../../actions/actionsType\";\r\nimport {validateControl} from \"../../../Modules/formValidation\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\n// Рендер всех депозитов на страницу\r\nexport function renderDeposit() {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst db = firebase.database();\r\n\t\tawait db.ref('/users/' + getState().authReducer.token + '/portfolio/deposit').once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\tconst deposit = response.val();\r\n\r\n\t\t\t\tif (deposit === null) {\r\n\t\t\t\t\tdb.ref('/users/' + getState().authReducer.token + '/portfolio').update({});\r\n\t\t\t\t\tconst deposit = {};\r\n\t\t\t\t\tdispatch({type: RENDER, deposit, showPreloader: false});\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdispatch({type: RENDER, deposit, showPreloader: false})\r\n\t\t\t}).catch(err => console.error(err));\r\n\t}\r\n}\r\n\r\n// сабмит формы по созданию депозита\r\nexport function createDeposit(e) {\r\n\te.preventDefault();\r\n\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst db = firebase.database();\r\n\t\tconst state = getState().depositReducer;\r\n\t\tconst {date, amount, currency} = state.depositData;\r\n\t\tconst year = new Date(date).getFullYear();\r\n\t\tconst showPreloader = true;\r\n\t\tconst formAddDepoInputs = {...state.formAddDepoInputs};\r\n\t\tconst amountInput = {...formAddDepoInputs.amount};\r\n\t\tconst url = '/users/' + getState().authReducer.token + '/portfolio/deposit/' + year + '/' + currency;\r\n\r\n\t\tamountInput.value = \"\";\r\n\t\tformAddDepoInputs.amount = amountInput;\r\n\r\n\t\tawait db.ref(url).once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\t// Если год создаем впервые\r\n\t\t\t\tif (response.val() === null) {\r\n\t\t\t\t\tconst data = [];\r\n\r\n\t\t\t\t\tdata.push({\r\n\t\t\t\t\t\tamount: +amount,\r\n\t\t\t\t\t\tdate: date,\r\n\t\t\t\t\t\tid: data.length + Math.random()\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tdb.ref(url).set(data);\r\n\t\t\t\t\tconst isFormValid = false;\r\n\r\n\t\t\t\t\tdispatch({type: RENDER, showPreloader, isFormValid, formAddDepoInputs});\r\n\t\t\t\t\tdispatch(renderDeposit());\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Если уже имеем массив\r\n\t\t\t\tresponse.val().push({\r\n\t\t\t\t\tamount: +amount,\r\n\t\t\t\t\tdate: date,\r\n\t\t\t\t\tid: response.val().length + Math.random()\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdb.ref(url).set(response.val());\r\n\t\t\t\tconst isFormValid = false;\r\n\r\n\t\t\t\tdispatch({type: RENDER, showPreloader, isFormValid, formAddDepoInputs});\r\n\t\t\t\tdispatch(renderDeposit());\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err));\r\n\t}\r\n}\r\n\r\n// Удаление депозита\r\nexport function deleteDeposit(e) {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState().depositReducer;\r\n\t\tconst db = firebase.database();\r\n\t\tconst showPreloader = false;\r\n\t\tconst showModal = false;\r\n\t\tconst data = {...state.data};\r\n\t\tconst url = '/users/' + getState().authReducer.token + '/portfolio/deposit/' + data.year + '/' + data.currency;\r\n\t\tawait db.ref(url).once('value')\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.val().length === 1) {\r\n\t\t\t\t\tdb.ref(url).remove();\r\n\t\t\t\t\tdb.ref('/users/' + getState().authReducer.token + '/portfolio/deposit').update({});\r\n\t\t\t\t\tdb.ref('/users/' + getState().authReducer.token + '/portfolio/deposit').once('value')\r\n\t\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\t\tlet deposit = response.val();\r\n\r\n\t\t\t\t\t\t\tif (deposit === null) {\r\n\t\t\t\t\t\t\t\tdeposit = {};\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdispatch({type: RENDER, deposit, showPreloader, showModal});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(err => console.error(err));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst result = response.val().filter(item => item.id !== +data.id);\r\n\t\t\t\t\tdb.ref(url).set(result);\r\n\r\n\t\t\t\t\tdb.ref('/users/' + getState().authReducer.token + '/portfolio/deposit').once('value')\r\n\t\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\t\tlet deposit = response.val();\r\n\t\t\t\t\t\t\tdispatch({type: RENDER, deposit, showPreloader, showModal});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(err => console.error(err));\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err));\r\n\t}\r\n}\r\n\r\n\r\n/* ----- START Открытие и закрытие модального окна -----*/\r\n\r\nexport function openModal(e) {\r\n\treturn dispatch => {\r\n\t\tconst data = e.currentTarget.dataset;\r\n\t\tconst showModal = true;\r\n\r\n\t\tdispatch({type: OPEN_MODAL, showModal, data});\r\n\t}\r\n}\r\n\r\nexport function closeModal() {\r\n\treturn dispatch => {\r\n\t\tdispatch({type: DEPOSIT_CLOSE_MODAL, showModal: false});\r\n\t}\r\n}\r\n\r\n/* ----- END Открытие и закрытие модального окна -----*/\r\n\r\n/* ----- START Все, что связано с событием onChange для инпутов, селектов и прочего -----*/\r\n\r\nexport function onChangeHandler(e, inputName, inputObj) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().depositReducer;\r\n\r\n\t\tconst depositData = {...state.depositData};\r\n\t\t// Клонирую объект с инпутами\r\n\t\tconst inputs = {...state[inputObj]};\r\n\t\t// controlName - amount, date\r\n\t\tconst controlName = {...inputs[inputName]};\r\n\r\n\t\t// Валидация\r\n\t\tcontrolName.touched = true;\r\n\t\tcontrolName.value = e.target.value;\r\n\t\tcontrolName.valid = validateControl(controlName.value, controlName.validation);\r\n\r\n\t\tdepositData[inputName] = e.target.value;\r\n\t\tinputs[inputName] = controlName;\r\n\r\n\t\tlet isFormValid = true;\r\n\r\n\t\t// Валидация формы (активные кнопки или нет)\r\n\t\tObject.keys(inputs).forEach(name => {\r\n\t\t\tisFormValid = inputs[name].valid && isFormValid;\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ON_CHANGE,\r\n\t\t\tdepositData,\r\n\t\t\t[inputObj]: inputs,\r\n\t\t\tisFormValid\r\n\t\t})\r\n\t}\r\n}\r\n\r\n//TODO: Пока не понял, как работает Date, починить!\r\nexport function handleChangeDate(date) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().depositReducer;\r\n\t\tconst depositData = {...state.depositData};\r\n\r\n\t\t// NOTE: Datepicker как то криво работает, пришлось использовать Date.parse\r\n\t\tdepositData.date = Date.parse(date);\r\n\t\tdispatch({type: CHANGE_SELECT, depositData});\r\n\t}\r\n}\r\n\r\nexport function selectHandler(e) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().depositReducer;\r\n\t\tconst depositData = {...state.depositData};\r\n\t\tdepositData.currency = e.target.value;\r\n\r\n\t\tdispatch({type: CHANGE_SELECT, depositData});\r\n\t}\r\n}\r\n\r\n/* ----- END Все, что связано с событием onChange для инпутов, селектов и прочего -----*/\r\n","import React from \"react\";\r\nimport classes from './Deposit.module.scss'\r\nimport {Input} from \"../../components/UI/Input/Input\";\r\nimport {Button} from \"../../components/UI/Button/Button\";\r\nimport {Preloader} from \"../../components/Preloader/Preloader\";\r\nimport {Title} from \"../../components/Title/Title\";\r\nimport {Modal} from \"../../hoc/Modal/Modal\";\r\nimport {FadeBg} from \"../../hoc/Modal/FadeBg\";\r\nimport DepoInnerWrapper from \"./DepoInnerWrapper/DepoInnerWrapper\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n\tcloseModal, createDeposit, deleteDeposit,\r\n\thandleChangeDate, onChangeHandler,\r\n\topenModal,\r\n\trenderDeposit,\r\n\tselectHandler\r\n} from \"../../redux/reducers/depositReducer/actions\";\r\n\r\n// Функции для генерации полей для инпутов\r\n\r\nclass Deposit extends React.Component {\r\n\trenderInpus(inputName) {\r\n\t\treturn Object.keys(this.props[inputName]).map((name, index) => {\r\n\t\t\tconst inputObj = this.props[inputName][name];\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={name + index}\r\n\t\t\t\t\ttype={inputObj.type}\r\n\t\t\t\t\tvalue={inputObj.value}\r\n\t\t\t\t\tclasses={inputObj.className}\r\n\t\t\t\t\thtmlFor={name + index}\r\n\t\t\t\t\tvalid={inputObj.valid}\r\n\t\t\t\t\ttouched={inputObj.touched}\r\n\t\t\t\t\tlabel={inputObj.label}\r\n\t\t\t\t\tplaceholder={inputObj.placeholder}\r\n\t\t\t\t\terrorMessage={inputObj.errorMessage}\r\n\t\t\t\t\tautocomplete={inputObj.autocomplete}\r\n\t\t\t\t\tonChange={e => this.props.onChangeHandler(e, name, inputName)}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.renderDeposit();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Deposit}>\r\n\t\t\t\t{/* Форма ввода пополнения */}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Title title=\"Список пополнений\"/>\r\n\r\n\t\t\t\t\t<h3 className={classes.infoTitle}>\r\n\t\t\t\t\t\tДобавить пополнение\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<form onSubmit={this.props.createDeposit}>\r\n\t\t\t\t\t\t<div className={classes.inputsBox}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.renderInpus(\"formAddDepoInputs\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\tselected={this.props.depositData.date}\r\n\t\t\t\t\t\t\t\t// onChange={this.handleChangeDate}\r\n\t\t\t\t\t\t\t\tonChange={this.props.handleChangeDate}\r\n\t\t\t\t\t\t\t\tclassName={classes.datePicker}\r\n\t\t\t\t\t\t\t\tmaxDate={new Date()}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<select className={classes.select} onChange={this.props.selectHandler}>\r\n\t\t\t\t\t\t\t\t<option value=\"usd\">USD</option>\r\n\t\t\t\t\t\t\t\t<option value=\"rub\">RUB</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassses={[\"green\", \"addDepo\"]}\r\n\t\t\t\t\t\t\tname=\"Добавить пополнение\"\r\n\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/*Общий контейнер для пополнения и статистики*/}\r\n\t\t\t\t<div className={classes.depoAndStatistic}>\r\n\t\t\t\t\t{/*Пополнения по годам*/}\r\n\t\t\t\t\t<h3 className={classes.infoTitle}>Общая информация по пополнениям</h3>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.showPreloader\r\n\t\t\t\t\t\t\t? <Preloader/>\r\n\t\t\t\t\t\t\t: Object.keys(this.props.deposit).length === 0\r\n\t\t\t\t\t\t\t? <div className={classes.noDeposit}> У вас пока не было пополнений </div>\r\n\t\t\t\t\t\t\t: <div className={classes.DepoYear}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tObject.keys(this.props.deposit).map((year, index) => {\r\n\t\t\t\t\t\t\t\t\t\tconst currency = this.props.deposit[year];\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn <DepoInnerWrapper\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.openModal}\r\n\t\t\t\t\t\t\t\t\t\t\tcurrency={currency}\r\n\t\t\t\t\t\t\t\t\t\t\tyear={year}\r\n\t\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/*\tМодальное окно для подтверждения удаления */}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.showModal\r\n\t\t\t\t\t\t? <React.Fragment>\r\n\t\t\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t\t\t<h2 className={classes.delModalTitle}>Вы точно хотите удалить пополнение?</h2>\r\n\t\t\t\t\t\t\t\t<div className={classes.modalButtons}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"red\"]}\r\n\t\t\t\t\t\t\t\t\t\tname=\"Удалить\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.props.deleteDeposit}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"green\"]}\r\n\t\t\t\t\t\t\t\t\t\tname=\"Отмена\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.props.closeModal}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t<FadeBg onClick={this.props.closeModal}/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\t// Глубокое копирование\r\n\treturn JSON.parse(JSON.stringify(state.depositReducer))\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\trenderDeposit: () => dispatch(renderDeposit()),\r\n\t\tcreateDeposit: (e) => dispatch(createDeposit(e)),\r\n\t\tdeleteDeposit: (e) => dispatch(deleteDeposit(e)),\r\n\t\topenModal: e => dispatch(openModal(e)),\r\n\t\tcloseModal: e => dispatch(closeModal(e)),\r\n\t\tonChangeHandler: (e, inputName, inputObj) => dispatch(onChangeHandler(e, inputName, inputObj)),\r\n\t\thandleChangeDate: date => dispatch(handleChangeDate(date)),\r\n\t\tselectHandler: e => dispatch(selectHandler(e)),\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Deposit)","import React from \"react\";\r\nimport classes from \"./LinksInsideSidebar.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst LinksInsideSidebar = props => {\r\n\treturn (\r\n\t\t<nav className={classes.LinksInsideSidebar}>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to={\"/\"}> Главная </NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to={\"/depo\"}> Пополнения </NavLink>\r\n\t\t\t</li>\r\n\t\t</nav>\r\n\t)\r\n};\r\n\r\nexport default LinksInsideSidebar;","import React from \"react\";\r\nimport classes from './SidebarNavigation.module.scss'\r\nimport LinksInsideSidebar from \"../LinksInsideSidebar/LinksInsideSidebar\";\r\n\r\nfunction SidebarNavigation() {\r\n\treturn (\r\n\t\t<div className={classes.SidebarNavigation}>\r\n\t\t\t<LinksInsideSidebar/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SidebarNavigation","import {validateControl} from \"../../../Modules/formValidation\";\r\nimport {\r\n\tAUTH_AUTO_LOGIN, AUTH_CLOSE_ERROR,\r\n\tAUTH_INPUT,\r\n\tAUTH_LOGIN,\r\n\tAUTH_LOGOUT, AUTH_SHOW_ERROR,\r\n\tDEPOSIT_RENDER,\r\n\tMAIN_RENDER,\r\n} from \"../../actions/actionsType\";\r\nimport {renderCompanies} from \"../mainReducer/actions\";\r\nimport firebase from \"firebase\";\r\n\r\nexport function loginHandler(isLogin) {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState().authReducer;\r\n\t\tconst authInputs = {...state.authInputs};\r\n\t\tconst inputEmail = {...state.authInputs.inputEmail};\r\n\t\tconst inputPassword = {...state.authInputs.inputPassword};\r\n\t\tconst email = inputEmail.value;\r\n\t\tconst password = inputPassword.value;\r\n\r\n\t\ttry {\r\n\t\t\tif (isLogin) {\r\n\t\t\t\tawait firebase.auth().signInWithEmailAndPassword(email, password);\r\n\t\t\t} else {\r\n\t\t\t\tawait firebase.auth().createUserWithEmailAndPassword(email, password);\r\n\t\t\t}\r\n\r\n\t\t\t// Слушатель firebase\r\n\t\t\tawait firebase.auth().onAuthStateChanged(user => {\r\n\t\t\t\tconst currentUser = firebase.auth().currentUser;\r\n\r\n\t\t\t\t//Блок с верификацией email\r\n\t\t\t\tif (!currentUser.emailVerified) {\r\n\t\t\t\t\tcurrentUser.sendEmailVerification()\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\tconst message = \"Вам на почту было отправлено письмо с подтверждением. Пожалуйста, проверьте свою почту\";\r\n\t\t\t\t\t\t\tdispatch({type: AUTH_SHOW_ERROR, error: message});\r\n\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tdispatch({type: AUTH_CLOSE_ERROR})\r\n\t\t\t\t\t\t\t}, 8500)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\tdispatch({type: AUTH_SHOW_ERROR, error: error.message});\r\n\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tdispatch({type: AUTH_CLOSE_ERROR})\r\n\t\t\t\t\t\t\t}, 8500)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst login = {\r\n\t\t\t\t\tuid: user.uid,\r\n\t\t\t\t\tentryTime: +user.metadata.b\r\n\t\t\t\t};\r\n\r\n\t\t\t\tinputEmail.value = inputPassword.value = '';\r\n\t\t\t\tauthInputs.inputEmail = inputEmail;\r\n\t\t\t\tauthInputs.inputPassword = inputPassword;\r\n\r\n\t\t\t\tdispatch({type: AUTH_LOGIN, authInputs, token: login.uid});\r\n\t\t\t\t// Использую диспатч, чтобы заново отрендерить компании, функция тянется из mainReducers\r\n\t\t\t\tdispatch(renderCompanies());\r\n\t\t\t\tlocalStorage.setItem(\"login\", JSON.stringify(login))\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tdispatch(showError(e))\r\n\t\t}\r\n\r\n\r\n\t}\r\n}\r\n\r\nexport function authForm(e) {\r\n\te.preventDefault();\r\n\treturn dispatch => {\r\n\r\n\t}\r\n}\r\n\r\nexport function authChangeHandler(e, inputObj, inputName) {\r\n\treturn (dispatch, getState) => {\r\n\t\tconst state = getState().authReducer;\r\n\t\tconst authInputs = {...state[inputObj]};\r\n\t\tconst input = {...authInputs[inputName]};\r\n\r\n\t\tinput.touched = true;\r\n\t\tinput.value = e.target.value;\r\n\t\tinput.valid = validateControl(input.value, input.validation);\r\n\r\n\t\tauthInputs[inputName] = input;\r\n\r\n\t\tlet isFormValid = true;\r\n\t\t// Валидация формы (активные кнопки или нет)\r\n\r\n\t\tObject.keys(authInputs).forEach(name => {\r\n\t\t\tisFormValid = authInputs[name].valid && isFormValid;\r\n\t\t});\r\n\r\n\t\tdispatch({type: AUTH_INPUT, [inputObj]: authInputs, isFormValid});\r\n\t}\r\n}\r\n\r\nexport function autoLogin() {\r\n\treturn dispatch => {\r\n\t\tconst login = JSON.parse(localStorage.getItem(\"login\"));\r\n\r\n\t\tif (login === null) {\r\n\t\t\tdispatch({type: AUTH_AUTO_LOGIN, token: null})\r\n\t\t} else {\r\n\t\t\tdispatch({type: AUTH_AUTO_LOGIN, token: login.uid})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function logout(e) {\r\n\te.preventDefault();\r\n\treturn dispatch => {\r\n\t\tfirebase.auth().signOut().then(() => {\r\n\t\t\tconst currency = [];\r\n\t\t\tconst deposit = {};\r\n\t\t\t// Тут Я очищаю localStorage, так же для депозитов и валют Я задаю пустые значения, чтобы при перелогине, мы заново их заполняли согласно ключу. Не знаю, насколько это правильно\r\n\t\t\tlocalStorage.removeItem(\"login\");\r\n\t\t\tdispatch({type: AUTH_LOGOUT});\r\n\t\t\tdispatch({type: MAIN_RENDER, currency});\r\n\t\t\tdispatch({type: DEPOSIT_RENDER, deposit});\r\n\t\t}).catch(err => {\r\n\t\t\tdispatch({type: AUTH_SHOW_ERROR, error: err.message});\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch({type: AUTH_CLOSE_ERROR})\r\n\t\t\t}, 8500)\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport function showError(e) {\r\n\treturn dispatch => {\r\n\t\tdispatch({type: AUTH_SHOW_ERROR, error: e.message});\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch({type: AUTH_CLOSE_ERROR})\r\n\t\t}, 8500)\r\n\t}\r\n}","import React from \"react\";\r\nimport classes from './Header.module.scss'\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/reducers/authReducer/actions\";\r\n\r\nconst Header = props => {\r\n\treturn (\r\n\t\t<div className={classes.Header}>\r\n\t\t\t<div>\r\n\t\t\t\tFinance Journal\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tprops.token !== null\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<a onClick={props.logout} className={classes.logoutLink} href=\"#\">Выйти</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\t// Глубокое копирование\r\n\treturn JSON.parse(JSON.stringify(state.authReducer))\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tlogout: (e) => dispatch(logout(e)),\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from \"react\";\r\nimport classes from \"./Auth.module.scss\"\r\nimport {connect} from \"react-redux\";\r\nimport {Input} from \"../../components/UI/Input/Input\";\r\nimport {\r\n\tauthChangeHandler,\r\n\tauthForm,\r\n\tloginHandler\r\n} from \"../../redux/reducers/authReducer/actions\";\r\nimport {Title} from \"../../components/Title/Title\";\r\nimport {Button} from \"../../components/UI/Button/Button\";\r\n\r\nclass Auth extends React.Component {\r\n\trenderInput(inputObj) {\r\n\r\n\t\treturn Object.keys(this.props[inputObj]).map((inputName, index) => {\r\n\t\t\tconst input = this.props[inputObj][inputName];\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\ttype={input.type}\r\n\t\t\t\t\tlabel={input.label}\r\n\t\t\t\t\terrorMessage={input.errorMessage}\r\n\t\t\t\t\tclassName={input.className}\r\n\t\t\t\t\tplaceholder={input.placeholder}\r\n\t\t\t\t\tvalid={input.valid}\r\n\t\t\t\t\ttouched={input.touched}\r\n\t\t\t\t\tvalue={input.value}\r\n\t\t\t\t\tvalidation={input.validation}\r\n\t\t\t\t\tonChange={e => this.props.authChangeHandler(e, inputObj, inputName)}\r\n\t\t\t\t/>)\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Auth}>\r\n\t\t\t\t<Title title={\"Добро пожаловать!\"}/>\r\n\t\t\t\t<p className={classes.greetings}>Пожалуйста, войдите в систему или зарегистрируйтесь</p>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.error === null\r\n\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t: <p className={classes.error}>{this.props.error}</p>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div className={classes.authForm}>\r\n\t\t\t\t\t<form onSubmit={this.props.authForm}>\r\n\t\t\t\t\t\t{this.renderInput(\"authInputs\")}\r\n\r\n\t\t\t\t\t\t<div className={classes.btnContainer}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassses={[\"green\", \"authEntry\"]}\r\n\t\t\t\t\t\t\t\tname=\"Войти\"\r\n\t\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t\t\tonClick={this.props.loginHandler.bind(this, true)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassses={[\"yellow\", \"authReg\"]}\r\n\t\t\t\t\t\t\t\tname=\"Регистрация\"\r\n\t\t\t\t\t\t\t\tdisabled={this.props.isFormValid}\r\n\t\t\t\t\t\t\t\tonClick={this.props.loginHandler.bind(this, false)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\t// Глубокое копирование\r\n\treturn JSON.parse(JSON.stringify(state.authReducer))\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tauthChangeHandler: (e, inputObj, inputName) => dispatch(authChangeHandler(e, inputObj, inputName)),\r\n\t\tauthForm: (e) => dispatch(authForm(e)),\r\n\t\tloginHandler: (isLogin) => dispatch(loginHandler(isLogin)),\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)","import React, {Component} from \"react\";\r\nimport \"./App.scss\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport Main from \"./container/Main/Main\";\r\nimport Deposit from \"./container/Deposit/Deposit\";\r\nimport SidebarNavigation from \"./components/SidebarNavigation/SidebarNavigation\";\r\nimport Header from \"./components/Header/Header\";\r\nimport {Route, Switch, Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\";\r\nimport Auth from \"./container/Auth/Auth\";\r\nimport {autoLogin} from \"./redux/reducers/authReducer/actions\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.autoLogin();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<Header/>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.token\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<div className=\"main-page-wrapper\">\r\n\t\t\t\t\t\t\t<SidebarNavigation/>\r\n\r\n\t\t\t\t\t\t\t<div className={'main-page-content'}>\r\n\t\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t\t<Route exact={true} path={\"/\"} component={Main}/>\r\n\t\t\t\t\t\t\t\t\t<Route path={\"/depo\"} component={Deposit}/>\r\n\t\t\t\t\t\t\t\t\t<Redirect to={\"/\"} component={Main}/>\r\n\t\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"main-page-wrapper\">\r\n\t\t\t\t\t\t\t<Route>\r\n\t\t\t\t\t\t\t\t<Route exact path={\"/auth\"} component={Auth}/>\r\n\t\t\t\t\t\t\t\t<Redirect to={\"/auth\"} component={Auth}/>\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\t// Глубокое копирование\r\n\treturn JSON.parse(JSON.stringify(state.authReducer))\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tautoLogin: () => dispatch(autoLogin()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createAddFormInputs, createUpdFormInputs} from \"../../../Modules/formValidation\";\r\nimport {\r\n\tCHANGE_SELECT,\r\n\tCLOSE_MODAL, CLOSE_PRELOADER,\r\n\tCREATE_COMPANY,\r\n\tCURRENCY,\r\n\tGET_COMPANY_DATA, MAIN_RENDER,\r\n\tOPEN_MODAL_UPDATE,\r\n\tRENDER, SHOW_PRELOADER\r\n} from \"../../actions/actionsType\";\r\n\r\n// Функции создания инпутов\r\nfunction createOptionForAddInputs(name, errMessage, obj) {\r\n\treturn createAddFormInputs({\r\n\t\t\tlabel: name,\r\n\t\t\ttype: \"text\",\r\n\t\t\terrorMessage: errMessage,\r\n\t\t\tclassName: [\"\"],\r\n\t\t\tautocomplete: \"off\"\r\n\t\t}, obj\r\n\t)\r\n}\r\n\r\nfunction createOptionForUpdInputs(name, errMessage, obj) {\r\n\treturn createUpdFormInputs({\r\n\t\t\tlabel: name,\r\n\t\t\ttype: \"text\",\r\n\t\t\terrorMessage: errMessage,\r\n\t\t\tclassName: [\"\"],\r\n\t\t\tautocomplete: \"off\"\r\n\t\t}, obj\r\n\t)\r\n}\r\n\r\nconst initState = {\r\n\tuser: null,\r\n\tnameForDelete: \"\",\r\n\tshowPreloader: true,\r\n\tisFormValid: false,\r\n\tmodals: {\r\n\t\tisOpenModalAddCompany: false,\r\n\t\tisOpenModalUpdateCompany: false\r\n\t},\r\n\tformAddInputs: {\r\n\t\tname: createOptionForAddInputs(\"Имя компании\", \"Поле не может быть пустым\", {required: true}),\r\n\t\tcount: createOptionForAddInputs(\"Количество акций\", \"Введите число\", {required: true, type: \"number\", }),\r\n\t\tdividendPerShare: createOptionForAddInputs(\"Размер дивидендов (в год)\", \"Введите число\", {\r\n\t\t\trequired: true,\r\n\t\t\ttype: \"number\"\r\n\t\t})\r\n\t},\r\n\tformUpdInputs: {\r\n\t\tcount: createOptionForUpdInputs(\"Количество акций\", \"Введите число\", {required: true, type: \"number\"}),\r\n\t\tdividendPerShare: createOptionForUpdInputs(\"Размер дивидендов (в год)\", \"Введите число\", {\r\n\t\t\trequired: true,\r\n\t\t\ttype: \"number\"\r\n\t\t})\r\n\t},\r\n\tcompany: {\r\n\t\tname: \"\",\r\n\t\tcount: \"\",\r\n\t\tdividendPerShare: \"\",\r\n\t\tcurrency: \"USD\"\r\n\t},\r\n\tcompanies: {},\r\n\tcurrency: [],\r\n};\r\n\r\n//Всегда возвращаем новый объект, сохраняем иммутабельность\r\n// В редюсерах по сути мы обновляем стейт. В action передаем то, что нужно обновить\r\n\r\nexport default function mainReducer(state = initState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase RENDER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase MAIN_RENDER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase CURRENCY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrency: action.currency\r\n\t\t\t};\r\n\r\n\t\tcase CREATE_COMPANY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\r\n\t\tcase SHOW_PRELOADER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowPreloader: true\r\n\r\n\t\t\t};\r\n\t\tcase CLOSE_PRELOADER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowPreloader: false\r\n\t\t\t};\r\n\r\n\t\tcase GET_COMPANY_DATA:\r\n\t\t\treturn {...state, ...action};\r\n\r\n\t\tcase OPEN_MODAL_UPDATE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodals: action.modals,\r\n\t\t\t\tnameForDelete: action.nameForDelete\r\n\t\t\t};\r\n\r\n\t\tcase CLOSE_MODAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodals: action.modals,\r\n\t\t\t\tformAddInputs: action.formAddInputs,\r\n\t\t\t\tisFormValid: action.isFormValid\r\n\t\t\t};\r\n\r\n\t\tcase CHANGE_SELECT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcompany: action.company\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// Функция открытия модального окна\r\n","import {\r\n\tCHANGE_SELECT,\r\n\tDEPOSIT_CLOSE_MODAL, DEPOSIT_RENDER,\r\n\tON_CHANGE,\r\n\tOPEN_MODAL,\r\n\tRENDER\r\n} from \"../../actions/actionsType\";\r\n\r\nconst initState = {\r\n\tuser: null,\r\n\tisFormValid: false,\r\n\tshowModal: false,\r\n\tshowPreloader: true,\r\n\tdeposit: {},\r\n\tformAddDepoInputs: {\r\n\t\tamount: {\r\n\t\t\ttype: \"text\",\r\n\t\t\terrorMessage: \"Введите число\",\r\n\t\t\tclassName: [\"depositInput\"],\r\n\t\t\tplaceholder: \"Введите сумму\",\r\n\t\t\tautocomplete: \"off\",\r\n\t\t\tvalid: false,\r\n\t\t\ttouched: false,\r\n\t\t\tvalue: \"\",\r\n\t\t\tvalidation: {\r\n\t\t\t\trequired: true,\r\n\t\t\t\ttype: \"number\"\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdepositData: {\r\n\t\tcurrency: \"usd\",\r\n\t\tamount: \"\",\r\n\t\tdate: Date.parse(new Date)\r\n\t},\r\n\tdata: {},\r\n\tisOpen: false\r\n};\r\n\r\nexport default function depositReducer(state = initState, action) {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase RENDER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\t\tcase DEPOSIT_RENDER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\t\tcase OPEN_MODAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\t\tcase DEPOSIT_CLOSE_MODAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowModal: false\r\n\t\t\t};\r\n\t\tcase ON_CHANGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\t\tcase CHANGE_SELECT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import {\r\n\tAUTH_AUTO_LOGIN,\r\n\tAUTH_CLOSE_ERROR,\r\n\tAUTH_INPUT,\r\n\tAUTH_LOGIN,\r\n\tAUTH_LOGOUT,\r\n\tAUTH_SHOW_ERROR\r\n} from \"../../actions/actionsType\";\r\n\r\n\r\n\r\nconst initState = {\r\n\ttoken: null,\r\n\terror: null,\r\n\tisFormValid: false,\r\n\tauthInputs: {\r\n\t\tinputEmail: {\r\n\t\t\ttype: \"email\",\r\n\t\t\tlabel: \"Введите e-mail\",\r\n\t\t\terrorMessage: \"Введите e-mail\",\r\n\t\t\tclassName: [\"authLogin\"],\r\n\t\t\tplaceholder: \"Введите e-mail\",\r\n\t\t\tautocomplete: \"off\",\r\n\t\t\tvalid: false,\r\n\t\t\ttouched: false,\r\n\t\t\tvalue: \"\",\r\n\t\t\tvalidation: {\r\n\t\t\t\trequired: true,\r\n\t\t\t\ttype: \"email\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputPassword: {\r\n\t\t\ttype: \"password\",\r\n\t\t\tlabel: \"Введите пароль\",\r\n\t\t\terrorMessage: \"Пароль не может быть менее 6 символов\",\r\n\t\t\tclassName: [\"authLogin\"],\r\n\t\t\tplaceholder: \"Введите пароль\",\r\n\t\t\tautocomplete: \"off\",\r\n\t\t\tvalid: false,\r\n\t\t\ttouched: false,\r\n\t\t\tvalue: \"\",\r\n\t\t\tvalidation: {\r\n\t\t\t\trequired: true,\r\n\t\t\t\tminLength: 6\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n};\r\n\r\nexport default function authReducer(state = initState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase AUTH_INPUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action\r\n\t\t\t};\r\n\t\tcase AUTH_LOGIN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: action.token,\r\n\t\t\t\tauthInputs: action.authInputs\r\n\t\t\t};\r\n\t\tcase AUTH_SHOW_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.error\r\n\t\t\t};\r\n\t\tcase AUTH_CLOSE_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: null\r\n\t\t\t};\r\n\t\tcase AUTH_AUTO_LOGIN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t};\r\n\t\tcase AUTH_LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import mainReducer from \"./mainReducer/mainReducer\";\r\nimport depositReducer from \"./depositReducer/depositReducer\";\r\nimport {combineReducers} from \"redux\"\r\nimport authReducer from \"./authReducer/authReducer\";\r\n\r\nexport default combineReducers({\r\n\tmainReducer, depositReducer, authReducer\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n// redux\r\nimport {createStore, compose, applyMiddleware} from \"redux\"\r\nimport {Provider} from \"react-redux\"\r\nimport rootReducer from \"./redux/reducers/rootReducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport * as firebase from \"firebase/app\";\r\n\r\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\r\nimport \"firebase/analytics\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyB73IC7XvE6QjjTcMWXZNePBcn_uiLgqWA\",\r\n\tauthDomain: \"my-finance-journal.firebaseapp.com\",\r\n\tdatabaseURL: \"https://my-finance-journal.firebaseio.com\",\r\n\tprojectId: \"my-finance-journal\",\r\n\tstorageBucket: \"my-finance-journal.appspot.com\",\r\n\tmessagingSenderId: \"152785363240\",\r\n\tappId: \"1:152785363240:web:e998b6a6a0fcacfb02701d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\n// Настройка redux devtools\r\nconst composeEnhancers =\r\n\ttypeof window === 'object' &&\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n\r\n// Создаем общий store, в него мы передаем reducer\r\n//reducer - это просто функция, которая меняет state через dispatch\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n// Обернул все приложение в Provider, чтобы связать redux и react. Передал общий store, теперь он доступен через props\r\n\r\nconst app = (\r\n\t<Provider store={store}>\r\n\t\t<BrowserRouter>\r\n\t\t\t<App/>\r\n\t\t</BrowserRouter>\r\n\t</Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTitle\":\"Deposit_infoTitle__3jPvq\",\"depoAndStatistic\":\"Deposit_depoAndStatistic__BLdFw\",\"addInputWrapper\":\"Deposit_addInputWrapper__2ApE4\",\"inputsBox\":\"Deposit_inputsBox__2lUKt\",\"datePicker\":\"Deposit_datePicker__9Amuz\",\"select\":\"Deposit_select__2HWqy\",\"DepoYear\":\"Deposit_DepoYear__1vYYJ\",\"noDeposit\":\"Deposit_noDeposit___7nqY\",\"modalButtons\":\"Deposit_modalButtons__AzZit\",\"delModalTitle\":\"Deposit_delModalTitle__kuX5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__tLe8l\",\"MainModalTitle\":\"Main_MainModalTitle__1f-1K\",\"MaindeleteModal\":\"Main_MaindeleteModal__2x1yU\",\"addSection\":\"Main_addSection__2794a\",\"modalDeleteBtnBox\":\"Main_modalDeleteBtnBox__30gau\",\"deleteModal\":\"Main_deleteModal__1xsa4\",\"tableWrapper\":\"Main_tableWrapper__fLrzA\",\"infoTitle\":\"Main_infoTitle__2V_3C\",\"noCompany\":\"Main_noCompany__1KDCH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"CompaniesList_row__2lrJb\",\"header\":\"CompaniesList_header__MrGh9\",\"CompanyName\":\"CompaniesList_CompanyName__2UmpC\",\"Total\":\"CompaniesList_Total__WAK6z\",\"afterTax\":\"CompaniesList_afterTax__NTcIC\",\"Actions\":\"CompaniesList_Actions__1d3N3\",\"LinksInsideSidebar\":\"CompaniesList_LinksInsideSidebar__3UPM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2m_YL\",\"InputWrapper\":\"Input_InputWrapper__1W6c2\",\"Error\":\"Input_Error__3vb89\",\"redText\":\"Input_redText__3KdDg\",\"depositInput\":\"Input_depositInput__byGQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1oHPk\",\"mainTitle\":\"Auth_mainTitle__yuabT\",\"greetings\":\"Auth_greetings__3bEfb\",\"authForm\":\"Auth_authForm__35Tfa\",\"btnContainer\":\"Auth_btnContainer__2KRRk\",\"error\":\"Auth_error__h1G3E\",\"showError\":\"Auth_showError__aDDyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1BCvN\",\"FadeBg\":\"Modal_FadeBg__1qjO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"year\":\"DepoInnerWrapper_year__2ZZLO\",\"currency\":\"DepoInnerWrapper_currency__2vO-B\",\"DepoCurrency\":\"DepoInnerWrapper_DepoCurrency__2rlkl\",\"name\":\"DepoInnerWrapper_name__2-Jfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__3UNCg\",\"titleH\":\"Title_titleH__2rTQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3IBz_\",\"green\":\"Button_green__3BDkj\",\"blue\":\"Button_blue__1uYHC\",\"yellow\":\"Button_yellow__2A2Zk\",\"red\":\"Button_red__2OblT\",\"addDepo\":\"Button_addDepo__3fbc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__-hM5V\",\"logoutLink\":\"Header_logoutLink__1HFJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1Ayt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__3uQx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"DepoDateAndAmount_li__1orGn\"};"],"sourceRoot":""}