{"version":3,"sources":["hoc/Layout/Layout.js","components/CompaniesList/CompaniesList.js","components/Title/Title.js","components/UI/Button/Button.js","hoc/Modal/Modal.js","components/UI/Input/Input.js","hoc/Modal/FadeBg.js","axios/axios-settings.js","components/Preloader/Preloader.js","Modules/formValidation.js","container/Main/Main.js","components/DepoDateAndAmount/DepoDateAndAmount.js","container/DepoInnerWrapper/DepoInnerWrapper.js","container/Deposit/Deposit.js","components/LinksInsideSidebar/LinksInsideSidebar.js","container/SidebarNavigation/SidebarNavigation.js","components/Header/Header.js","App.js","serviceWorker.js","index.js","container/Deposit/Deposit.module.scss","components/CompaniesList/CompaniesList.module.scss","container/Main/Main.module.scss","components/UI/Input/Input.module.scss","hoc/Modal/Modal.module.scss","container/DepoInnerWrapper/DepoInnerWrapper.module.scss","components/Title/Title.module.scss","components/UI/Button/Button.module.scss","hoc/Layout/Layout.module.scss","components/Preloader/Preloader.module.scss","components/DepoDateAndAmount/DepoDateAndAmount.module.scss","container/SidebarNavigation/SidebarNavigation.module.scss","components/LinksInsideSidebar/LinksInsideSidebar.module.scss","components/Header/Header.module.scss"],"names":["Layout","className","classes","this","props","children","React","Component","CompaniesList","header","companies","companyArr","name","currency","key","afterTax","Math","random","arrItem","row","datatype","CompanyName","onClick","showModalHandlerDelete","count","dividendPerShare","ceil","push","renderCompanies","beforeTax","bt","footer","Total","renderFooter","Title","titleH","title","Button","cls","classses","forEach","item","disabled","join","Modal","Input","valid","Error","InputWrapper","htmlFor","label","type","id","onChange","defaultValue","placeholder","autoComplete","autocomplete","redText","touched","errorMessage","FadeBg","axios","create","baseURL","Preloader","validateControl","value","validation","isValid","required","trim","is","number","createOptionForAddInputs","errMessage","obj","config","createOptionForUpdInputs","Main","state","nameForDelete","showPreloader","isFormValid","modals","isOpenModalAddCompany","isOpenModalUpdateCompany","formAddInputs","formUpdInputs","company","showModalHandler","e","popup","setState","target","parentNode","querySelector","textContent","closeModalHandler","Object","keys","control","createCompany","updateCompany","a","async","put","response","status","deletePositionHandler","delete","preUpdateCompany","assign","parent","mainModalFormAddCompany","preventDefault","patch","console","error","selectHandler","get","data","portfolio","companyName","crc","includes","inputName","inputsObj","Inputs","defVal","map","index","inputObj","onChangeHandler","tableWrapper","addSection","Fragment","MainModalTitle","onSubmit","renderInputs","deleteModal","modalDeleteBtnBox","DepoDateAndAmount","newDep","depo","sort","b","Date","date","data-currency","data-year","getFullYear","data-id","li","day","getDate","month","toLocaleDateString","slice","length","amount","toLocaleString","DepoInnerWrapper","isOpen","showMoreHandler","year","currName","currencyArr","DepoCurrency","Deposit","deposit","formAddDepoInputs","depositData","handleChangeDate","submitFormHandler","arr","renderDeposits","inputs","controlName","deleteDeposit","dataset","result","filter","userKey","infoTitle","inputsBox","renderInpus","selected","datePicker","select","depoAndStatistic","undefined","noDeposit","DepoYear","LinksInsideSidebar","to","SidebarNavigation","Header","App","path","component","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.699459a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Layout.module.scss\";\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n\treturn (\r\n\t\t<div className={classes.Layout}>\r\n\t\t\t{this.props.children}\r\n\t\t</div>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport classes from \"./CompaniesList.module.scss\";\r\n\r\nconst CompaniesList = props => {\r\n\t// Метод для вывода компаний на страницу\r\n\tconst renderCompanies = (companies) => {\r\n\t\tconst companyArr = [];\r\n\r\n\t\tfor (let name in companies) {\r\n\r\n\t\t\tif (props.currency !== companies[name].currency) continue;\r\n\r\n\t\t\tconst key = `${props.afterTax} + ${Math.random()}`;\r\n\r\n\t\t\tconst arrItem = (\r\n\t\t\t\t<div className={classes.row} key={key}>\r\n\t\t\t\t\t<span datatype=\"name\" className={classes.CompanyName}\r\n\t\t\t\t\t\t  onClick={props.showModalHandlerDelete}>{name}</span>\r\n\t\t\t\t\t<span datatype=\"count\">{companies[name].count}</span>\r\n\t\t\t\t\t<span datatype=\"dividendPerShare\">{companies[name].dividendPerShare}</span>\r\n\t\t\t\t\t<span>{Math.ceil(companies[name].count * companies[name].dividendPerShare * 100) / 100}</span>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\t\tcompanyArr.push(arrItem);\r\n\t\t}\r\n\r\n\t\treturn companyArr\r\n\t};\r\n\t// Рендер футера с налогами\r\n\tfunction renderFooter(companies) {\r\n\t\tconst companyArr = [];\r\n\r\n\t\tlet beforeTax = 0;\r\n\t\tlet afterTax = 0;\r\n\r\n\t\tfor (let name in companies) {\r\n\t\t\tif (props.currency !== companies[name].currency) continue;\r\n\r\n\t\t\tconst bt = companies[name].count * companies[name].dividendPerShare;\r\n\t\t\tconst at = bt - (bt * 0.13);\r\n\r\n\t\t\tbeforeTax +=bt;\r\n\t\t\tafterTax +=at;\r\n\t\t}\r\n\r\n\t\tconst arrItem = (\r\n\t\t\t<div key={afterTax} className={classes.footer}>\r\n\t\t\t\t<div className={classes.Total}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\tПрибыль до вычета налогов\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{Math.ceil((beforeTax) * 100) / 100}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={classes.Total}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\tПрибыль после вычета налогов\r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t<span className={classes.afterTax}>\r\n\t\t\t\t\t\t\t{Math.ceil((afterTax) * 100) / 100}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tcompanyArr.push(arrItem);\r\n\t\treturn companyArr\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.CompaniesList}>\r\n\t\t\t<div className={classes.header}>\r\n\t\t\t\t<span>Имя компании</span>\r\n\t\t\t\t<span>Акции </span>\r\n\t\t\t\t<span>Дивиденд</span>\r\n\t\t\t\t<span>Прибыль (год)</span>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\trenderCompanies(props.companies)\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\trenderFooter(props.companies)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default CompaniesList;\r\n","import React from \"react\";\r\nimport classes from './Title.module.scss'\r\n\r\nexport const Title = props => {\r\n\treturn (\r\n\t\t<div className={classes.Title}>\r\n\t\t\t<h4 className={classes.titleH}>\r\n\t\t\t\t{props.title}\r\n\t\t\t</h4>\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Button.module.scss'\r\n\r\nexport const Button = props => {\r\n\tconst cls = [classes.Button];\r\n\tprops.classses.forEach(item => cls.push(classes[item]));\r\n\r\n\treturn (\r\n\t\t<button disabled={!props.disabled} onClick={props.onClick} className={cls.join(' ')}>\r\n\t\t\t{props.name}\r\n\t\t</button>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Modal.module.scss'\r\n\r\nexport const Modal = props => {\r\n\tconst cls = [classes.Modal];\r\n\r\n\tif (!props.classes) {\r\n\r\n\t} else {\r\n\t\tprops.classes.forEach(item => cls.push(classes[item]));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={cls.join(' ')}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Input.module.scss'\r\n\r\nexport const Input = props => {\r\n\tconst cls = [classes.Input];\r\n\r\n\tif (!props.classes) {\r\n\t} else {\r\n\t\tprops.classes.forEach(item => cls.push(classes[item]))\r\n\t}\r\n\r\n\tif (!props.valid) {\r\n\t\tcls.push(classes.Error)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.InputWrapper}>\r\n\t\t\t<label\r\n\t\t\t\thtmlFor={props.htmlFor}\r\n\t\t\t>{props.label}</label>\r\n\r\n\t\t\t<input\r\n\t\t\t\tclassName={cls.join(' ')}\r\n\t\t\t\ttype={props.type || 'text'}\r\n\t\t\t\tid={props.htmlFor}\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t\tdefaultValue={props.defaultValue}\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\tautoComplete={props.autocomplete}\r\n\t\t\t/>\r\n\r\n\t\t\t<span className={classes.redText}>\r\n\t\t\t\t{\r\n\t\t\t\t\t!props.valid && props.touched\r\n\t\t\t\t\t\t? props.errorMessage || \"Введите корректное значение\"\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport classes from './Modal.module.scss'\r\n\r\nexport const FadeBg = props => {\r\n\treturn (\r\n\t\t<div onClick={props.onClick} className={classes.FadeBg}/>\r\n\t)\r\n};","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n\tbaseURL: \"https://my-finance-journal.firebaseio.com/users/\"\r\n})","import React from \"react\";\r\nimport classes from './Preloader.module.scss'\r\n\r\nexport const Preloader = props => {\r\n\treturn (\r\n\t\t<div className={classes.Preloader}>\r\n\t\t\t<div>\r\n\t\t\t\t<div/>\r\n\t\t\t\t<div/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};","import is from \"is_js\";\r\n\r\n// 2 функции для инпутов на главной\r\nexport function createAddFormInputs(config, validation) {\r\n\treturn {\r\n\t\t...config,\r\n\t\tvalidation,\r\n\t\tvalid: !validation,\r\n\t\ttouched: false,\r\n\t\tvalue: \"\"\r\n\t}\r\n}\r\n\r\nexport function createUpdFormInputs(config, validation) {\r\n\treturn {\r\n\t\t...config,\r\n\t\tvalidation,\r\n\t\tvalid: true,\r\n\t\ttouched: true,\r\n\t\tvalue: \"\"\r\n\t}\r\n}\r\n\r\nexport function createAddDepositInputs(config, validation) {\r\n\treturn {\r\n\t\t...config,\r\n\t\tvalidation,\r\n\t\tvalid: !validation,\r\n\t\ttouched: false,\r\n\t\tvalue: \"\"\r\n\t}\r\n}\r\n\r\n// Валидация параметров из validation\r\nexport function validateControl(value, validation) {\r\n\tif (!validation) return true;\r\n\r\n\tlet isValid = true;\r\n\r\n\tif (validation.required) {\r\n\t\tisValid = value.trim() !== '' && isValid\r\n\t}\r\n\tif (validation.type) {\r\n\t\tisValid = is.number(+value) && isValid\r\n\t}\r\n\t// if (validation.date) {\r\n\t// \tisValid = is.date(value) && isValid\r\n\t// }\r\n\r\n\treturn isValid\r\n}","import React from \"react\";\r\nimport classes from './Main.module.scss'\r\nimport CompaniesList from \"../../components/CompaniesList/CompaniesList\";\r\nimport {Title} from \"../../components/Title/Title\";\r\nimport {Button} from \"../../components/UI/Button/Button\";\r\nimport {Modal} from \"../../hoc/Modal/Modal\";\r\nimport {Input} from \"../../components/UI/Input/Input\";\r\nimport {FadeBg} from \"../../hoc/Modal/FadeBg\";\r\nimport axios from '../../axios/axios-settings'\r\nimport {Preloader} from \"../../components/Preloader/Preloader\";\r\nimport {createAddFormInputs, createUpdFormInputs, validateControl} from \"../../Modules/formValidation\";\r\n\r\n// Функции для генерации полей для инпутов\r\nfunction createOptionForAddInputs(name, errMessage, obj) {\r\n\treturn createAddFormInputs({\r\n\t\t\tlabel: name,\r\n\t\t\ttype: \"text\",\r\n\t\t\terrorMessage: errMessage,\r\n\t\t\tclassName: [\"\"],\r\n\t\t\tautocomplete: \"off\"\r\n\t\t}, obj\r\n\t)\r\n}\r\n\r\nfunction createOptionForUpdInputs(name, errMessage, obj) {\r\n\treturn createUpdFormInputs({\r\n\t\t\tlabel: name,\r\n\t\t\ttype: \"text\",\r\n\t\t\terrorMessage: errMessage,\r\n\t\t\tclassName: [\"\"],\r\n\t\t\tautocomplete: \"off\"\r\n\t\t}, obj\r\n\t)\r\n}\r\n\r\n// TODO: создать общую переменную this.state.key, которая будет определять пользователя\r\nexport default class Main extends React.Component {\r\n\tstate = {\r\n\t\tkey: \"aHmcqjPPBwXvW397FPL31TtkwfJ3\",\r\n\t\tnameForDelete: \"\",\r\n\t\tshowPreloader: true,\r\n\t\tisFormValid: false,\r\n\t\tmodals: {\r\n\t\t\tisOpenModalAddCompany: false,\r\n\t\t\tisOpenModalUpdateCompany: false\r\n\t\t},\r\n\t\tformAddInputs: {\r\n\t\t\tname: createOptionForAddInputs(\"Имя компании\", \"Поле не может быть пустым\", {required: true}),\r\n\t\t\tcount: createOptionForAddInputs(\"Количество акций\", \"Введите число\", {required: true, type: \"number\"}),\r\n\t\t\tdividendPerShare: createOptionForAddInputs(\"Размер дивидендов (в год)\", \"Введите число\", {\r\n\t\t\t\trequired: true,\r\n\t\t\t\ttype: \"number\"\r\n\t\t\t})\r\n\t\t},\r\n\t\tformUpdInputs: {\r\n\t\t\tcount: createOptionForUpdInputs(\"Количество акций\", \"Введите число\", {required: true, type: \"number\"}),\r\n\t\t\tdividendPerShare: createOptionForUpdInputs(\"Размер дивидендов (в год)\", \"Введите число\", {\r\n\t\t\t\trequired: true,\r\n\t\t\t\ttype: \"number\"\r\n\t\t\t})\r\n\t\t},\r\n\t\tcompany: {\r\n\t\t\tname: \"\",\r\n\t\t\tcount: \"\",\r\n\t\t\tdividendPerShare: \"\",\r\n\t\t\tcurrency: \"\"\r\n\t\t},\r\n\t\tcompanies: {},\r\n\t\tcurrency: [],\r\n\t};\r\n\r\n\tshowModalHandler = (e, popup) => {\r\n\t\tconst modals = {...this.state.modals};\r\n\t\tmodals[popup] = true;\r\n\r\n\t\tif (popup === \"isOpenModalUpdateCompany\") {\r\n\t\t\tconst nameForDelete = e.target.parentNode.querySelector('span').textContent;\r\n\t\t\tthis.setState({modals, nameForDelete});\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.setState({modals});\r\n\t};\r\n\tcloseModalHandler = (e, popup) => {\r\n\t\tconst modals = {...this.state.modals};\r\n\t\tconst formAddInputs = {...this.state.formAddInputs};\r\n\r\n\t\tmodals[popup] = false;\r\n\r\n\t\tlet isFormValid = false;\r\n\r\n\t\tObject.keys(formAddInputs).forEach(name => {\r\n\t\t\tconst control = {...formAddInputs[name]};\r\n\t\t\tcontrol.valid = false;\r\n\t\t\tcontrol.touched = false;\r\n\t\t\tformAddInputs[name] = control;\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tmodals,\r\n\t\t\tformAddInputs,\r\n\t\t\tisFormValid\r\n\t\t})\r\n\t};\r\n\r\n\t// Создание компании для того, чтобы отправить её в будущем в базу\r\n\tcreateCompany = (name, count, dividendPerShare, currency) => {\r\n\t\treturn {\r\n\t\t\t[name]: {\r\n\t\t\t\tcount,\r\n\t\t\t\tdividendPerShare,\r\n\t\t\t\tcurrency\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t// Обновление данных по компаниям\r\n\tupdateCompany = async () => {\r\n\t\tconst {name, count, dividendPerShare} = this.state.company;\r\n\r\n\t\tconst response = await axios.put(`/${this.state.key}/portfolio/companies/${name}/count.json`, count);\r\n\t\tawait axios.put(`/${this.state.key}/portfolio/companies/${name}/dividendPerShare.json`, dividendPerShare);\r\n\r\n\t\tif (response.status === 200) {\r\n\t\t\tthis.setState({showPreloader: true});\r\n\r\n\t\t\tthis.renderCompanies();\r\n\t\t\tthis.closeModalHandler(null, \"isOpenModalUpdateCompany\")\r\n\t\t}\r\n\t};\r\n\t// Удаление компаний\r\n\tdeletePositionHandler = async (name) => {\r\n\t\tconst response = await axios.delete(`/${this.state.key}/portfolio/companies/${name}.json`);\r\n\r\n\t\tif (response.status === 200) {\r\n\t\t\tthis.setState({showPreloader: true});\r\n\r\n\t\t\tthis.renderCompanies();\r\n\t\t\tthis.closeModalHandler(null, \"isOpenModalUpdateCompany\")\r\n\t\t}\r\n\t};\r\n\t// Собираю данные для редактирования/удаления компании (клик на имя компании)\r\n\tpreUpdateCompany = (e) => {\r\n\t\tconst company = Object.assign({}, this.state.company);\r\n\t\tconst parent = e.target.parentNode;\r\n\r\n\t\tcompany.name = e.target.textContent;\r\n\t\tcompany.count = parent.querySelector(\"span[datatype='count']\").textContent;\r\n\t\tcompany.dividendPerShare = parent.querySelector(\"span[datatype='dividendPerShare']\").textContent;\r\n\r\n\t\tthis.setState({company, isFormValid: true});\r\n\r\n\t\tthis.showModalHandler(e, \"isOpenModalUpdateCompany\");\r\n\t};\r\n\t// Отправка запроса на сервер и добавление компании в общий список\r\n\tmainModalFormAddCompany = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tconst {name, count, dividendPerShare, currency} = this.state.company;\r\n\t\t\tconst company = this.createCompany(name, count, dividendPerShare, currency);\r\n\t\t\tconst response = await axios.patch(`/${this.state.key}/portfolio/companies.json`, company);\r\n\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tconst modals = {...this.state.modals};\r\n\t\t\t\tmodals.isOpenModalAddCompany = false;\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcompany,\r\n\t\t\t\t\tmodals\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.renderCompanies();\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e)\r\n\t\t}\r\n\t};\r\n\r\n\t// Получаю значения из инпутов (onChange) и записываю их в компанию, чтобы потом отправлять её на сервер\r\n\tonChangeHandler(e, inputName, inputsObj) {\r\n\t\tconst company = {...this.state.company};\r\n\t\tconst Inputs = {...this.state[inputsObj]};\r\n\t\t// control - это name, count, dividensPerShare\r\n\t\tconst control = {...Inputs[inputName]};\r\n\r\n\t\t// Валидация\r\n\t\tcontrol.touched = true;\r\n\t\tcontrol.value = e.target.value;\r\n\t\tcontrol.valid = validateControl(control.value, control.validation);\r\n\r\n\t\tInputs[inputName] = control;\r\n\t\tcompany[inputName] = e.target.value;\r\n\r\n\t\tlet isFormValid = true;\r\n\r\n\t\t// Валидация формы (активные кнопки или нет)\r\n\t\tObject.keys(Inputs).forEach(name => {\r\n\t\t\tisFormValid = Inputs[name].valid && isFormValid;\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tcompany,\r\n\t\t\t[inputsObj]: Inputs,\r\n\t\t\tisFormValid\r\n\t\t});\r\n\t}\r\n\r\n\t// Select onChange\r\n\tselectHandler = (e) => {\r\n\t\tconst company = {...this.state.company};\r\n\t\tcompany.currency = e.target.value;\r\n\r\n\t\tthis.setState({company})\r\n\t};\r\n\t// Асинхронная операция на сервер, рендерит список компаний\r\n\trenderCompanies = async () => {\r\n\t\ttry {\r\n\t\t\t// Импорт портфеля пользователя\r\n\t\t\tconst response = await axios.get(`/${this.state.key}.json`);\r\n\t\t\t// Импорт компаний\r\n\t\t\tconst {companies} = response.data.portfolio;\r\n\t\t\t// Количество валют\r\n\t\t\tconst currency = [...this.state.currency];\r\n\t\t\tconst company = {...this.state.company}; // Импортирую ради того, чтобы задать валюту по умолчанию USD\r\n\t\t\tcompany.currency = \"USD\";\r\n\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tthis.setState({companies, company, showPreloader: false});\r\n\t\t\t\t// Ищу сколько всего валют\r\n\t\t\t\tObject.keys(this.state.companies).forEach(companyName => {\r\n\t\t\t\t\tconst crc = this.state.companies[companyName].currency;\r\n\t\t\t\t\tif (!currency.includes(crc)) currency.push(crc)\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setState({currency})\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e)\r\n\t\t}\r\n\t};\r\n\r\n\trenderInputs(name, defVal) {\r\n\t\treturn Object.keys(this.state[name]).map((inputName, index) => {\r\n\t\t\tconst inputObj = this.state[name][inputName];\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={inputName + index}\r\n\t\t\t\t\ttype={inputObj.type}\r\n\t\t\t\t\tvalue={inputObj.value}\r\n\t\t\t\t\tclasses={inputObj.className}\r\n\t\t\t\t\thtmlFor={inputName + index}\r\n\t\t\t\t\tvalid={inputObj.valid}\r\n\t\t\t\t\ttouched={inputObj.touched}\r\n\t\t\t\t\tlabel={inputObj.label}\r\n\t\t\t\t\tdefaultValue={defVal ? this.state.company[inputName] : null}\r\n\t\t\t\t\terrorMessage={inputObj.errorMessage}\r\n\t\t\t\t\tautocomplete={inputObj.autocomplete}\r\n\t\t\t\t\tonChange={e => this.onChangeHandler(e, inputName, name)}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.renderCompanies();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Main}>\r\n\t\t\t\t<Title title=\"Список компаний\"/>\r\n\t\t\t\t<h2>Дивиденды в портфеле</h2>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.showPreloader\r\n\t\t\t\t\t\t? <Preloader/>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\tthis.state.currency.map((currency, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className={classes.tableWrapper} key={index}>\r\n\t\t\t\t\t\t\t\t\t<h3>{currency}</h3>\r\n\t\t\t\t\t\t\t\t\t<CompaniesList\r\n\t\t\t\t\t\t\t\t\t\tcurrency={currency}\r\n\t\t\t\t\t\t\t\t\t\tcompanies={this.state.companies}\r\n\t\t\t\t\t\t\t\t\t\tshowModalHandlerDelete={e => this.preUpdateCompany(e)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t<div className={classes.addSection}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassses={[\"green\"]}\r\n\t\t\t\t\t\tname=\"Добавить компанию\"\r\n\t\t\t\t\t\tonClick={e => this.showModalHandler(e, \"isOpenModalAddCompany\")}\r\n\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* Модальное окно для добавления компании */}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.modals.isOpenModalAddCompany\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t\t\t<h3 className={classes.MainModalTitle}>Добавить компанию</h3>\r\n\r\n\t\t\t\t\t\t\t\t<form onSubmit={this.mainModalFormAddCompany}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis.renderInputs(\"formAddInputs\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<select onChange={this.selectHandler}>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"USD\">USD</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"RUB\">RUB</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.state.isFormValid}\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"blue\"]}\r\n\t\t\t\t\t\t\t\t\t\tname=\"Добавить компанию\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => this.showModalHandler(e, \"isOpenModalAddCompany\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t<FadeBg onClick={e => this.closeModalHandler(e, \"isOpenModalAddCompany\")}/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t{/* Модальное окно для удаления/редактирования компании */}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.modals.isOpenModalUpdateCompany\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t\t\t<h3 className={classes.deleteModal}>\r\n\t\t\t\t\t\t\t\t\tКарточка компании \"{this.state.nameForDelete}\"\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.renderInputs(\"formUpdInputs\", true)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<div className={classes.modalDeleteBtnBox}>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tname=\"Удалить\"\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"red\"]}\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => this.deletePositionHandler(this.state.nameForDelete)}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.state.isFormValid}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tname=\"Изменить\"\r\n\t\t\t\t\t\t\t\t\t\tclassses={[\"green\"]}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.updateCompany}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.state.isFormValid}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t<FadeBg onClick={e => this.closeModalHandler(e, \"isOpenModalUpdateCompany\")}/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React from \"react\";\r\nimport classes from './DepoDateAndAmount.module.scss'\r\n\r\nconst DepoDateAndAmount = props => {\r\n\tconst dep = props.depo;\r\n\t// Сознание нового массива дата-сумма\r\n\tconst newDep = dep.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\t// Получение правильного формата даты и времени\r\n\tconst getDate = date => {\r\n\t\tconst day = new Date(date).getDate();\r\n\t\tlet month = new Date(date).toLocaleDateString(\"ru\", {month: 'long',});\r\n\r\n\t\tmonth === 'март' ? month += \"a\" : month = month.slice(0, month.length - 1) + \"я\";\r\n\r\n\t\treturn [day, month].join(' ');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tnewDep.map((obj, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li onClick={props.onClick} data-currency={props.currency} data-year={new Date(obj.date).getFullYear()} data-id={obj.id} className={classes.li} key={index}>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{getDate(obj.date)}\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{obj.amount.toLocaleString(\"ru\")} {props.currency === 'rub' ? \"руб\" : props.currency === 'usd' ? \"$\" : null}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n};\r\n\r\nexport default DepoDateAndAmount;","import React from \"react\";\r\nimport classes from \"./DepoInnerWrapper.module.scss\";\r\nimport DepoDateAndAmount from \"../../components/DepoDateAndAmount/DepoDateAndAmount\";\r\nimport axios from \"../../axios/axios-settings\"\r\n\r\nexport default class DepoInnerWrapper extends React.Component {\r\n\tstate = {\r\n\t\tkey: \"aHmcqjPPBwXvW397FPL31TtkwfJ3\",\r\n\t\tisOpen: false\r\n\t};\r\n\r\n\tshowMoreHandler = () => {\r\n\t\tthis.setState({\r\n\t\t\tisOpen: !this.state.isOpen\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p onClick={this.showMoreHandler} className={classes.year}>\r\n\t\t\t\t\t{this.props.year} год\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<div className={classes.currency}>\r\n\t\t\t\t\t{this.state.isOpen\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tObject.keys(this.props.currency).map((currName, index) => {\r\n\t\t\t\t\t\t\t\t// Массив конкретной валюты (Usd или rub)\r\n\t\t\t\t\t\t\t\tconst currencyArr = this.props.currency[currName];\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={index} className={classes.DepoCurrency}>\r\n\t\t\t\t\t\t\t\t\t\t<h4 className={classes.name}>{currName === 'rub' ? \"Рубли\" : currName === \"usd\" ? \"Доллары\" : null}</h4>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t<DepoDateAndAmount\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrency={currName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdepo={currencyArr}/>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport classes from './Deposit.module.scss'\r\nimport {Input} from \"../../components/UI/Input/Input\";\r\nimport {createAddDepositInputs, validateControl} from \"../../Modules/formValidation\"\r\nimport {Button} from \"../../components/UI/Button/Button\";\r\nimport axios from \"../../axios/axios-settings\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {Preloader} from \"../../components/Preloader/Preloader\";\r\nimport DepoInnerWrapper from \"../DepoInnerWrapper/DepoInnerWrapper\";\r\nimport {Title} from \"../../components/Title/Title\";\r\nimport DepoDateAndAmount from \"../../components/DepoDateAndAmount/DepoDateAndAmount\";\r\n\r\n// Функции для генерации полей для инпутов\r\nfunction createOptionForAddInputs(errMessage, placeholder, obj) {\r\n\treturn createAddDepositInputs({\r\n\t\t\ttype: \"text\",\r\n\t\t\terrorMessage: errMessage,\r\n\t\t\tclassName: [\"depositInput\"],\r\n\t\t\tplaceholder: placeholder,\r\n\t\t\tautocomplete: \"off\"\r\n\t\t}, obj\r\n\t)\r\n}\r\n\r\nexport default class Deposit extends React.Component {\r\n\tstate = {\r\n\t\tkey: \"aHmcqjPPBwXvW397FPL31TtkwfJ3\",\r\n\t\tisFormValid: false,\r\n\t\tdeposit: {},\r\n\t\tformAddDepoInputs: {\r\n\t\t\tamount: createOptionForAddInputs(\"Введите число\", \"Введите сумму\", {required: true, type: \"number\"}),\r\n\t\t},\r\n\t\tdepositData: {\r\n\t\t\tcurrency: \"usd\",\r\n\t\t\tamount: \"\",\r\n\t\t\tdate: new Date()\r\n\t\t},\r\n\t\tshowPreloader: true\r\n\r\n\t};\r\n\r\n\thandleChangeDate = date => {\r\n\t\tconst depositData = {...this.state.depositData};\r\n\t\tdepositData.date = date;\r\n\t\tthis.setState({depositData});\r\n\t};\r\n\tselectHandler = (e) => {\r\n\t\tconst depositData = {...this.state.depositData};\r\n\t\tdepositData.currency = e.target.value;\r\n\t\tthis.setState({depositData})\r\n\t};\r\n\r\n\t//TODO: Раскидать все в переменные по нормальному + настроить Datepicker (min max date и прочее)\r\n\tsubmitFormHandler = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst {date, amount, currency} = this.state.depositData;\r\n\t\tconst year = new Date(date).getFullYear();\r\n\t\tconst arr = await axios.get(`/${this.state.key}/portfolio/deposit/${year}/${currency}.json`);\r\n\t\tconst showPreloader = true;\r\n\r\n\t\t// Если год создаем впервые\r\n\t\tif (arr.data === null) {\r\n\t\t\tconst data = [];\r\n\r\n\t\t\tdata.push({\r\n\t\t\t\tamount: +amount,\r\n\t\t\t\tdate: date,\r\n\t\t\t\tid: data.length + Math.random()\r\n\t\t\t});\r\n\r\n\t\t\tconst response = await axios.put(`/${this.state.key}/portfolio/deposit/${year}/${currency}.json`, data);\r\n\t\t\tconst isFormValid = false;\r\n\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tthis.setState({showPreloader, isFormValid});\r\n\t\t\t\tthis.renderDeposits();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Если уже имеем массив\r\n\t\tarr.data.push({\r\n\t\t\tamount: +amount,\r\n\t\t\tdate: date,\r\n\t\t\tid: arr.data.length + Math.random()\r\n\t\t});\r\n\r\n\t\tconst response = await axios.put(`/${this.state.key}/portfolio/deposit/${year}/${currency}.json`, arr.data);\r\n\t\tconst isFormValid = false;\r\n\r\n\t\tif (response.status === 200) {\r\n\t\t\tthis.setState({showPreloader, isFormValid});\r\n\t\t\tthis.renderDeposits();\r\n\t\t}\r\n\t};\r\n\tonChangeHandler = (e, inputName, inputObj) => {\r\n\t\tconst depositData = {...this.state.depositData};\r\n\t\t// Клонирую объект с инпутами\r\n\t\tconst inputs = {...this.state[inputObj]};\r\n\t\t// controlName - amount, date\r\n\t\tconst controlName = {...inputs[inputName]};\r\n\r\n\t\t// Валидация\r\n\t\tcontrolName.touched = true;\r\n\t\tcontrolName.value = e.target.value;\r\n\t\tcontrolName.valid = validateControl(controlName.value, controlName.validation);\r\n\r\n\t\tdepositData[inputName] = e.target.value;\r\n\t\tinputs[inputName] = controlName;\r\n\r\n\t\tlet isFormValid = true;\r\n\r\n\t\t// Валидация формы (активные кнопки или нет)\r\n\t\tObject.keys(inputs).forEach(name => {\r\n\t\t\tisFormValid = inputs[name].valid && isFormValid;\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tdepositData,\r\n\t\t\t[inputObj]: inputs,\r\n\t\t\tisFormValid\r\n\t\t});\r\n\t};\r\n\tdeleteDeposit = async (e) => {\r\n\t\tconst data = e.target.dataset;\r\n\t\tconst showPreloader = true;\r\n\r\n\t\tconst response = await axios.get(`/${this.state.key}/portfolio/deposit/${data.year}/${data.currency}.json`);\r\n\r\n\t\tif (response.data.length === 0) {\r\n\t\t\tconst del = await axios.delete(`/${this.state.key}/portfolio/deposit/${data.year}/${data.currency}.json`);\r\n\r\n\t\t\tif (del.status === 200) {\r\n\t\t\t\tthis.setState({showPreloader});\r\n\t\t\t\tthis.renderDeposits();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst result = response.data.filter((item, index) => item.id !== +data.id);\r\n\t\t\tconst del = await axios.put(`/${this.state.key}/portfolio/deposit/${data.year}/${data.currency}.json`, result);\r\n\r\n\t\t\tif (del.status === 200) {\r\n\t\t\t\tthis.setState({showPreloader});\r\n\t\t\t\tthis.renderDeposits();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trenderInpus(inputName) {\r\n\t\treturn Object.keys(this.state[inputName]).map((name, index) => {\r\n\t\t\tconst inputObj = this.state[inputName][name];\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={name + index}\r\n\t\t\t\t\ttype={inputObj.type}\r\n\t\t\t\t\tvalue={inputObj.value}\r\n\t\t\t\t\tclasses={inputObj.className}\r\n\t\t\t\t\thtmlFor={name + index}\r\n\t\t\t\t\tvalid={inputObj.valid}\r\n\t\t\t\t\ttouched={inputObj.touched}\r\n\t\t\t\t\tlabel={inputObj.label}\r\n\t\t\t\t\tplaceholder={inputObj.placeholder}\r\n\t\t\t\t\terrorMessage={inputObj.errorMessage}\r\n\t\t\t\t\tautocomplete={inputObj.autocomplete}\r\n\t\t\t\t\tonChange={e => this.onChangeHandler(e, name, inputName)}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})\r\n\t};\r\n\r\n\tasync renderDeposits() {\r\n\t\t// TODO: создать общую переменную UserKey, которая будет определять пользователя\r\n\t\ttry {\r\n\t\t\t// Ключ (ID пользователя)\r\n\t\t\tconst userKey = this.state.key;\r\n\t\t\t// Импорт портфеля пользователя\r\n\t\t\tconst response = await axios.get(`/${userKey}.json`);\r\n\t\t\t// Импорт компаний\r\n\t\t\tconst {deposit} = response.data.portfolio;\r\n\t\t\tconst showPreloader = false;\r\n\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tthis.setState({deposit, showPreloader})\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e)\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.renderDeposits();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Deposit}>\r\n\t\t\t\t{/* Форма ввода пополнения */}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Title title=\"Список пополнений\"/>\r\n\r\n\t\t\t\t\t<h3 className={classes.infoTitle}>\r\n\t\t\t\t\t\tДобавить пополнение\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<form onSubmit={this.submitFormHandler}>\r\n\t\t\t\t\t\t<div className={classes.inputsBox}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.renderInpus(\"formAddDepoInputs\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\tselected={this.state.depositData.date}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangeDate}\r\n\t\t\t\t\t\t\t\tclassName={classes.datePicker}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<select className={classes.select} onChange={this.selectHandler}>\r\n\t\t\t\t\t\t\t\t<option value=\"usd\">USD</option>\r\n\t\t\t\t\t\t\t\t<option value=\"rub\">RUB</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassses={[\"green\", \"addDepo\"]}\r\n\t\t\t\t\t\t\tname=\"Добавить пополнение\"\r\n\t\t\t\t\t\t\tdisabled={this.state.isFormValid}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/*Общий контейнер для пополнения и статистики*/}\r\n\t\t\t\t<div className={classes.depoAndStatistic}>\r\n\t\t\t\t\t{/*Пополнения по годам*/}\r\n\t\t\t\t\t<h3 className={classes.infoTitle}>Общая информация по пополнениям</h3>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.showPreloader\r\n\t\t\t\t\t\t\t? <Preloader/>\r\n\t\t\t\t\t\t\t: this.state.deposit === undefined\r\n\t\t\t\t\t\t\t? <div className={classes.noDeposit}> У вас пока не было пополнений </div>\r\n\t\t\t\t\t\t\t: <div className={classes.DepoYear}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tObject.keys(this.state.deposit).map((year, index) => {\r\n\t\t\t\t\t\t\t\t\t\tconst currency = this.state.deposit[year];\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn <DepoInnerWrapper\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.deleteDeposit}\r\n\t\t\t\t\t\t\t\t\t\t\tcurrency={currency}\r\n\t\t\t\t\t\t\t\t\t\t\tyear={year}\r\n\t\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React from \"react\";\r\nimport classes from \"./LinksInsideSidebar.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst LinksInsideSidebar = props => {\r\n\treturn (\r\n\t\t<nav className={classes.LinksInsideSidebar}>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to={\"/\"}> Главная </NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to={\"/depo\"}> Пополнения </NavLink>\r\n\t\t\t</li>\r\n\t\t</nav>\r\n\t)\r\n};\r\n\r\nexport default LinksInsideSidebar;","import React from \"react\";\r\nimport classes from './SidebarNavigation.module.scss'\r\nimport LinksInsideSidebar from \"../../components/LinksInsideSidebar/LinksInsideSidebar\";\r\n\r\nexport default class SidebarNavigation extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className={classes.SidebarNavigation}>\r\n\t\t\t\t<LinksInsideSidebar/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport classes from './Header.module.scss'\r\n\r\nconst Header = props => {\r\n\treturn (\r\n\t\t<div className={classes.Header}>\r\n\t\t\tFinance Journal\r\n\t\t</div>\r\n\t)\r\n\r\n};\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport \"./App.scss\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport Main from \"./container/Main/Main\";\r\nimport Deposit from \"./container/Deposit/Deposit\";\r\nimport SidebarNavigation from \"./container/SidebarNavigation/SidebarNavigation\";\r\nimport Header from \"./components/Header/Header\";\r\nimport {Route, Switch} from \"react-router-dom\"\r\n\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<Header/>\r\n\r\n\t\t\t\t<div className=\"main-page-wrapper\">\r\n\t\t\t\t\t<SidebarNavigation/>\r\n\r\n\t\t\t\t\t<div className={'main-page-content'}>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route path={\"/depo\"} component={Deposit}/>\r\n\t\t\t\t\t\t\t<Route path={\"/\"} component={Main}/>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nconst app = (\r\n\t<BrowserRouter>\r\n\t  <App/>\r\n\t</BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTitle\":\"Deposit_infoTitle__1o1Ty\",\"depoAndStatistic\":\"Deposit_depoAndStatistic__3URpZ\",\"addInputWrapper\":\"Deposit_addInputWrapper__10Vxq\",\"inputsBox\":\"Deposit_inputsBox__2QTBw\",\"datePicker\":\"Deposit_datePicker__2Af0v\",\"select\":\"Deposit_select__TmJnj\",\"DepoYear\":\"Deposit_DepoYear__2IYYy\",\"noDeposit\":\"Deposit_noDeposit__1RJZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"CompaniesList_row__tp4nF\",\"header\":\"CompaniesList_header__1z49L\",\"CompanyName\":\"CompaniesList_CompanyName__2aWj7\",\"Total\":\"CompaniesList_Total__3hGTS\",\"afterTax\":\"CompaniesList_afterTax__BpW_O\",\"Actions\":\"CompaniesList_Actions__9R6TN\",\"LinksInsideSidebar\":\"CompaniesList_LinksInsideSidebar__1nakK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__nqTMN\",\"MainModalTitle\":\"Main_MainModalTitle__qnLIa\",\"MaindeleteModal\":\"Main_MaindeleteModal__1qg2h\",\"addSection\":\"Main_addSection__1HoBv\",\"modalDeleteBtnBox\":\"Main_modalDeleteBtnBox__vtkJH\",\"deleteModal\":\"Main_deleteModal__1xfYO\",\"tableWrapper\":\"Main_tableWrapper__390c2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2quG7\",\"InputWrapper\":\"Input_InputWrapper__3uapM\",\"Error\":\"Input_Error__29Muj\",\"redText\":\"Input_redText__1IoDx\",\"depositInput\":\"Input_depositInput__3CU92\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__7fSAt\",\"FadeBg\":\"Modal_FadeBg__2Imzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"year\":\"DepoInnerWrapper_year__1gc25\",\"currency\":\"DepoInnerWrapper_currency__Lg0hb\",\"DepoCurrency\":\"DepoInnerWrapper_DepoCurrency__1ySPX\",\"name\":\"DepoInnerWrapper_name__3hEMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__2Z_yt\",\"titleH\":\"Title_titleH__eupkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3bOL9\",\"green\":\"Button_green__3e1jU\",\"blue\":\"Button_blue__sg7FF\",\"red\":\"Button_red__17dDb\",\"addDepo\":\"Button_addDepo__bhl6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__Jfo2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__12uMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"DepoDateAndAmount_li__2gAp1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidebarNavigation\":\"SidebarNavigation_SidebarNavigation__1LMHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinksInsideSidebar\":\"LinksInsideSidebar_LinksInsideSidebar__1Lcd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__B089z\"};"],"sourceRoot":""}